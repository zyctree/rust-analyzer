var searchIndex = JSON.parse('{\
"base_db":{"doc":"base_db defines basic database traits. The concrete DB is …","t":[0,17,8,11,11,11,11,11,11,3,12,12,12,11,3,3,12,12,12,3,12,12,12,12,12,12,12,3,3,3,12,3,3,12,12,4,13,13,13,3,3,12,12,12,8,10,3,12,4,13,13,13,3,12,3,12,3,3,12,12,3,12,12,3,12,3,8,10,8,10,11,3,12,12,3,12,12,17,8,10,10,10,8,10,10,10,10,3,3,11,11,3,11,11,3,12,12,11,11,11,11,8,10,10,10,10,10,10,10,10,10,10,3,3,11,11,3,11,11,3,11,11,3,11,11,3,12,12,12,12,11,11,11,11,3,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["fixture","WORKSPACE","WithFixture","with_single_file","with_files","with_position","with_range","with_range_or_offset","test_crate","ChangeFixture","file_position","files","change","parse","Canceled","Change","roots","files_changed","crate_graph","CrateData","root_file_id","edition","display_name","cfg_options","env","dependencies","proc_macro","CrateDisplayName","CrateGraph","CrateId","0","CrateName","Dependency","crate_id","name","Edition","Edition2015","Edition2018","Edition2021","Env","ProcMacro","name","kind","expander","ProcMacroExpander","expand","ProcMacroId","0","ProcMacroKind","CustomDerive","FuncLike","Attr","SourceRoot","is_library","SourceRootId","0","FileSet","AnchoredPath","anchor","path","AnchoredPathBuf","anchor","path","FileId","0","VfsPath","Upcast","upcast","CheckCanceled","check_canceled","catch_canceled","FilePosition","file_id","offset","FileRange","file_id","range","DEFAULT_LRU_CAP","FileLoader","file_text","resolve_path","relevant_crates","SourceDatabase","parse","crate_graph","set_crate_graph","set_crate_graph_with_durability","SourceDatabaseStorage","ParseQuery","in_db","in_db_mut","CrateGraphQuery","in_db","in_db_mut","SourceDatabaseGroupStorage__","parse","crate_graph","new","fmt_index","maybe_changed_since","for_each_query","SourceDatabaseExt","file_text","set_file_text","set_file_text_with_durability","file_source_root","set_file_source_root","set_file_source_root_with_durability","source_root","set_source_root","set_source_root_with_durability","source_root_crates","SourceDatabaseExtStorage","FileTextQuery","in_db","in_db_mut","FileSourceRootQuery","in_db","in_db_mut","SourceRootQuery","in_db","in_db_mut","SourceRootCratesQuery","in_db","in_db_mut","SourceDatabaseExtGroupStorage__","file_text","file_source_root","source_root","source_root_crates","new","fmt_index","maybe_changed_since","for_each_query","FileLoaderDelegate","0","impl_intern_key","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","fmt","default","cmp","cmp","clone","clone","clone","clone","clone","hash","hash","from","partial_cmp","partial_cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","file_text","resolve_path","relevant_crates","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","index","hash","hash","hash","hash","hash","hash","hash","from_str","from_iter","execute","execute","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","throw","new_local","new_library","path_for_file","file_for_path","iter","new","normalize_dashes","from_canonical_name","add_crate_root","add_dep","is_empty","iter","transitive_deps","transitive_rev_deps","crates_in_topological_order","crate_id_for_crate_root","extend","patch_cfg_if","shift","set","get","iter","new","set_roots","change_file","set_crate_graph","apply","len","resolve_path","file_for_path","path_for_file","insert","iter","new_virtual_path","as_path","join","pop","starts_with","parent","name_and_extension"],"q":["base_db","base_db::fixture","","","","","","","","","","","","","base_dbbase_db::fixture","","","","","","","base_dbd":["A set of high-level utility fixture methods to use in …","","","","","","","","","","","","","","An “error” signifying that the operation was canceled.","Encapsulate a bunch of raw <code>.set</code> calls on the database.","","","","","","","A name used in the package’s project declaration: for …","","","","","","<code>CrateGraph</code> is a bit of information which turns a set of …","","","","","","","","","","","","","","","","","","","","","","","","","Sysroot or crates.io library.","Files are grouped into source roots. A source root is a …","","A set of [<code>VfsPath</code>]s identified by [<code>FileId</code>]s.","Path relative to a file.","File that this path is relative to.","Path relative to <code>anchor</code>’s containing directory.","Path relative to a file.","File that this path is relative to.","Path relative to <code>anchor</code>’s containing directory.","Handle to a file in [<code>Vfs</code>]","","Path in <code>Vfs</code>.","","","","Aborts current query if there are pending changes.","","","","","","","","","","Text of the file.","","","Database which stores all significant input facts: source …","","The crate graph.","Set the value of the <code>crate_graph</code> input.","Set the value of the <code>crate_graph</code> input and promise that …","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","We don’t want to give HIR knowledge of source roots, …","","Set the value of the <code>file_text</code> input.","Set the value of the <code>file_text</code> input and promise that its …","Path to a file, relative to the root of its source root. …","Set the value of the <code>file_source_root</code> input.","Set the value of the <code>file_source_root</code> input and promise …","Contents of the source root.","Set the value of the <code>source_root</code> input.","Set the value of the <code>source_root</code> input and promise that …","","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","Silly workaround for cyclic deps between the traitsreates a crate name, checking for dashes in the string …","Creates a crate name, unconditionally replacing the …","","","","","","Returns an iterator over all transitive dependencies of …","Returns all transitive reverse dependencies of the given …","Returns all crates in the graph, sorted in topological …","","Extends this crate graph by adding a complete disjoint …","","","","","","","","","","","Returns the number of stored paths.","Get the id of the file corresponding to <code>path</code>.","Get the id corresponding to <code>path</code> if it exists in the set.","Get the path corresponding to <code>file</code> if it exists in the …","Insert the <code>file_id, path</code> pair into the set.","Iterate over this set’s ids.","Creates an “in-memory” path from <code>/</code>-separated string.","Returns the <code>AbsPath</code> representation of <code>self</code> if <code>self</code> is on …","Creates a new <code>VfsPath</code> with <code>path</code> adjoined to <code>self</code>.","Remove the last component of <code>self</code> if there is one.","Returns <code>true</code> if <code>other</code> is a prefix of <code>self</code>.","Returns the <code>VfsPath</code> without its final component, if there …","Returns <code>self</code>’s base name and file extension."],"i":[0,0,0,1,1,1,1,1,1,0,2,2,2,2,0,0,3,3,3,0,4,4,4,4,4,4,4,0,0,0,5,0,0,6,6,0,7,7,7,0,0,8,8,8,0,9,0,10,0,11,11,11,0,12,0,13,0,0,14,14,0,15,15,0,16,0,0,17,0,18,18,0,19,19,0,20,20,0,0,21,21,21,0,22,22,22,22,0,0,23,23,0,24,24,0,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,26,26,0,0,27,27,0,28,28,0,29,29,0,30,30,0,31,31,31,31,31,31,31,31,0,32,0,33,33,33,33,33,33,33,33,33,33,33,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,34,34,34,34,34,34,34,34,34,34,5,5,5,5,5,5,5,5,5,5,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,8,8,8,8,8,8,8,8,8,8,4,4,4,4,4,4,4,4,4,4,7,7,7,7,7,7,7,7,7,7,7,37,37,37,37,37,37,37,37,37,37,6,6,6,6,6,6,6,6,6,6,3,3,3,3,3,3,3,2,2,2,2,2,2,2,38,38,38,38,38,38,38,38,38,38,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,39,39,39,39,39,39,39,39,39,39,39,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,40,40,40,40,40,40,40,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,41,41,41,41,41,41,41,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,32,32,32,32,32,32,32,39,38,39,16,15,39,16,38,14,16,39,39,16,39,39,39,15,15,14,14,38,38,16,16,39,16,15,14,38,32,32,32,36,33,13,12,34,5,35,36,10,11,8,4,7,37,6,19,20,34,37,3,23,24,27,28,29,30,13,5,7,33,33,13,13,12,12,34,34,5,5,35,35,36,36,10,10,11,8,4,4,7,37,37,6,6,20,20,13,5,7,35,36,33,13,12,34,5,35,36,10,11,8,4,7,37,6,3,19,20,23,24,27,28,29,30,33,35,36,7,34,33,13,5,35,36,10,7,7,37,23,30,23,24,27,28,29,30,33,12,12,12,12,12,35,35,36,34,34,34,34,34,34,34,34,34,34,5,37,37,37,3,3,3,3,3,38,38,38,38,38,38,39,39,39,39,39,39,39],"f":[null,null,null,[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[],["crateid",3]],null,null,null,null,[[["str",15]],["changefixture",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["option",4],["env",3],["subtree",3]],[["subtree",3],["result",4],["expansionerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[]],[[],[["result",4],["canceled",3]]],null,null,null,null,null,null,null,null,[[["fileid",3]],[["string",3],["arc",3]]],[[["anchoredpath",3]],[["option",4],["fileid",3]]],[[["fileid",3]],[["arc",3],["fxhashset",6]]],null,[[["fileid",3]],[["sourcefile",3],["parse",3]]],[[],[["arc",3],["crategraph",3]]],[[["arc",3],["crategraph",3]]],[[["arc",3],["crategraph",3],["durability",3]]],null,null,[[["sourcedatabase",8]],["querytable",3]],[[["sourcedatabase",8]],["querytablemut",3]],null,[[["sourcedatabase",8]],["querytable",3]],[[["sourcedatabase",8]],["querytablemut",3]],null,null,null,[[["u16",15]]],[[["databasekeyindex",3],["sourcedatabase",8],["formatter",3]],["result",6]],[[["databasekeyindex",3],["sourcedatabase",8],["revision",3]],["bool",15]],[[["runtime",3],["fnmut",8]]],null,[[["fileid",3]],[["string",3],["arc",3]]],[[["arc",3],["fileid",3],["string",3]]],[[["fileid",3],["arc",3],["string",3],["durability",3]]],[[["fileid",3]],["sourcerootid",3]],[[["sourcerootid",3],["fileid",3]]],[[["sourcerootid",3],["fileid",3],["durability",3]]],[[["sourcerootid",3]],[["arc",3],["sourceroot",3]]],[[["sourcerootid",3],["arc",3],["sourceroot",3]]],[[["sourcerootid",3],["arc",3],["sourceroot",3],["durability",3]]],[[["sourcerootid",3]],[["arc",3],["fxhashset",6]]],null,null,[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],null,[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],null,[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],null,[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],null,null,null,null,null,[[["u16",15]]],[[["sourcedatabaseext",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["sourcedatabaseext",8],["databasekeyindex",3],["revision",3]],["bool",15]],[[["runtime",3],["fnmut",8]]],null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[],["fileset",3]],[[["vfspath",3]],["ordering",4]],[[["fileid",3]],["ordering",4]],[[],["anchoredpathbuf",3]],[[],["vfspath",3]],[[],["fileid",3]],[[],["fileset",3]],[[],["anchoredpath",3]],[[]],[[]],[[["abspathbuf",3]],["vfspath",3]],[[["fileid",3]],[["ordering",4],["option",4]]],[[["vfspath",3]],[["ordering",4],["option",4]]],[[["vfspath",3]],["bool",15]],[[["vfspath",3]],["bool",15]],[[["anchoredpathbuf",3]],["bool",15]],[[["anchoredpathbuf",3]],["bool",15]],[[["anchoredpath",3]],["bool",15]],[[["anchoredpath",3]],["bool",15]],[[["fileset",3]],["bool",15]],[[["fileset",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["fileid",3]],[["string",3],["arc",3]]],[[["anchoredpath",3]],[["option",4],["fileid",3]]],[[["fileid",3]],[["arc",3],["fxhashset",6]]],[[["cratename",3]],["cratedisplayname",3]],[[],["canceled",3]],[[],["sourcerootid",3]],[[],["sourceroot",3]],[[],["crategraph",3]],[[],["crateid",3]],[[],["cratename",3]],[[],["cratedisplayname",3]],[[],["procmacroid",3]],[[],["procmacrokind",4]],[[],["procmacro",3]],[[],["cratedata",3]],[[],["edition",4]],[[],["env",3]],[[],["dependency",3]],[[],["fileposition",3]],[[],["filerange",3]],[[],["crategraph",3]],[[],["env",3]],[[],["change",3]],[[],["parsequery",3]],[[],["crategraphquery",3]],[[],["filetextquery",3]],[[],["filesourcerootquery",3]],[[],["sourcerootquery",3]],[[],["sourcerootcratesquery",3]],[[["sourcerootid",3]],["ordering",4]],[[["crateid",3]],["ordering",4]],[[["edition",4]],["ordering",4]],[[["canceled",3]],["bool",15]],[[["canceled",3]],["bool",15]],[[["sourcerootid",3]],["bool",15]],[[["sourcerootid",3]],["bool",15]],[[["sourceroot",3]],["bool",15]],[[["sourceroot",3]],["bool",15]],[[["crategraph",3]],["bool",15]],[[["crategraph",3]],["bool",15]],[[["crateid",3]],["bool",15]],[[["crateid",3]],["bool",15]],[[["cratename",3]],["bool",15]],[[["cratename",3]],["bool",15]],[[["cratedisplayname",3]],["bool",15]],[[["cratedisplayname",3]],["bool",15]],[[["procmacroid",3]],["bool",15]],[[["procmacroid",3]],["bool",15]],[[["procmacrokind",4]],["bool",15]],[[["procmacro",3]],["bool",15]],[[["cratedata",3]],["bool",15]],[[["cratedata",3]],["bool",15]],[[["edition",4]],["bool",15]],[[["env",3]],["bool",15]],[[["env",3]],["bool",15]],[[["dependency",3]],["bool",15]],[[["dependency",3]],["bool",15]],[[["filerange",3]],["bool",15]],[[["filerange",3]],["bool",15]],[[["sourcerootid",3]],[["ordering",4],["option",4]]],[[["crateid",3]],[["ordering",4],["option",4]]],[[["edition",4]],[["ordering",4],["option",4]]],[[],["str",15]],[[],["str",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["crateid",3]],["cratedata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["intoiterator",8]]],[[]],[[]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[]],[[["fileset",3]],["sourceroot",3]],[[["fileset",3]],["sourceroot",3]],[[["fileid",3]],[["vfspath",3],["option",4]]],[[["vfspath",3]],[["option",4],["fileid",3]]],[[]],[[["str",15]],[["result",4],["str",15],["cratename",3]]],[[["str",15]],["cratename",3]],[[["string",3]],["cratedisplayname",3]],[[["env",3],["vec",3],["cfgoptions",3],["cratedisplayname",3],["edition",4],["option",4],["fileid",3],["procmacro",3]],["crateid",3]],[[["crateid",3],["cratename",3]],[["cyclicdependencieserror",3],["result",4]]],[[],["bool",15]],[[]],[[["crateid",3]]],[[["crateid",3]]],[[],[["vec",3],["crateid",3]]],[[["fileid",3]],[["crateid",3],["option",4]]],[[["crategraph",3]],["u32",15]],[[],["bool",15]],[[["u32",15]],["crateid",3]],[[["string",3],["str",15]]],[[["str",15]],[["option",4],["string",3]]],[[]],[[],["change",3]],[[["vec",3],["sourceroot",3]]],[[["option",4],["fileid",3],["arc",3]]],[[["crategraph",3]]],[[["sourcedatabaseext",8]]],[[],["usize",15]],[[["anchoredpath",3]],[["option",4],["fileid",3]]],[[["vfspath",3]],[["fileid",3],["option",4]]],[[["fileid",3]],[["vfspath",3],["option",4]]],[[["vfspath",3],["fileid",3]]],[[]],[[["string",3]],["vfspath",3]],[[],[["abspath",3],["option",4]]],[[["str",15]],[["option",4],["vfspath",3]]],[[],["bool",15]],[[["vfspath",3]],["bool",15]],[[],[["option",4],["vfspath",3]]],[[],["option",4]]],"p":[[8,"WithFixture"],[3,"ChangeFixture"],[3,"Change"],[3,"CrateData"],[3,"CrateId"],[3,"Dependency"],[4,"Edition"],[3,"ProcMacro"],[8,"ProcMacroExpander"],[3,"ProcMacroId"],[4,"ProcMacroKind"],[3,"SourceRoot"],[3,"SourceRootId"],[3,"AnchoredPath"],[3,"AnchoredPathBuf"],[3,"FileId"],[8,"Upcast"],[8,"CheckCanceled"],[3,"FilePosition"],[3,"FileRange"],[8,"FileLoader"],[8,"SourceDatabase"],[3,"ParseQuery"],[3,"CrateGraphQuery"],[3,"SourceDatabaseGroupStorage__"],[8,"SourceDatabaseExt"],[3,"FileTextQuery"],[3,"FileSourceRootQuery"],[3,"SourceRootQuery"],[3,"SourceRootCratesQuery"],[3,"SourceDatabaseExtGroupStorage__"],[3,"FileLoaderDelegate"],[3,"Canceled"],[3,"CrateGraph"],[3,"CrateName"],[3,"CrateDisplayName"],[3,"Env"],[3,"FileSet"],[3,"VfsPath"],[3,"SourceDatabaseStorage"],[3,"SourceDatabaseExtStorage"]]},\
"cfg":{"doc":"cfg defines conditional compiling options, <code>cfg</code> attibute …","t":[4,13,13,12,12,4,13,13,13,13,13,3,3,11,11,11,11,3,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CfgAtom","Flag","KeyValue","key","value","CfgExpr","Invalid","Atom","All","Any","Not","DnfExpr","CfgOptions","check","insert_atom","insert_key_value","apply_diff","CfgDiff","len","InactiveReason","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","clone","clone","clone","default","cmp","eq","ne","eq","ne","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","is_target_defined","parse","fold","new","why_inactive","compute_enable_hints"],"q":["cfg","","","cfg::CfgAtom","","cfg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A simple configuration value passed in from the outside.","eg. <code>#[cfg(test)]</code>","eg. <code>#[cfg(target_os = \\\"linux\\\")]</code>","","","","","","","","","A <code>#[cfg]</code> directive in Disjunctive Normal Form (DNF).","Configuration options used for conditional compilation on …","","","","","","Returns the total number of atoms changed by this diff.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> when the atom comes from the target …","","Fold the cfg by querying all basic <code>Atom</code> and <code>KeyValue</code> …","","Computes a list of present or absent atoms in <code>opts</code> that …","Returns <code>CfgDiff</code> objects that would enable this directive …"],"i":[0,1,1,2,2,0,3,3,3,3,3,0,0,4,4,4,4,0,5,0,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,3,1,3,4,4,1,1,1,3,3,4,4,1,1,3,4,1,6,5,7,1,3,1,3,3,6,6,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cfgexpr",4]],[["bool",15],["option",4]]],[[["smolstr",3]]],[[["smolstr",3]]],[[["cfgdiff",3]]],null,[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["cfgatom",4]]],[[],["cfgatom",4]],[[],["cfgexpr",4]],[[],["cfgoptions",3]],[[],["cfgoptions",3]],[[["cfgatom",4]],["ordering",4]],[[["cfgatom",4]],["bool",15]],[[["cfgatom",4]],["bool",15]],[[["cfgexpr",4]],["bool",15]],[[["cfgexpr",4]],["bool",15]],[[["cfgoptions",3]],["bool",15]],[[["cfgoptions",3]],["bool",15]],[[["cfgatom",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["bool",15]],[[["subtree",3]],["cfgexpr",4]],[[["fn",8]],[["bool",15],["option",4]]],[[["cfgexpr",4]]],[[["cfgoptions",3]],[["inactivereason",3],["option",4]]],[[["cfgoptions",3]]]],"p":[[4,"CfgAtom"],[13,"KeyValue"],[4,"CfgExpr"],[3,"CfgOptions"],[3,"CfgDiff"],[3,"DnfExpr"],[3,"InactiveReason"]]},\
"flycheck":{"doc":"Flycheck provides the functionality needed to run …","t":[4,13,13,13,13,3,12,12,12,12,12,12,3,12,12,4,13,13,13,13,13,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,4,13,12,12,12,12,12,12,12,13,12,12,3,11,11,4,13,12,12,13,12,12,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Applicability","MachineApplicable","HasPlaceholders","MaybeIncorrect","Unspecified","Diagnostic","message","code","level","spans","children","rendered","DiagnosticCode","code","explanation","DiagnosticLevel","Ice","Error","Warning","Note","Help","DiagnosticSpan","file_name","byte_start","byte_end","line_start","line_end","column_start","column_end","is_primary","text","label","suggested_replacement","suggestion_applicability","expansion","DiagnosticSpanMacroExpansion","span","macro_decl_name","def_site_span","FlycheckConfig","CargoCommand","command","target_triple","all_targets","no_default_features","all_features","features","extra_args","CustomCommand","command","args","FlycheckHandle","spawn","update","Message","AddDiagnostic","workspace_root","diagnostic","Progress","id","progress","Progress","DidStart","DidCheckCrate","DidFinish","DidCancel","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","hash","hash","hash","hash","hash","hash","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","fmt","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","serialize","serialize","serialize","serialize","serialize","serialize","clone","clone","clone","clone","clone","clone","fmt","fmt","fmt","fmt","fmt","fmt","clone","eq","ne","fmt","fmt","fmt","fmt","fmt"],"q":["flycheck","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flycheck::FlycheckConfig","","","","","","","flycheck","flycheck::FlycheckConfig","","flycheck","","","","","flycheck::Message","","flycheck","flycheck::Message","","flycheck","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Whether a suggestion can be safely applied.","The suggested replacement can be applied automatically …","The suggested replacement has placeholders that will need …","The suggested replacement may be incorrect in some …","The suggested replacement will probably not work.","A diagnostic message generated by rustc","The error message of this diagnostic.","The associated error code for this diagnostic","“error: internal compiler error”, “error”, “…","A list of source code spans this diagnostic is associated …","Associated diagnostic messages.","The message as rustc would render it","The error code associated to this diagnostic.","The code itself.","An explanation for the code","The diagnostic level","Internal compiler error","Error","Warning","Note","Help","A section of the source code associated with a Diagnostic","The file name or the macro name this diagnostic comes …","The byte offset in the file where this diagnostic starts …","The byte offset in the file where this diagnostic ends.","1-based. The line in the file.","1-based. The line in the file.","1-based, character offset.","1-based, character offset.","Is this a “primary” span – meaning the point, or …","Source text from the start of line_start to the end of …","Label that should be placed at this location (if any)","If we are suggesting a replacement, this will contain text…","If the suggestion is approximate","Macro invocations that created the code at this span, if …","Macro expansion information associated with a diagnostic.","span where macro was applied to generate this code; note …","name of macro that was applied (e.g., “foo!” or “#[…","span where macro was defined (if known)","","","","","","","","","","","","","Flycheck wraps the shared state and communication …","","Schedule a re-start of the cargo check worker.","","Request adding a diagnostic with fixes included to a file","","","Request check progress notification to client","Flycheck instance ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,0,2,2,2,2,2,2,0,3,3,0,4,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,0,7,8,8,8,8,8,8,8,7,9,9,0,10,10,0,11,12,12,11,13,13,0,14,14,14,14,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,10,10,10,10,10,10,10,11,11,11,11,11,11,11,14,14,14,14,14,14,14,4,6,5,3,1,2,5,5,1,4,2,2,3,3,6,6,2,4,6,5,1,2,3,5,6,4,1,2,3,4,1,2,6,3,5,6,3,4,5,2,1,7,7,7,7,10,11,14,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["flycheckconfig",4],["pathbuf",3],["fn",8],["box",3]],["flycheckhandle",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["diagnosticspan",3]],["bool",15]],[[["diagnosticspan",3]],["bool",15]],[[["applicability",4]],["bool",15]],[[["diagnosticlevel",4]],["bool",15]],[[["diagnostic",3]],["bool",15]],[[["diagnostic",3]],["bool",15]],[[["diagnosticcode",3]],["bool",15]],[[["diagnosticcode",3]],["bool",15]],[[["diagnosticspanmacroexpansion",3]],["bool",15]],[[["diagnosticspanmacroexpansion",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[],[["diagnosticlevel",4],["result",4]]],[[],[["result",4],["diagnosticspanmacroexpansion",3]]],[[],[["result",4],["diagnosticspan",3]]],[[],[["result",4],["applicability",4]]],[[],[["diagnostic",3],["result",4]]],[[],[["diagnosticcode",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["diagnosticlevel",4]],[[],["applicability",4]],[[],["diagnostic",3]],[[],["diagnosticspanmacroexpansion",3]],[[],["diagnosticcode",3]],[[],["diagnosticspan",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["flycheckconfig",4]],[[["flycheckconfig",4]],["bool",15]],[[["flycheckconfig",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[4,"Applicability"],[3,"Diagnostic"],[3,"DiagnosticCode"],[4,"DiagnosticLevel"],[3,"DiagnosticSpan"],[3,"DiagnosticSpanMacroExpansion"],[4,"FlycheckConfig"],[13,"CargoCommand"],[13,"CustomCommand"],[3,"FlycheckHandle"],[4,"Message"],[13,"AddDiagnostic"],[13,"Progress"],[4,"Progress"]]},\
"hir":{"doc":"HIR (previously known as descriptors) provides a …","t":[0,3,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,8,10,10,10,10,11,3,12,3,3,3,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,3,12,12,3,12,12,0,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,3,3,3,3,3,3,3,3,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,8,10,10,10,4,13,13,13,8,16,10,4,13,13,13,13,13,13,13,3,12,3,12,4,13,13,12,12,4,13,13,13,13,13,3,4,13,13,13,3,3,3,3,3,4,13,13,13,0,3,12,12,12,3,12,3,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,3,5,4,13,13,13,4,13,13,13,3,12,4,13,13,13,13,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,12,12,3,3,12,12,4,13,13,3,12,3,12,12,12,3,4,13,13,8,10,11,11,11,11,11,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,11,11,11,3,11,11,11,11,11,11,11,3,11,11,11,11,3,11,11,11,11,11,3,11,11,11,11,11,4,13,13,13,11,11,11,11,11,4,13,13,13,11,11,11,4,13,13,13,11,11,3,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,3,11,11,11,11,3,11,11,11,3,11,11,11,11,3,11,11,11,11,3,11,11,11,11,3,11,11,11,11,11,11,3,11,11,4,13,13,13,13,3,11,11,11,4,13,13,13,4,13,13,8,10,11,11,11,11,4,13,13,13,13,13,13,13,11,11,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,4,13,13,13,11,11,3,11,11,11,11,11,3,11,11,11,3,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,13,13,11,11,11,11,11,4,13,13,13,13,13,13,13,13,11,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["diagnostics","InactiveCode","file","node","cfg","opts","UnresolvedMacroCall","file","node","path","UnresolvedModule","file","decl","candidate","UnresolvedProcMacro","file","node","precise_location","macro_name","Diagnostic","code","message","display_source","as_any","is_experimental","DiagnosticCode","0","DiagnosticSink","DiagnosticSinkBuilder","IncorrectCase","file","ident","expected_case","ident_type","ident_text","suggested_text","MismatchedArgCount","file","call_expr","expected","found","MissingFields","file","field_list_parent","field_list_parent_path","missed_fields","MissingMatchArms","file","match_expr","arms","MissingOkOrSomeInTailExpr","file","expr","required","NoSuchField","file","field","RemoveThisSemicolon","file","expr","ReplaceFilterMapNextWithFindMap","file","next_expr","db","InternDatabase","intern_function","lookup_intern_function","intern_struct","lookup_intern_struct","intern_union","lookup_intern_union","intern_enum","lookup_intern_enum","intern_const","lookup_intern_const","intern_static","lookup_intern_static","intern_trait","lookup_intern_trait","intern_type_alias","lookup_intern_type_alias","intern_impl","lookup_intern_impl","intern_block","lookup_intern_block","InternDatabaseStorage","InternFunctionQuery","InternFunctionLookupQuery","InternStructQuery","InternStructLookupQuery","InternUnionQuery","InternUnionLookupQuery","InternEnumQuery","InternEnumLookupQuery","InternConstQuery","InternConstLookupQuery","InternStaticQuery","InternStaticLookupQuery","InternTraitQuery","InternTraitLookupQuery","InternTypeAliasQuery","InternTypeAliasLookupQuery","InternImplQuery","InternImplLookupQuery","InternBlockQuery","InternBlockLookupQuery","InternDatabaseGroupStorage__","intern_function","lookup_intern_function","intern_struct","lookup_intern_struct","intern_union","lookup_intern_union","intern_enum","lookup_intern_enum","intern_const","lookup_intern_const","intern_static","lookup_intern_static","intern_trait","lookup_intern_trait","intern_type_alias","lookup_intern_type_alias","intern_impl","lookup_intern_impl","intern_block","lookup_intern_block","DefDatabase","file_item_tree","crate_def_map","crate_def_map_query","block_def_map","struct_data","union_data","enum_data","impl_data","trait_data","type_alias_data","function_data","const_data","static_data","body_with_source_map","body","expr_scopes","generic_params","variants_attrs","fields_attrs","variants_attrs_source_map","fields_attrs_source_map","attrs","crate_lang_items","lang_item","import_map","field_visibilities","function_visibility","DefDatabaseStorage","FileItemTreeQuery","CrateDefMapQueryQuery","BlockDefMapQuery","StructDataQuery","UnionDataQuery","EnumDataQuery","ImplDataQuery","TraitDataQuery","TypeAliasDataQuery","FunctionDataQuery","ConstDataQuery","StaticDataQuery","BodyWithSourceMapQuery","BodyQuery","ExprScopesQuery","GenericParamsQuery","VariantsAttrsQuery","FieldsAttrsQuery","VariantsAttrsSourceMapQuery","FieldsAttrsSourceMapQuery","AttrsQuery","CrateLangItemsQuery","LangItemQuery","ImportMapQuery","FieldVisibilitiesQuery","FunctionVisibilityQuery","DefDatabaseGroupStorage__","file_item_tree","crate_def_map_query","block_def_map","struct_data","union_data","enum_data","impl_data","trait_data","type_alias_data","function_data","const_data","static_data","body_with_source_map","body","expr_scopes","generic_params","variants_attrs","fields_attrs","variants_attrs_source_map","fields_attrs_source_map","attrs","crate_lang_items","lang_item","import_map","field_visibilities","function_visibility","AstDatabase","ast_id_map","parse_or_expand","parse_macro_expansion","intern_macro","lookup_intern_macro","intern_eager_expansion","lookup_intern_eager_expansion","macro_arg","macro_arg_text","macro_def","macro_expand","expand_proc_macro","macro_expand_error","hygiene_frame","AstDatabaseStorage","AstIdMapQuery","HygieneFrameQuery","InternEagerExpansionQuery","InternMacroQuery","MacroArgTextQuery","MacroDefQuery","MacroExpandQuery","ParseMacroExpansionQuery","HirDatabase","infer","infer_query","ty","value_ty","impl_self_ty","const_param_ty","impl_trait","field_types","callable_item_signature","return_type_impl_traits","generic_predicates_for_param","generic_predicates","trait_environment","generic_defaults","inherent_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","intern_callable_def","lookup_intern_callable_def","intern_type_param_id","lookup_intern_type_param_id","intern_lifetime_param_id","lookup_intern_lifetime_param_id","intern_const_param_id","lookup_intern_const_param_id","intern_impl_trait_id","lookup_intern_impl_trait_id","intern_closure","lookup_intern_closure","associated_ty_data","trait_datum","struct_datum","impl_datum","fn_def_datum","fn_def_variance","adt_variance","associated_ty_value","trait_solve","trait_solve_query","program_clauses_for_chalk_env","HirDatabaseStorage","InferQueryQuery","TyQuery","ValueTyQuery","ImplSelfTyQuery","ConstParamTyQuery","ImplTraitQuery","FieldTypesQuery","CallableItemSignatureQuery","ReturnTypeImplTraitsQuery","GenericPredicatesForParamQuery","GenericPredicatesQuery","TraitEnvironmentQuery","GenericDefaultsQuery","InherentImplsInCrateQuery","TraitImplsInCrateQuery","TraitImplsInDepsQuery","InternCallableDefQuery","InternCallableDefLookupQuery","InternTypeParamIdQuery","InternTypeParamIdLookupQuery","InternLifetimeParamIdQuery","InternLifetimeParamIdLookupQuery","InternConstParamIdQuery","InternConstParamIdLookupQuery","InternImplTraitIdQuery","InternImplTraitIdLookupQuery","InternClosureQuery","InternClosureLookupQuery","AssociatedTyDataQuery","TraitDatumQuery","StructDatumQuery","ImplDatumQuery","FnDefDatumQuery","FnDefVarianceQuery","AdtVarianceQuery","AssociatedTyValueQuery","TraitSolveQueryQuery","ProgramClausesForChalkEnvQuery","HirDatabaseGroupStorage__","infer_query","ty","value_ty","impl_self_ty","const_param_ty","impl_trait","field_types","callable_item_signature","return_type_impl_traits","generic_predicates_for_param","generic_predicates","trait_environment","generic_defaults","inherent_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","intern_callable_def","lookup_intern_callable_def","intern_type_param_id","lookup_intern_type_param_id","intern_lifetime_param_id","lookup_intern_lifetime_param_id","intern_const_param_id","lookup_intern_const_param_id","intern_impl_trait_id","lookup_intern_impl_trait_id","intern_closure","lookup_intern_closure","associated_ty_data","trait_datum","struct_datum","impl_datum","fn_def_datum","fn_def_variance","adt_variance","associated_ty_value","trait_solve_query","program_clauses_for_chalk_env","InternedTypeParamId","InternedLifetimeParamId","InternedConstParamId","InternedOpaqueTyId","InternedClosureId","InternedCallableDefId","HasAttrs","attrs","docs","resolve_doc_path","Namespace","Types","Values","Macros","HasSource","Ast","source","PathResolution","Def","Local","TypeParam","ConstParam","SelfType","Macro","AssocItem","Semantics","db","SemanticsScope","db","CfgAtom","Flag","KeyValue","key","value","CfgExpr","Invalid","Atom","All","Any","Not","CfgOptions","StructKind","Tuple","Record","Unit","Attr","Attrs","AttrsWithOwner","Documentation","ExprScopes","PrefixKind","BySelf","Plain","ByCrate","import_map","ImportInfo","path","container","is_trait_assoc_item","ImportPath","segments","ImportMap","ImportKind","Module","Function","Adt","EnumVariant","Const","Static","Trait","TypeAlias","BuiltinType","AssociatedItem","SearchMode","Equals","Contains","Fuzzy","Query","search_dependencies","ItemInNs","Types","Values","Macros","ModuleSource","SourceFile","Module","BlockExpr","ModPath","kind","PathKind","Plain","Super","Crate","Abs","DollarCrate","Mutability","Shared","Mut","TypeRef","Never","Placeholder","Tuple","Path","RawPtr","Reference","Array","Slice","Fn","ImplTrait","DynTrait","Macro","Error","Visibility","Module","Public","known","isize","i8","i16","i32","i64","i128","usize","u8","u16","u32","u64","u128","f32","f64","bool","char","str","macro_rules","derive","doc","cfg","cfg_attr","std","core","alloc","iter","ops","future","result","boxed","option","Iterator","IntoIterator","Item","Try","Ok","Future","Result","Option","Output","Target","Box","RangeFrom","RangeFull","RangeInclusive","RangeToInclusive","RangeTo","Range","Neg","Not","Index","filter_map","next","iter_mut","len","is_empty","file","column","compile_error","line","module_path","assert","core_panic","std_panic","stringify","concat","include","include_bytes","include_str","format_args","format_args_nl","env","option_env","llvm_asm","asm","global_asm","Copy","Clone","Default","Debug","Hash","Ord","PartialOrd","Eq","PartialEq","abort","size_of","min_align_of","needs_drop","caller_location","size_of_val","min_align_of_val","add_with_overflow","sub_with_overflow","mul_with_overflow","wrapping_add","wrapping_sub","wrapping_mul","saturating_add","saturating_sub","rotate_left","rotate_right","ctpop","ctlz","cttz","bswap","bitreverse","discriminant_value","type_id","likely","unlikely","ptr_guaranteed_eq","ptr_guaranteed_ne","minnumf32","minnumf64","maxnumf32","rustc_peek","maxnumf64","type_name","variant_count","SELF_PARAM","SELF_TYPE","STATIC_LIFETIME","Name","ExpandResult","value","err","HirFileId","InFile","file_id","value","MacroCallId","LazyMacro","EagerMacro","MacroCallLoc","kind","MacroDefId","krate","kind","local_inner","MacroFile","Origin","Def","Call","HirDisplay","hir_fmt","into_displayable","display","display_truncated","display_source_code","display_test","Crate","CrateDependency","krate","name","dependencies","reverse_dependencies","transitive_reverse_dependencies","root_module","root_file","edition","display_name","query_external_importables","all","get_html_root_url","cfg","Module","ModuleDef","Module","Function","Adt","Variant","Const","Static","Trait","TypeAlias","BuiltinType","module","canonical_path","definition_visibility","name","diagnostics","name","krate","crate_root","children","parent","path_to_root","scope","visibility_of","diagnostics","declarations","impl_defs","find_use_path","find_use_path_prefixed","Field","FieldSource","Named","Pos","name","ty","parent_def","Struct","module","krate","name","fields","ty","repr","kind","Union","name","module","ty","fields","Enum","module","krate","name","variants","ty","Variant","module","parent_enum","name","fields","kind","Adt","Struct","Union","Enum","has_non_default_type_params","ty","module","krate","name","VariantDef","Struct","Union","Variant","fields","module","name","DefWithBody","Function","Static","Const","module","name","Function","module","krate","name","ret_type","self_param","assoc_fn_params","method_params","is_unsafe","diagnostics","has_body","debug_hir","Access","Shared","Exclusive","Owned","Param","ty","as_local","pattern_source","source","SelfParam","access","display","source","Const","module","krate","name","type_ref","Static","module","krate","name","is_mut","Trait","module","name","items","is_auto","TypeAlias","has_non_default_type_params","module","krate","type_ref","ty","name","BuiltinType","ty","name","MacroKind","Declarative","ProcMacro","Derive","BuiltIn","MacroDef","module","name","kind","AssocItem","Function","Const","TypeAlias","AssocItemContainer","Trait","Impl","AsAssocItem","as_assoc_item","name","module","container","containing_trait","GenericDef","Function","Adt","Trait","TypeAlias","Impl","Variant","Const","params","type_params","Local","is_param","as_self_param","name","is_self","is_mut","parent","module","ty","source","Label","module","parent","name","source","GenericParam","TypeParam","LifetimeParam","ConstParam","module","name","TypeParam","name","module","ty","trait_bounds","default","LifetimeParam","name","module","parent","ConstParam","name","module","parent","ty","Impl","all_in_crate","all_for_type","all_for_trait","trait_","self_ty","items","is_negative","module","krate","is_builtin_derive","Type","is_unit","is_bool","is_mutable_reference","is_usize","remove_ref","strip_references","is_unknown","impls_future","impls_fnonce","impls_trait","normalize_trait_assoc_type","is_copy","as_callable","is_closure","is_fn","is_packed","is_raw_ptr","contains_unknown","fields","tuple_fields","autoderef","iterate_assoc_items","type_arguments","iterate_method_candidates","iterate_path_candidates","as_adt","as_builtin","as_dyn_trait","applicable_inherent_traits","as_impl_traits","as_associated_type_parent_trait","walk","could_unify_with","Callable","CallableKind","Function","TupleStruct","TupleEnumVariant","Closure","kind","receiver_param","n_params","params","return_type","ScopeDef","ModuleDef","MacroDef","GenericParam","ImplSelfType","AdtSelfType","Local","Label","Unknown","all_items","HasVisibility","visibility","is_visible_from","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","resolver","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","fmt","cmp","default","clone","clone","clone","hash","hash","from","partial_cmp","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","deref","deref","hash","hash","hash","hash","hash","hash","hash","hash","cmp","cmp","code","message","display_source","as_any","is_experimental","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","fmt","fmt","storage","storage","as_call_id_with_errors","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","from","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","partial_cmp","partial_cmp","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","hash","hash","hash","hash","hash","hash","hash","from","from","from","from","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","fmt","cmp","default","default","default","default","default","default","default","default","clone","clone","clone","clone","clone","clone","clone","clone","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","eq","eq","ne","clone","fmt","fmt","hir_fmt","hash","hash","hash","hash","hash","hash","cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","from","from","from","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","clone","clone","clone","clone","clone","clone","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","is_experimental","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","is_experimental","code","message","display_source","as_any","partial_cmp","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","attrs","docs","resolve_doc_path","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","as_assoc_item","as_assoc_item","as_assoc_item","as_assoc_item","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","assoc_type_shorthand_candidates","new","parse","expand","speculative_expand","descend_into_macros","descend_node_at_offset","original_range","diagnostics_display_range","token_ancestors_with_macros","ancestors_with_macros","ancestors_at_offset_with_macros","find_node_at_offset_with_macros","find_node_at_offset_with_descend","resolve_lifetime_param","resolve_label","resolve_type","type_of_expr","type_of_pat","type_of_self","resolve_method_call","resolve_method_call_as_callable","resolve_field","resolve_record_field","resolve_record_pat_field","resolve_macro_call","resolve_path","resolve_extern_crate","resolve_variant","resolve_bind_pat_to_const","record_literal_missing_fields","record_pattern_missing_fields","to_def","to_module_def","to_module_defs","scope","scope_at_offset","scope_for_def","assert_contains_node","is_unsafe_method_call","is_unsafe_ref_expr","is_unsafe_ident_pat","module","krate","traits_in_scope","process_all_names","speculative_resolve","definition_source","is_mod_rs","declaration_source","as_str","push","new","filter","on","build","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","new","fmt_index","maybe_changed_since","for_each_query","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","new","fmt_index","maybe_changed_since","for_each_query","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","in_db","in_db_mut","new","fmt_index","maybe_changed_since","for_each_query","is_target_defined","parse","fold","check","insert_atom","insert_key_value","apply_diff","string_value","EMPTY","by_key","cfg","docs","source_map","docs_with_rangemap","as_str","entries","block","label","scope_chain","resolve_name_in_scope","scope_for","scope_by_expr","import_map_query","path_of","import_info_for","new","name_only","assoc_items_only","search_mode","limit","case_sensitive","exclude_import_kind","as_module_def_id","krate","from_src","from_segments","from_kind","segments","push_segment","pop_segment","len","is_ident","is_self","as_ident","from_mutable","as_keyword_for_ref","as_keyword_for_ptr","from_ast","walk","is_visible_from","new_tuple_field","new_lifetime","missing","as_tuple_index","ok","only_err","str_err","map","result","original_file","expansion_level","call_node","expansion_info","is_builtin_derive","is_include_macro","to_node","new","with_value","map","as_ref","file_syntax","cloned","transpose","ancestors_with_macros","original_file_range","ancestors_with_macros","descendants","syntax","as_file","as_lazy_macro","ast_id","is_proc_macro"],"q":["hir","hir::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir","hir::dbhir","","","","","","","","","","","","","","","","","","","","","","","","","","hir::CfgAtom","","hir","","","","","","","","","","","","","","","","","","","","","hir::import_map","","","","","","","","","","","","","","","","","","","","","","","","hir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir::known","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hirhir::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir::dbhir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir::import_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hirhir::import_map","hir","","","","","","","hir::diagnostics","","","","","","","","","","","","","","","","","hir::import_map","hir","","","","","","hir::db","","hir::import_map","hir","hir::db","","","hir","hir::db","","","hir","hir::import_map","hir","hir::import_map","hir::db","","","","hir::diagnostics","hir::db","","","","","","hir::diagnostics","hir::import_map","hir::diagnostics","hir::db","hir::import_map","hir::db","","","","","hir","","hir::db","","hir","hir::db","hir::diagnostics","hir","hir::db","","","hir","hir::db","","hir","hir::db","","","","","","hir","hir::db","hir::import_map","hir::db","","hir","hir::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir","","","","","","","","","","","","hir::import_map","","hir","","hir::import_map","hir","","hir::import_map","","hir::diagnostics","","hir","","hir::diagnostics","","","","hir::import_map","hir","","","","","","","","","","hir::diagnostics","hir::import_map","hir","hir::diagnostics","hir","hir::import_map","hir","","","","","hir::diagnostics","hir","","","","hir::db","","","","","","","","","","","","","","","","","","","","","","","","","","hir::import_map","hir::db","","","","","","","","","","","hir","hir::db","","","","","","","","","hir","","hir::db","","","","","","","","hir","","","","","","","","","","","","","","","","","","","","","hir::diagnostics","","hir","","","","","","hir::db","","","","","","","","hir","","","","","","","hir::diagnostics","hir","hir::db","hir","hir::db","hir","hir::db","","hir","hir::diagnostics","hir","hir::db","hir","","hir::db","","","hir","","","","","","","","","hir::db","","","","","","","","","","","","hir::diagnostics","hir::db","","","","","","","","","","","hir::diagnostics","hir::db","","","hir::diagnostics","hir::db","","hir::diagnostics","hir::db","","","hir::diagnostics","hir::db","","","","","","hir::diagnostics","hir::db","","","","","","","","","hir::diagnostics","hir::db","","","","hir::diagnostics","hir::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir::db","","","","","","","","","","","","","hirhir::diagnostics","","","","","","hir::dbhir","","","","","","","","","","","","","","","","","","","","","","hir::import_map","","","","","","","","","","hir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["FIXME: write short doc here","","","","","","","","","","","","","","","","","If the diagnostic can be pinpointed more accurately than …","","","","","Source element that triggered the diagnostics.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This expression is the whole method chain up to and …","FIXME: write short doc here","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the block-level <code>DefMap</code>, returning <code>None</code> when <code>block</code>…","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Main public API – parsis a hir file, not caring whether …","Implementation for the macro case.","Macro ids. That’s probably the tricksiest bit in …","","Certain built-in macros are eager (…","","Lowers syntactic macro call to a token tree …","Extracts syntax node, corresponding to a macro call. That…","Gets the expander for this macro. This compiles …","Expand macro call to a token tree. This query is LRUed …","Special case of the previous query for procedural macros. …","Firewall query that returns the error from the …","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This exists just for Chalk, because Chalk just has a …","","","","","","","","","","","","","An item","A local binding (only value namespace)","A generic parameter","","","","","Primary API to get semantic information, like types, from …","","<code>SemanticScope</code> encapsulates the notion of a scope (the set …","","A simple configuration value passed in from the outside.","eg. <code>#[cfg(test)]</code>","eg. <code>#[cfg(target_os = \\\"linux\\\")]</code>","","","","","","","","","Configuration options used for conditional compilation on …","","","","","","","","Holds documentation","","","Causes paths to always start with either <code>self</code>, <code>super</code>, …","Causes paths to ignore imports in the local module.","Causes paths to start with <code>crate</code> where applicable, …","A map of all publicly exported items in a crate.","Item import details stored in the <code>ImportMap</code>.","A path that can be used to import the item, relative to …","The module containing this item.","Whether the import is a trait associated item or not.","","","A map from publicly exported items to the path needed to …","","","","","","","","","","","","A way to match import map contents against the search …","Import map entry should strictly match the query string.","Import map entry should contain the query string.","Import map entry should contain all letters from the …","","Searches dependencies of <code>krate</code> for an importable path …","","","","","","","","","","","","","<code>self::</code> is <code>Super(0)</code>","","Absolute path (::foo)","<code>$crate</code> from macro expansion","","","","Compare ty::Ty","","","","","","","","","A fn pointer. Last element of the vector is the return …","","","","","Visibility of an item, with the path resolved.","Visibility is restricted to a certain module.","Visibility is unrestricted.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Name</code> is a wrapper around string, which is used in hir for …","","","","Input to the analyzer is a set of files, where each file …","<code>InFile<T></code> stores a value of <code>T</code> inside a particular …","","","<code>MacroCallId</code> identifies a particular macro invocation, like…","","","","","","","","","","","","","","","Returns a <code>Display</code>able type that is human-readable.","Returns a <code>Display</code>able type that is human-readable. Use …","Returns a <code>Display</code>able type that is human-readable and …","Returns a String representation of <code>self</code> that can be …","Returns a String representation of <code>self</code> for test purposes","hir::Crate describes a single crate. It’s the main …","","","","","","","","","","","","","Try to get the root URL of the documentation of a crate.","","","The defs which can be visible in the module.","","","","","","","","","","","","","","","Name of this module.","Returns the crate this module is part of.","Topmost parent of this module. Every module has a …","Iterates over all child modules.","Finds a parent module.","","Returns a <code>ModuleScope</code>: a set of items, visible in this …","","","","","Finds a path that can be used to refer to the given item …","Finds a path that can be used to refer to the given item …","","","","","","Returns the type as in the signature of the struct (i.e., …","","","","","","","","","","","","","","","","","","","","","","","","","","","A Data Type","","","","","Turns this ADT into a type. Any type parameters of the …","","","","","","","","","","","The defs which have a body.","","","","","","","","","","Get this function’s return type","","","","","","Whether this function declaration has a definition.","A textual representation of the HIR of this function for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","FIXME: right now, this just returns the root module of …","XXX: this parses the file","","Invariant: <code>inner.as_assoc_item(db).is_some()</code> We do not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that particular type <code>ty</code> implements …","Checks that particular type <code>ty</code> implements <code>std::ops::FnOnce</code>…","","","","","","","","","","","","","","","","","","","","If a type can be represented as <code>dyn Trait</code>, returns all …","","","","","","","","","","","","","","","","For IDE onlyeturns an iterator over associated types that may be …","","","","","","","","","","","","Find a AstNode by offset inside SyntaxNode, if it is …","Find a AstNode by offset inside SyntaxNode, if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Note: <code>FxHashSet<TraitId></code> should be treated as an opaque …","","Resolve a path as-if it was written at the given scope. …","Returns a node which defines this module. That is, a file …","","Returns a node which declares this module, either a …","","","","","","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","Returns <code>true</code> when the atom comes from the target …","","Fold the cfg by querying all basic <code>Atom</code> and <code>KeyValue</code> …","","","","","","","","","","","","","","If <code>scope</code> refers to a block expression scope, returns the …","If <code>scope</code> refers to a labeled expression scope, returns …","","","","","","Returns the <code>ModPath</code> needed to import/mention <code>item</code>, …","","","Matches entries’ names only, ignoring the rest of the …","Matches only the entries that are associated items, …","Specifies the way to search for the entries using the …","Limits the returned number of items to <code>limit</code>.","Respect casing of the query string when matching.","Do not include imports of the specified kind in the …","","Returns the crate defining this item (or <code>None</code> if <code>self</code> is …","","","Creates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …","","","","Returns the number of segments in the path (counting …","","","If this path is a single identifier, like <code>foo</code>, return its …","","","","Converts an <code>ast::TypeRef</code> to a <code>hir::TypeRef</code>.","","","","","A fake name for things missing in the source code.","","","","","","","For macro-expansion files, returns the file original …","","If this is a macro call, returns the syntax node of the …","Return expansion information if it is a macro-expansion …","Indicate it is macro file generated for builtin derive","Return whether this file is an include macro","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,0,2,2,2,0,3,3,3,0,4,4,4,4,0,5,5,5,5,5,0,6,0,0,0,7,7,7,7,7,7,0,8,8,8,8,0,9,9,9,9,0,10,10,10,0,11,11,11,0,12,12,0,13,13,0,14,14,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,22,22,22,0,23,23,23,0,24,24,0,25,25,25,25,25,25,25,0,26,0,27,0,28,28,29,29,0,30,30,30,30,30,0,0,31,31,31,0,0,0,0,0,0,32,32,32,0,0,33,33,33,0,34,0,0,35,35,35,35,35,35,35,35,35,35,0,36,36,36,0,0,0,37,37,37,0,38,38,38,0,39,0,40,40,40,40,40,0,41,41,0,42,42,42,42,42,42,42,42,42,42,42,42,42,0,43,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,45,45,0,46,46,0,47,0,48,48,48,0,0,49,49,0,50,50,50,50,50,50,0,0,51,51,52,52,52,52,52,52,52,52,52,52,52,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,55,55,56,56,56,0,57,57,57,57,57,57,57,0,58,58,58,58,0,59,59,59,59,59,0,60,60,60,60,60,0,61,61,61,61,61,61,61,61,0,62,62,62,62,62,62,0,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,0,65,65,65,0,66,66,66,66,0,67,67,67,0,68,68,68,68,0,69,69,69,69,0,70,70,70,70,0,71,71,71,71,71,71,0,72,72,0,73,73,73,73,0,74,74,74,0,75,75,75,0,76,76,0,77,75,75,75,75,0,78,78,78,78,78,78,78,78,78,0,79,79,79,79,79,79,79,79,79,0,80,80,80,80,0,81,81,81,81,81,0,82,82,82,82,82,0,83,83,83,0,84,84,84,84,0,85,85,85,85,85,85,85,85,85,85,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,87,87,87,87,88,88,88,88,88,0,89,89,89,89,89,89,89,89,89,0,90,90,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,23,23,23,23,23,23,23,23,23,23,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,91,91,91,91,91,91,91,92,92,92,92,92,92,92,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,93,93,93,93,93,93,93,94,94,94,94,94,94,94,95,95,95,95,95,95,95,96,96,96,96,96,96,96,97,97,97,97,97,97,97,98,98,98,98,98,98,98,99,99,99,99,99,99,99,100,100,100,100,100,100,100,101,101,101,101,101,101,101,102,102,102,102,102,102,102,103,103,103,103,103,103,103,104,104,104,104,104,104,104,105,105,105,105,105,105,105,106,106,106,106,106,106,106,107,107,107,107,107,107,107,108,108,108,108,108,108,108,109,109,109,109,109,109,109,110,110,110,110,110,110,110,111,111,111,111,111,111,111,112,112,112,112,112,112,112,113,113,113,113,113,113,113,16,16,16,16,16,16,16,114,114,114,114,114,114,114,115,115,115,115,115,115,115,116,116,116,116,116,116,116,117,117,117,117,117,117,117,118,118,118,118,118,118,118,119,119,119,119,119,119,119,120,120,120,120,120,120,120,121,121,121,121,121,121,121,122,122,122,122,122,122,122,123,123,123,123,123,123,123,124,124,124,124,124,124,124,125,125,125,125,125,125,125,126,126,126,126,126,126,126,127,127,127,127,127,127,127,128,128,128,128,128,128,128,129,129,129,129,129,129,129,130,130,130,130,130,130,130,131,131,131,131,131,131,131,132,132,132,132,132,132,132,133,133,133,133,133,133,133,134,134,134,134,134,134,134,135,135,135,135,135,135,135,136,136,136,136,136,136,136,137,137,137,137,137,137,137,138,138,138,138,138,138,138,139,139,139,139,139,139,139,140,140,140,140,140,140,140,18,18,18,18,18,18,18,141,141,141,141,141,141,141,142,142,142,142,142,142,142,143,143,143,143,143,143,143,144,144,144,144,144,144,144,145,145,145,145,145,145,145,146,146,146,146,146,146,146,147,147,147,147,147,147,147,148,148,148,148,148,148,148,149,149,149,149,149,149,149,150,150,150,150,150,150,150,151,151,151,151,151,151,151,152,152,152,152,152,152,152,153,153,153,153,153,153,153,154,154,154,154,154,154,154,155,155,155,155,155,155,155,156,156,156,156,156,156,156,157,157,157,157,157,157,157,158,158,158,158,158,158,158,159,159,159,159,159,159,159,160,160,160,160,160,160,160,161,161,161,161,161,161,161,162,162,162,162,162,162,162,163,163,163,163,163,163,163,164,164,164,164,164,164,164,165,165,165,165,165,165,165,166,166,166,166,166,166,166,167,167,167,167,167,167,167,168,168,168,168,168,168,168,169,169,169,169,169,169,169,170,170,170,170,170,170,170,171,171,171,171,171,171,171,172,172,172,172,172,172,172,173,173,173,173,173,173,173,174,174,174,174,174,174,174,175,175,175,175,175,175,175,176,176,176,176,176,176,176,177,177,177,177,177,177,177,178,178,178,178,178,178,178,179,179,179,179,179,179,179,180,180,180,180,180,180,180,181,181,181,181,181,181,181,182,182,182,182,182,182,182,183,183,183,183,183,183,183,184,184,184,184,184,184,184,185,185,185,185,185,185,185,186,186,186,186,186,186,186,187,187,187,187,187,187,187,188,188,188,188,188,188,188,21,21,21,21,21,21,21,189,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,194,28,28,28,28,28,28,28,28,28,28,28,30,30,30,30,30,30,30,30,30,30,195,195,195,195,195,195,195,195,195,195,31,31,31,31,31,31,31,31,31,31,196,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,200,200,200,200,200,200,200,200,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,201,201,201,201,201,201,201,201,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,202,202,202,202,202,202,202,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,203,203,203,203,203,203,203,203,203,203,203,44,44,44,44,44,44,44,44,44,44,204,204,204,204,204,204,204,204,204,204,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,205,205,205,205,205,205,205,205,205,205,49,49,49,49,49,49,49,49,52,52,52,52,52,52,52,52,52,52,51,51,51,51,51,51,51,54,54,54,54,54,54,54,54,54,54,53,53,53,53,53,53,53,53,53,53,56,56,56,56,56,56,56,56,56,56,55,55,55,55,55,55,55,55,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,88,88,88,88,88,88,88,87,87,87,87,87,87,87,89,89,89,89,89,89,89,89,28,28,195,195,30,28,28,30,30,28,195,195,28,28,30,30,30,195,28,197,198,199,41,35,39,42,43,37,40,40,39,2,2,2,2,2,1,1,1,1,3,3,3,3,4,4,4,4,34,39,42,39,45,198,196,132,118,34,38,108,134,109,32,101,120,127,41,201,42,36,107,111,128,122,2,116,123,138,100,106,124,4,35,1,140,33,129,105,94,110,113,43,200,117,102,39,104,3,40,103,125,136,31,133,98,199,115,139,131,135,97,126,197,112,202,121,119,37,95,96,99,137,130,113,108,96,111,124,123,127,125,129,100,137,122,116,121,132,117,103,136,115,109,112,128,134,101,102,107,138,120,105,133,118,126,98,139,94,95,131,135,140,104,130,97,106,119,99,110,39,37,37,31,39,39,42,42,41,32,199,199,33,33,38,38,201,43,43,34,34,4,4,200,200,2,2,1,1,35,198,198,197,197,40,40,196,196,39,42,1,34,32,2,199,33,197,43,198,38,31,4,37,41,40,196,132,104,121,128,140,99,138,133,120,125,97,109,131,102,135,103,98,115,137,134,126,108,110,119,107,111,201,139,130,95,113,94,123,96,129,100,112,118,197,136,117,122,124,116,101,105,106,127,40,39,149,142,147,144,145,148,143,146,204,46,45,203,47,205,48,46,46,204,204,46,46,203,203,47,47,205,205,48,48,6,6,45,45,204,204,203,203,146,147,149,144,142,148,145,143,46,45,47,48,204,203,205,6,203,148,45,144,48,143,149,46,6,204,142,203,205,146,145,147,47,44,49,44,44,44,44,49,42,192,189,191,194,193,190,194,152,174,163,185,162,10,194,164,191,182,178,157,179,183,167,160,173,11,189,154,161,9,170,155,12,151,156,184,8,172,153,186,192,177,171,14,176,169,180,175,190,168,193,165,187,7,159,166,158,188,13,181,171,156,162,167,157,155,154,163,174,170,173,178,152,185,186,166,181,184,159,188,183,176,165,164,180,182,158,153,161,160,175,169,177,151,168,172,187,179,192,194,193,189,189,194,194,193,193,192,192,190,190,191,191,171,186,173,182,151,162,168,153,169,155,183,176,172,174,165,178,167,179,159,160,185,157,181,163,154,161,156,175,152,180,158,184,187,177,188,170,166,164,193,194,191,189,192,190,9,9,9,9,11,11,11,11,7,7,7,7,7,12,12,12,12,14,14,14,14,13,13,13,13,8,8,8,8,8,10,10,10,10,194,193,193,189,189,192,192,191,191,190,190,194,194,56,56,56,60,60,60,69,69,69,68,68,68,70,70,70,71,71,71,74,74,74,64,64,64,61,61,61,54,54,54,81,81,81,85,85,85,57,57,57,58,58,58,59,59,59,82,82,82,84,84,84,83,83,83,56,57,58,59,60,64,68,69,70,71,74,85,82,83,84,64,68,71,53,56,57,58,59,64,68,69,70,71,75,52,54,57,58,59,71,70,69,68,64,85,82,83,84,74,48,61,81,60,53,63,75,78,62,56,79,80,37,37,72,53,53,53,53,53,53,53,53,53,53,53,53,53,61,61,61,62,62,62,63,63,63,65,78,78,78,78,78,78,78,78,78,78,81,81,81,89,25,23,52,54,53,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,25,25,23,52,52,54,54,53,53,56,56,55,55,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,67,67,68,68,69,69,70,70,71,71,72,72,73,74,74,75,75,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,89,89,25,26,27,23,52,51,54,53,56,55,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,88,89,23,52,54,53,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,89,64,61,57,59,58,56,60,86,81,82,83,84,68,69,70,71,54,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,54,54,54,6,91,92,92,92,92,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,16,16,16,16,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,18,18,18,18,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,21,21,21,21,28,30,30,195,195,195,195,196,197,197,197,197,198,198,199,200,200,200,200,200,200,200,201,201,201,202,202,202,202,202,202,202,37,37,39,39,39,39,39,39,39,39,39,39,41,41,41,42,42,43,203,203,203,203,44,44,44,44,44,204,204,204,204,204,204,45,45,45,45,45,45,45,45,45,45,45,45,45,46,48,48,48],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["associtemloc",3],["function",3]],["functionid",3]],[[["functionid",3]],[["associtemloc",3],["function",3]]],[[["itemloc",3],["struct",3]],["structid",3]],[[["structid",3]],[["struct",3],["itemloc",3]]],[[["itemloc",3],["union",3]],["unionid",3]],[[["unionid",3]],[["itemloc",3],["union",3]]],[[["itemloc",3],["enum",3]],["enumid",3]],[[["enumid",3]],[["itemloc",3],["enum",3]]],[[["const",3],["associtemloc",3]],["constid",3]],[[["constid",3]],[["const",3],["associtemloc",3]]],[[["itemloc",3],["static",3]],["staticid",3]],[[["staticid",3]],[["itemloc",3],["static",3]]],[[["trait",3],["itemloc",3]],["traitid",3]],[[["traitid",3]],[["trait",3],["itemloc",3]]],[[["associtemloc",3],["typealias",3]],["typealiasid",3]],[[["typealiasid",3]],[["associtemloc",3],["typealias",3]]],[[["itemloc",3],["impl",3]],["implid",3]],[[["implid",3]],[["itemloc",3],["impl",3]]],[[["blockloc",3]],["blockid",3]],[[["blockid",3]],["blockloc",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirfileid",3]],[["arc",3],["itemtree",3]]],[[["crateid",3]],[["arc",3],["defmap",3]]],[[["crateid",3]],[["arc",3],["defmap",3]]],[[["blockid",3]],[["arc",3],["option",4]]],[[["structid",3]],[["structdata",3],["arc",3]]],[[["unionid",3]],[["structdata",3],["arc",3]]],[[["enumid",3]],[["enumdata",3],["arc",3]]],[[["implid",3]],[["impldata",3],["arc",3]]],[[["traitid",3]],[["arc",3],["traitdata",3]]],[[["typealiasid",3]],[["arc",3],["typealiasdata",3]]],[[["functionid",3]],[["functiondata",3],["arc",3]]],[[["constid",3]],[["constdata",3],["arc",3]]],[[["staticid",3]],[["staticdata",3],["arc",3]]],[[["defwithbodyid",4]]],[[["defwithbodyid",4]],[["arc",3],["body",3]]],[[["defwithbodyid",4]],[["arc",3],["exprscopes",3]]],[[["genericdefid",4]],[["genericparams",3],["interned",3]]],[[["enumid",3]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["enumid",3]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["attrdefid",4]],["attrswithowner",3]],[[["crateid",3]],[["langitems",3],["arc",3]]],[[["crateid",3],["smolstr",3]],[["option",4],["langitemtarget",4]]],[[["crateid",3]],[["arc",3],["importmap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["functionid",3]],["visibility",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirfileid",3]],[["arc",3],["astidmap",3]]],[[["hirfileid",3]],[["syntaxnode",3],["option",4]]],[[["macrofile",3]],[["option",4],["expandresult",3]]],[[["macrocallloc",3]],["lazymacroid",3]],[[["lazymacroid",3]],["macrocallloc",3]],[[["eagercallloc",3]],["eagermacroid",3]],[[["eagermacroid",3]],["eagercallloc",3]],[[["macrocallid",4]],[["option",4],["arc",3]]],[[["macrocallid",4]],[["greennode",3],["option",4]]],[[["macrodefid",3]],[["option",4],["arc",3]]],[[["macrocallid",4]],[["expandresult",3],["option",4]]],[[["macrocallid",4]],[["result",4],["subtree",3],["expanderror",4]]],[[["macrocallid",4]],[["option",4],["expanderror",4]]],[[["hirfileid",3]],[["arc",3],["hygieneframe",3]]],null,null,null,null,null,null,null,null,null,null,[[["defwithbodyid",4]],[["arc",3],["inferenceresult",3]]],[[["defwithbodyid",4]],[["arc",3],["inferenceresult",3]]],[[["tydefid",4]],[["ty",3],["binders",3]]],[[["valuetydefid",4]],[["ty",3],["binders",3]]],[[["implid",3]],[["ty",3],["binders",3]]],[[["constparamid",3]],[["interner",3],["ty",3]]],[[["implid",3]],[["option",4],["binders",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["callabledefid",4]],[["callablesig",3],["binders",3]]],[[["functionid",3]],[["arc",3],["option",4]]],[[["typeparamid",3]],["arc",3]],[[["genericdefid",4]],["arc",3]],[[["genericdefid",4]],[["arc",3],["traitenvironment",3]]],[[["genericdefid",4]],["arc",3]],[[["crateid",3]],[["inherentimpls",3],["arc",3]]],[[["crateid",3]],[["arc",3],["traitimpls",3]]],[[["crateid",3]],[["arc",3],["traitimpls",3]]],[[["callabledefid",4]],["internedcallabledefid",3]],[[["internedcallabledefid",3]],["callabledefid",4]],[[["typeparamid",3]],["internedtypeparamid",3]],[[["internedtypeparamid",3]],["typeparamid",3]],[[["lifetimeparamid",3]],["internedlifetimeparamid",3]],[[["internedlifetimeparamid",3]],["lifetimeparamid",3]],[[["constparamid",3]],["internedconstparamid",3]],[[["internedconstparamid",3]],["constparamid",3]],[[["impltraitid",4]],["internedopaquetyid",3]],[[["internedopaquetyid",3]],["impltraitid",4]],[[],["internedclosureid",3]],[[["internedclosureid",3]]],[[["assoctypeid",3],["interner",3]],[["arc",3],["associatedtydatum",3]]],[[["traitid",3],["crateid",3],["interner",3]],[["arc",3],["traitdatum",3]]],[[["interner",3],["crateid",3],["adtid",3]],[["adtdatum",3],["arc",3]]],[[["implid",3],["crateid",3],["interner",3]],[["impldatum",3],["arc",3]]],[[["interner",3],["crateid",3],["fndefid",3]],[["arc",3],["fndefdatum",3]]],[[["interner",3],["crateid",3],["fndefid",3]],[["interner",3],["variances",3]]],[[["interner",3],["crateid",3],["adtid",3]],[["interner",3],["variances",3]]],[[["interner",3],["crateid",3],["associatedtyvalueid",3]],[["arc",3],["associatedtyvalue",3]]],[[["canonical",3],["crateid",3],["inenvironment",3]],[["solution",4],["option",4]]],[[["canonical",3],["crateid",3],["inenvironment",3]],[["solution",4],["option",4]]],[[["environment",3],["crateid",3],["interner",3]],[["interner",3],["programclauses",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],null,null,null,null,null,null,[[["hirdatabase",8]],[["infile",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["crateid",3],["query",3],["defdatabase",8]],[["hashset",3],["buildhasherdefault",3],["iteminns",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirdatabase",8],["option",4],["usize",15],["bool",15],["displaytarget",4]],["hirdisplaywrapper",3]],[[["hirdatabase",8]],["hirdisplaywrapper",3]],[[["hirdatabase",8],["option",4],["usize",15]],["hirdisplaywrapper",3]],[[["hirdatabase",8],["moduleid",3]],[["string",3],["result",4],["displaysourcecodeerror",4]]],[[["hirdatabase",8]],["hirdisplaywrapper",3]],null,null,null,null,[[["hirdatabase",8]],[["vec",3],["cratedependency",3]]],[[["hirdatabase",8]],[["vec",3],["crate",3]]],[[["hirdatabase",8]],[["vec",3],["crate",3]]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["fileid",3]],[[["hirdatabase",8]],["edition",4]],[[["hirdatabase",8]],[["cratedisplayname",3],["option",4]]],[[["defdatabase",8],["query",3]]],[[["hirdatabase",8]],[["vec",3],["crate",3]]],[[["hirdatabase",8],["crate",3]],[["string",3],["option",4]]],[[["hirdatabase",8]],["cfgoptions",3]],null,null,null,null,null,null,null,null,null,null,null,[[["hirdatabase",8]],[["option",4],["module",3]]],[[["hirdatabase",8]],[["string",3],["option",4]]],[[["hirdatabase",8]],[["option",4],["visibility",4]]],[[["hirdatabase",8]],[["option",4],["name",3]]],[[["hirdatabase",8],["diagnosticsink",3]]],[[["hirdatabase",8]],[["option",4],["name",3]]],[[],["crate",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]]],[[["hirdatabase",8]],[["option",4],["module",3]]],[[["hirdatabase",8]],[["vec",3],["module",3]]],[[["hirdatabase",8],["option",4],["module",3]],["vec",3]],[[["hirdatabase",8],["moduledef",4]],[["option",4],["visibility",4]]],[[["hirdatabase",8],["diagnosticsink",3]]],[[["hirdatabase",8]],[["moduledef",4],["vec",3]]],[[["hirdatabase",8]],[["vec",3],["impl",3]]],[[["defdatabase",8]],[["option",4],["modpath",3]]],[[["defdatabase",8],["prefixkind",4]],[["option",4],["modpath",3]]],null,null,null,null,[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["variantdef",4]],null,[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],[["crate",3],["option",4]]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],[["field",3],["vec",3]]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],[["option",4],["reprkind",4]]],[[["hirdatabase",8]],["structkind",4]],null,[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],[["field",3],["vec",3]]],null,[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],[["crate",3],["option",4]]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],[["vec",3],["variant",3]]],[[["hirdatabase",8]],["type",3]],null,[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["enum",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],[["field",3],["vec",3]]],[[["hirdatabase",8]],["structkind",4]],null,null,null,null,[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["crate",3]],[[["hirdatabase",8]],["name",3]],null,null,null,null,[[["hirdatabase",8]],[["field",3],["vec",3]]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["name",3]],null,null,null,null,[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],[["option",4],["name",3]]],null,[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],[["crate",3],["option",4]]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],[["option",4],["selfparam",3]]],[[["hirdatabase",8]],[["vec",3],["param",3]]],[[["hirdatabase",8]],[["vec",3],["option",4]]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8],["diagnosticsink",3]]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["string",3]],null,null,null,null,null,[[],["type",3]],[[["hirdatabase",8]],["local",3]],[[["hirdatabase",8]],[["pat",4],["option",4]]],[[["hirdatabase",8]],[["option",4],["infile",3]]],null,[[["hirdatabase",8]],["access",4]],[[["hirdatabase",8]],["str",15]],[[["hirdatabase",8]],[["infile",3],["option",4]]],null,[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],[["crate",3],["option",4]]],[[["hirdatabase",8]],[["option",4],["name",3]]],[[["hirdatabase",8]],["typeref",4]],null,[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],[["crate",3],["option",4]]],[[["hirdatabase",8]],[["option",4],["name",3]]],[[["hirdatabase",8]],["bool",15]],null,[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],[["associtem",4],["vec",3]]],[[["hirdatabase",8]],["bool",15]],null,[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["crate",3]],[[["hirdatabase",8]],[["typeref",4],["option",4]]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["name",3]],null,[[["hirdatabase",8],["module",3]],["type",3]],[[],["name",3]],null,null,null,null,null,null,[[["hirdatabase",8]],[["option",4],["module",3]]],[[["hirdatabase",8]],[["option",4],["name",3]]],[[],["macrokind",4]],null,null,null,null,null,null,null,null,[[["hirdatabase",8]],[["associtem",4],["option",4]]],[[["hirdatabase",8]],[["option",4],["name",3]]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["associtemcontainer",4]],[[["hirdatabase",8]],[["trait",3],["option",4]]],null,null,null,null,null,null,null,null,[[["hirdatabase",8]],[["genericparam",4],["vec",3]]],[[["hirdatabase",8]],[["vec",3],["typeparam",3]]],null,[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],[["option",4],["selfparam",3]]],[[["hirdatabase",8]],[["option",4],["name",3]]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["defwithbody",4]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],[["either",4],["infile",3]]],null,[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["defwithbody",4]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],[["infile",3],["label",3]]],null,null,null,null,[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["name",3]],null,[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],[["trait",3],["vec",3]]],[[["hirdatabase",8]],[["type",3],["option",4]]],null,[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["genericdef",4]],null,[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["genericdef",4]],[[["hirdatabase",8]],["type",3]],null,[[["hirdatabase",8],["crate",3]],[["vec",3],["impl",3]]],[[["hirdatabase",8],["type",3]],[["vec",3],["impl",3]]],[[["hirdatabase",8],["trait",3]],[["vec",3],["impl",3]]],[[["hirdatabase",8]],[["option",4],["traitref",3]]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],[["associtem",4],["vec",3]]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["crate",3]],[[["hirdatabase",8]],[["infile",3],["option",4]]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["type",3],["option",4]]],[[],["type",3]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8],["trait",3]],["bool",15]],[[["hirdatabase",8],["typealias",3]],[["type",3],["option",4]]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],[["option",4],["callable",3]]],[[],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],["vec",3]],[[["hirdatabase",8]],[["type",3],["vec",3]]],[[["hirdatabase",8]]],[[["hirdatabase",8],["crate",3]],["option",4]],[[]],[[["option",4],["crate",3],["name",3],["hirdatabase",8],["fxhashset",6]],["option",4]],[[["option",4],["crate",3],["name",3],["hirdatabase",8],["fxhashset",6]],["option",4]],[[],[["adt",4],["option",4]]],[[],[["builtintype",3],["option",4]]],[[],[["trait",3],["option",4]]],[[["hirdatabase",8]]],[[["hirdatabase",8]],[["option",4],["vec",3]]],[[["hirdatabase",8]],[["trait",3],["option",4]]],[[["hirdatabase",8]]],[[["type",3]],["bool",15]],null,null,null,null,null,null,[[],["callablekind",4]],[[["hirdatabase",8]],[["selfparam",3],["option",4]]],[[],["usize",15]],[[["hirdatabase",8]],["vec",3]],[[],["type",3]],null,null,null,null,null,null,null,null,null,[[["perns",3]],["arrayvec",3]],null,[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8],["module",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["defdatabase",8]],["resolver",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["cfgatom",4]],["ordering",4]],[[],["cfgoptions",3]],[[],["cfgoptions",3]],[[],["cfgexpr",4]],[[],["cfgatom",4]],[[]],[[]],[[["cfgatom",4]],["cfgexpr",4]],[[["cfgatom",4]],[["ordering",4],["option",4]]],[[["cfgoptions",3]],["bool",15]],[[["cfgoptions",3]],["bool",15]],[[["cfgatom",4]],["bool",15]],[[["cfgatom",4]],["bool",15]],[[["cfgexpr",4]],["bool",15]],[[["cfgexpr",4]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[],["attrs",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pathkind",4]],["ordering",4]],[[["modpath",3]],["ordering",4]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["bool",15]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["internstorage",3]],[[],["internstorage",3]],[[["defdatabase",8],["crateid",3],["fnmut",8]],[["result",4],["result",4],["unresolvedmacro",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["name",3]],["modpath",3]],[[["iteminns",4]],["bool",15]],[[["iteminns",4]],["bool",15]],[[["structkind",4]],["bool",15]],[[["modpath",3]],["bool",15]],[[["modpath",3]],["bool",15]],[[["typeref",4]],["bool",15]],[[["typeref",4]],["bool",15]],[[["mutability",4]],["bool",15]],[[["prefixkind",4]],["bool",15]],[[["documentation",3]],["bool",15]],[[["documentation",3]],["bool",15]],[[["importinfo",3]],["bool",15]],[[["importinfo",3]],["bool",15]],[[["modulesource",4]],["bool",15]],[[["modulesource",4]],["bool",15]],[[["importmap",3]],["bool",15]],[[["visibility",4]],["bool",15]],[[["visibility",4]],["bool",15]],[[["importpath",3]],["bool",15]],[[["importpath",3]],["bool",15]],[[["unresolvedprocmacro",3]],["bool",15]],[[["unresolvedprocmacro",3]],["bool",15]],[[["exprscopes",3]],["bool",15]],[[["exprscopes",3]],["bool",15]],[[["unresolvedmacrocall",3]],["bool",15]],[[["unresolvedmacrocall",3]],["bool",15]],[[["inactivecode",3]],["bool",15]],[[["inactivecode",3]],["bool",15]],[[["importkind",4]],["bool",15]],[[["attrswithowner",3]],["bool",15]],[[["attrswithowner",3]],["bool",15]],[[["attrs",3]],["bool",15]],[[["attrs",3]],["bool",15]],[[["pathkind",4]],["bool",15]],[[["pathkind",4]],["bool",15]],[[["attr",3]],["bool",15]],[[["attr",3]],["bool",15]],[[],["modpath",3]],[[],["typeref",4]],[[],["inactivecode",3]],[[],["importpath",3]],[[],["prefixkind",4]],[[],["unresolvedmacrocall",3]],[[],["documentation",3]],[[],["importinfo",3]],[[],["attrs",3]],[[],["visibility",4]],[[],["attrswithowner",3]],[[],["modulesource",4]],[[],["structkind",4]],[[],["unresolvedprocmacro",3]],[[],["iteminns",4]],[[],["mutability",4]],[[],["pathkind",4]],[[],["attr",3]],[[],["fieldsattrsquery",3]],[[],["internstaticquery",3]],[[],["impldataquery",3]],[[],["bodyquery",3]],[[],["functionvisibilityquery",3]],[[],["internunionlookupquery",3]],[[],["importmapquery",3]],[[],["variantsattrssourcemapquery",3]],[[],["enumdataquery",3]],[[],["constdataquery",3]],[[],["internstructlookupquery",3]],[[],["interntypealiaslookupquery",3]],[[],["variantsattrsquery",3]],[[],["internconstquery",3]],[[],["attrsquery",3]],[[],["internconstlookupquery",3]],[[],["internunionquery",3]],[[],["fileitemtreequery",3]],[[],["langitemquery",3]],[[],["fieldsattrssourcemapquery",3]],[[],["staticdataquery",3]],[[],["interntypealiasquery",3]],[[],["internimplquery",3]],[[],["uniondataquery",3]],[[],["interntraitlookupquery",3]],[[],["internimpllookupquery",3]],[[],["importmap",3]],[[],["fieldvisibilitiesquery",3]],[[],["genericparamsquery",3]],[[],["internfunctionlookupquery",3]],[[],["internblocklookupquery",3]],[[],["internfunctionquery",3]],[[],["typealiasdataquery",3]],[[],["internstructquery",3]],[[],["exprscopesquery",3]],[[],["internenumquery",3]],[[],["internblockquery",3]],[[],["structdataquery",3]],[[],["attrs",3]],[[],["cratelangitemsquery",3]],[[],["blockdefmapquery",3]],[[],["traitdataquery",3]],[[],["functiondataquery",3]],[[],["cratedefmapqueryquery",3]],[[],["internenumlookupquery",3]],[[],["internstaticlookupquery",3]],[[],["interntraitquery",3]],[[],["bodywithsourcemapquery",3]],[[["pathkind",4]],[["ordering",4],["option",4]]],[[["modpath",3]],[["ordering",4],["option",4]]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lazymacroid",3]],["macrocallid",4]],[[["eagermacroid",3]],["macrocallid",4]],[[["macrofile",3]],["hirfileid",3]],[[["fileid",3]],["hirfileid",3]],[[["macrocallid",4]],["bool",15]],[[["macrocallid",4]],["bool",15]],[[["name",3]],["bool",15]],[[["name",3]],["bool",15]],[[["macrocallloc",3]],["bool",15]],[[["macrocallloc",3]],["bool",15]],[[["macrofile",3]],["bool",15]],[[["macrofile",3]],["bool",15]],[[["macrodefid",3]],["bool",15]],[[["macrodefid",3]],["bool",15]],[[["diagnosticcode",3]],["bool",15]],[[["diagnosticcode",3]],["bool",15]],[[["infile",3]],["bool",15]],[[["infile",3]],["bool",15]],[[["hirfileid",3]],["bool",15]],[[["hirfileid",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["name",3]],["ordering",4]],[[],["macroargtextquery",3]],[[],["macrodefquery",3]],[[],["parsemacroexpansionquery",3]],[[],["interneagerexpansionquery",3]],[[],["astidmapquery",3]],[[],["macroexpandquery",3]],[[],["internmacroquery",3]],[[],["hygieneframequery",3]],[[],["macrocallid",4]],[[],["infile",3]],[[],["macrocallloc",3]],[[],["macrodefid",3]],[[],["hirfileid",3]],[[],["name",3]],[[],["macrofile",3]],[[],["diagnosticcode",3]],[[["name",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["result",4],["expanderror",4]],["expandresult",3]],[[["origin",4]],["bool",15]],[[["expandresult",3]],["bool",15]],[[["expandresult",3]],["bool",15]],[[],["expandresult",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["internedcallabledefid",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["opaquetyid",3],["interner",3]],["internedopaquetyid",3]],[[["interner",3],["fndefid",3]],["internedcallabledefid",3]],[[["interner",3],["closureid",3]],["internedclosureid",3]],[[["internedtypeparamid",3]],["bool",15]],[[["internedtypeparamid",3]],["bool",15]],[[["internedcallabledefid",3]],["bool",15]],[[["internedcallabledefid",3]],["bool",15]],[[["internedclosureid",3]],["bool",15]],[[["internedclosureid",3]],["bool",15]],[[["internedopaquetyid",3]],["bool",15]],[[["internedopaquetyid",3]],["bool",15]],[[["internedlifetimeparamid",3]],["bool",15]],[[["internedlifetimeparamid",3]],["bool",15]],[[["internedconstparamid",3]],["bool",15]],[[["internedconstparamid",3]],["bool",15]],[[],["internlifetimeparamidquery",3]],[[],["associatedtyvaluequery",3]],[[],["internconstparamidquery",3]],[[],["impldatumquery",3]],[[],["inferqueryquery",3]],[[],["traitenvironmentquery",3]],[[],["interncallabledeflookupquery",3]],[[],["valuetyquery",3]],[[],["interntypeparamidquery",3]],[[],["constparamtyquery",3]],[[],["fndefdatumquery",3]],[[],["internimpltraitidlookupquery",3]],[[],["internlifetimeparamidlookupquery",3]],[[],["internconstparamidlookupquery",3]],[[],["traitimplsincratequery",3]],[[],["internclosurelookupquery",3]],[[],["interncallabledefquery",3]],[[],["associatedtydataquery",3]],[[],["returntypeimpltraitsquery",3]],[[],["genericpredicatesforparamquery",3]],[[],["adtvariancequery",3]],[[],["fieldtypesquery",3]],[[],["structdatumquery",3]],[[],["genericdefaultsquery",3]],[[],["implselftyquery",3]],[[],["genericpredicatesquery",3]],[[],["impltraitquery",3]],[[],["internimpltraitidquery",3]],[[],["tyquery",3]],[[],["traitdatumquery",3]],[[],["callableitemsignaturequery",3]],[[],["fndefvariancequery",3]],[[],["traitsolvequeryquery",3]],[[],["internclosurequery",3]],[[],["programclausesforchalkenvquery",3]],[[],["interntypeparamidlookupquery",3]],[[],["traitimplsindepsquery",3]],[[],["inherentimplsincratequery",3]],[[],["internedclosureid",3]],[[],["internedcallabledefid",3]],[[],["internedconstparamid",3]],[[],["internedtypeparamid",3]],[[],["internedopaquetyid",3]],[[],["internedlifetimeparamid",3]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["bool",15]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[],["bool",15]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["syntaxnodeptr",3],["infile",3]]],[[],["any",8]],[[["internedcallabledefid",3]],[["ordering",4],["option",4]]],[[["internid",3]],["internedclosureid",3]],[[],["internid",3]],[[["internid",3]],["internedtypeparamid",3]],[[],["internid",3]],[[["internid",3]],["internedopaquetyid",3]],[[],["internid",3]],[[["internid",3]],["internedconstparamid",3]],[[],["internid",3]],[[["internid",3]],["internedlifetimeparamid",3]],[[],["internid",3]],[[["internid",3]],["internedcallabledefid",3]],[[],["internid",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["documentation",3],["option",4]]],[[["option",4],["namespace",4],["hirdatabase",8],["str",15]],[["option",4],["moduledef",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["option",4],["infile",3]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["associtem",4],["option",4]]],[[["hirdatabase",8]],[["associtem",4],["option",4]]],[[["hirdatabase",8]],[["associtem",4],["option",4]]],[[["hirdatabase",8]],[["associtem",4],["option",4]]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["crateid",3]],["crate",3]],[[["moduleid",3]],["module",3]],[[["structid",3]],["struct",3]],[[["unionid",3]],["union",3]],[[["enumid",3]],["enum",3]],[[["typealiasid",3]],["typealias",3]],[[["traitid",3]],["trait",3]],[[["staticid",3]],["static",3]],[[["constid",3]],["const",3]],[[["functionid",3]],["function",3]],[[["implid",3]],["impl",3]],[[["typeparamid",3]],["typeparam",3]],[[["lifetimeparamid",3]],["lifetimeparam",3]],[[["constparamid",3]],["constparam",3]],[[["macrodefid",3]],["macrodef",3]],[[["macrodef",3]],["macrodefid",3]],[[["adtid",4]]],[[["genericparamid",4]]],[[["enumvariantid",3]]],[[["moduledefid",4]]],[[["defwithbodyid",4]]],[[["associtemid",4]]],[[["genericdefid",4]]],[[["variantid",4]]],[[["fieldid",3]]],[[]],[[]],[[["macrodef",3]]],[[["moduledef",4]]],[[["builtintype",4]]],[[["module",3]],["moduledef",4]],[[["function",3]],["moduledef",4]],[[["adt",4]],["moduledef",4]],[[["struct",3]],["moduledef",4]],[[["enum",3]],["moduledef",4]],[[["union",3]],["moduledef",4]],[[["variant",3]],["moduledef",4]],[[["const",3]],["moduledef",4]],[[["static",3]],["moduledef",4]],[[["trait",3]],["moduledef",4]],[[["typealias",3]],["moduledef",4]],[[["builtintype",3]],["moduledef",4]],[[["variantdef",4]]],[[["struct",3]],["adt",4]],[[["union",3]],["adt",4]],[[["enum",3]],["adt",4]],[[["struct",3]],["variantdef",4]],[[["union",3]],["variantdef",4]],[[["variant",3]],["variantdef",4]],[[["function",3]],["defwithbody",4]],[[["const",3]],["defwithbody",4]],[[["static",3]],["defwithbody",4]],[[["mutability",4]],["access",4]],[[["function",3]],["genericdef",4]],[[["adt",4]],["genericdef",4]],[[["struct",3]],["genericdef",4]],[[["enum",3]],["genericdef",4]],[[["union",3]],["genericdef",4]],[[["trait",3]],["genericdef",4]],[[["typealias",3]],["genericdef",4]],[[["impl",3]],["genericdef",4]],[[["variant",3]],["genericdef",4]],[[["const",3]],["genericdef",4]],[[["typeparam",3]],["genericparam",4]],[[["lifetimeparam",3]],["genericparam",4]],[[["constparam",3]],["genericparam",4]],[[["iteminns",4]]],[[],["pathresolution",4]],[[],["namespace",4]],[[],["crate",3]],[[],["module",3]],[[],["moduledef",4]],[[],["field",3]],[[],["struct",3]],[[],["union",3]],[[],["enum",3]],[[],["variant",3]],[[],["adt",4]],[[],["variantdef",4]],[[],["defwithbody",4]],[[],["function",3]],[[],["param",3]],[[],["selfparam",3]],[[],["const",3]],[[],["static",3]],[[],["trait",3]],[[],["typealias",3]],[[],["builtintype",3]],[[],["macrokind",4]],[[],["macrodef",3]],[[],["associtem",4]],[[],["genericdef",4]],[[],["local",3]],[[],["label",3]],[[],["genericparam",4]],[[],["typeparam",3]],[[],["lifetimeparam",3]],[[],["constparam",3]],[[],["impl",3]],[[],["type",3]],[[["pathresolution",4]],["bool",15]],[[["pathresolution",4]],["bool",15]],[[["namespace",4]],["bool",15]],[[["crate",3]],["bool",15]],[[["crate",3]],["bool",15]],[[["module",3]],["bool",15]],[[["module",3]],["bool",15]],[[["moduledef",4]],["bool",15]],[[["moduledef",4]],["bool",15]],[[["field",3]],["bool",15]],[[["field",3]],["bool",15]],[[["fieldsource",4]],["bool",15]],[[["fieldsource",4]],["bool",15]],[[["struct",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["union",3]],["bool",15]],[[["union",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["variant",3]],["bool",15]],[[["variant",3]],["bool",15]],[[["adt",4]],["bool",15]],[[["adt",4]],["bool",15]],[[["variantdef",4]],["bool",15]],[[["variantdef",4]],["bool",15]],[[["defwithbody",4]],["bool",15]],[[["defwithbody",4]],["bool",15]],[[["function",3]],["bool",15]],[[["function",3]],["bool",15]],[[["selfparam",3]],["bool",15]],[[["selfparam",3]],["bool",15]],[[["const",3]],["bool",15]],[[["const",3]],["bool",15]],[[["static",3]],["bool",15]],[[["static",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["builtintype",3]],["bool",15]],[[["builtintype",3]],["bool",15]],[[["macrokind",4]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["associtem",4]],["bool",15]],[[["associtem",4]],["bool",15]],[[["genericdef",4]],["bool",15]],[[["genericdef",4]],["bool",15]],[[["local",3]],["bool",15]],[[["local",3]],["bool",15]],[[["label",3]],["bool",15]],[[["label",3]],["bool",15]],[[["genericparam",4]],["bool",15]],[[["genericparam",4]],["bool",15]],[[["typeparam",3]],["bool",15]],[[["typeparam",3]],["bool",15]],[[["lifetimeparam",3]],["bool",15]],[[["lifetimeparam",3]],["bool",15]],[[["constparam",3]],["bool",15]],[[["constparam",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["type",3]],["bool",15]],[[["type",3]],["bool",15]],[[["scopedef",4]],["bool",15]],[[["scopedef",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirdatabase",8]],["option",4]],[[],["semantics",3]],[[["fileid",3]],["sourcefile",3]],[[["macrocall",3]],[["syntaxnode",6],["option",4]]],[[["syntaxtoken",6],["macrocall",3],["tokentree",3]],["option",4]],[[["syntaxtoken",6]],["syntaxtoken",6]],[[["textsize",3],["syntaxnode",6]],[["astnode",8],["option",4]]],[[["syntaxnode",6]],["filerange",3]],[[["syntaxnodeptr",3],["infile",3]],["filerange",3]],[[["syntaxtoken",6]]],[[["syntaxnode",6]]],[[["textsize",3],["syntaxnode",6]]],[[["textsize",3],["syntaxnode",6]],[["astnode",8],["option",4]]],[[["textsize",3],["syntaxnode",6]],[["astnode",8],["option",4]]],[[["lifetime",3]],[["lifetimeparam",3],["option",4]]],[[["lifetime",3]],[["option",4],["label",3]]],[[["type",4]],[["type",3],["option",4]]],[[["expr",4]],[["type",3],["option",4]]],[[["pat",4]],[["type",3],["option",4]]],[[["selfparam",3]],[["type",3],["option",4]]],[[["methodcallexpr",3]],[["option",4],["function",3]]],[[["methodcallexpr",3]],[["option",4],["callable",3]]],[[["fieldexpr",3]],[["field",3],["option",4]]],[[["recordexprfield",3]],["option",4]],[[["recordpatfield",3]],[["field",3],["option",4]]],[[["macrocall",3]],[["option",4],["macrodef",3]]],[[["path",3]],[["option",4],["pathresolution",4]]],[[["externcrate",3]],[["crate",3],["option",4]]],[[["recordexpr",3]],[["option",4],["variantdef",4]]],[[["identpat",3]],[["option",4],["moduledef",4]]],[[["recordexpr",3]],["vec",3]],[[["recordpat",3]],["vec",3]],[[],["option",4]],[[["fileid",3]],[["option",4],["module",3]]],[[["fileid",3]]],[[["syntaxnode",6]],["semanticsscope",3]],[[["textsize",3],["syntaxtoken",6]],["semanticsscope",3]],[[["trait",3]],["semanticsscope",3]],[[["syntaxnode",6]]],[[["methodcallexpr",3]],["bool",15]],[[["refexpr",3]],["bool",15]],[[["identpat",3]],["bool",15]],[[],[["option",4],["module",3]]],[[],[["crate",3],["option",4]]],[[],[["traitid",3],["fxhashset",6]]],[[["fnmut",8]]],[[["path",3]],[["option",4],["pathresolution",4]]],[[["hirdatabase",8]],[["modulesource",4],["infile",3]]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],[["option",4],["infile",3]]],[[],["str",15]],[[]],[[],["diagnosticsinkbuilder",3]],[[],["diagnosticsinkbuilder",3]],[[],["diagnosticsinkbuilder",3]],[[],["diagnosticsink",3]],[[["interndatabase",8]],[["internfunctionquery",3],["querytable",3]]],[[["interndatabase",8]],[["querytablemut",3],["internfunctionquery",3]]],[[["interndatabase",8]],[["querytable",3],["internfunctionlookupquery",3]]],[[["interndatabase",8]],[["internfunctionlookupquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["internstructquery",3],["querytable",3]]],[[["interndatabase",8]],[["internstructquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["internstructlookupquery",3],["querytable",3]]],[[["interndatabase",8]],[["querytablemut",3],["internstructlookupquery",3]]],[[["interndatabase",8]],[["querytable",3],["internunionquery",3]]],[[["interndatabase",8]],[["internunionquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["querytable",3],["internunionlookupquery",3]]],[[["interndatabase",8]],[["internunionlookupquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["querytable",3],["internenumquery",3]]],[[["interndatabase",8]],[["internenumquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["querytable",3],["internenumlookupquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internenumlookupquery",3]]],[[["interndatabase",8]],[["querytable",3],["internconstquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internconstquery",3]]],[[["interndatabase",8]],[["internconstlookupquery",3],["querytable",3]]],[[["interndatabase",8]],[["querytablemut",3],["internconstlookupquery",3]]],[[["interndatabase",8]],[["internstaticquery",3],["querytable",3]]],[[["interndatabase",8]],[["internstaticquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["querytable",3],["internstaticlookupquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internstaticlookupquery",3]]],[[["interndatabase",8]],[["querytable",3],["interntraitquery",3]]],[[["interndatabase",8]],[["interntraitquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["interntraitlookupquery",3],["querytable",3]]],[[["interndatabase",8]],[["interntraitlookupquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["querytable",3],["interntypealiasquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["interntypealiasquery",3]]],[[["interndatabase",8]],[["querytable",3],["interntypealiaslookupquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["interntypealiaslookupquery",3]]],[[["interndatabase",8]],[["querytable",3],["internimplquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internimplquery",3]]],[[["interndatabase",8]],[["querytable",3],["internimpllookupquery",3]]],[[["interndatabase",8]],[["internimpllookupquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["querytable",3],["internblockquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internblockquery",3]]],[[["interndatabase",8]],[["internblocklookupquery",3],["querytable",3]]],[[["interndatabase",8]],[["querytablemut",3],["internblocklookupquery",3]]],[[["u16",15]],["interndatabasegroupstorage__",3]],[[["formatter",3],["interndatabase",8],["databasekeyindex",3]],[["result",4],["error",3]]],[[["revision",3],["interndatabase",8],["databasekeyindex",3]],["bool",15]],[[["fnmut",8],["runtime",3]]],[[["defdatabase",8]],[["fileitemtreequery",3],["querytable",3]]],[[["defdatabase",8]],[["fileitemtreequery",3],["querytablemut",3]]],[[["defdatabase",8]],[["cratedefmapqueryquery",3],["querytable",3]]],[[["defdatabase",8]],[["querytablemut",3],["cratedefmapqueryquery",3]]],[[["defdatabase",8]],[["querytable",3],["blockdefmapquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["blockdefmapquery",3]]],[[["defdatabase",8]],[["structdataquery",3],["querytable",3]]],[[["defdatabase",8]],[["structdataquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["uniondataquery",3],["querytable",3]]],[[["defdatabase",8]],[["querytablemut",3],["uniondataquery",3]]],[[["defdatabase",8]],[["enumdataquery",3],["querytable",3]]],[[["defdatabase",8]],[["enumdataquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytable",3],["impldataquery",3]]],[[["defdatabase",8]],[["impldataquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["traitdataquery",3],["querytable",3]]],[[["defdatabase",8]],[["traitdataquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytable",3],["typealiasdataquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["typealiasdataquery",3]]],[[["defdatabase",8]],[["querytable",3],["functiondataquery",3]]],[[["defdatabase",8]],[["functiondataquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytable",3],["constdataquery",3]]],[[["defdatabase",8]],[["constdataquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytable",3],["staticdataquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["staticdataquery",3]]],[[["defdatabase",8]],[["bodywithsourcemapquery",3],["querytable",3]]],[[["defdatabase",8]],[["querytablemut",3],["bodywithsourcemapquery",3]]],[[["defdatabase",8]],[["bodyquery",3],["querytable",3]]],[[["defdatabase",8]],[["querytablemut",3],["bodyquery",3]]],[[["defdatabase",8]],[["exprscopesquery",3],["querytable",3]]],[[["defdatabase",8]],[["exprscopesquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["genericparamsquery",3],["querytable",3]]],[[["defdatabase",8]],[["genericparamsquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytable",3],["variantsattrsquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["variantsattrsquery",3]]],[[["defdatabase",8]],[["fieldsattrsquery",3],["querytable",3]]],[[["defdatabase",8]],[["querytablemut",3],["fieldsattrsquery",3]]],[[["defdatabase",8]],[["querytable",3],["variantsattrssourcemapquery",3]]],[[["defdatabase",8]],[["variantsattrssourcemapquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["fieldsattrssourcemapquery",3],["querytable",3]]],[[["defdatabase",8]],[["fieldsattrssourcemapquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytable",3],["attrsquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["attrsquery",3]]],[[["defdatabase",8]],[["cratelangitemsquery",3],["querytable",3]]],[[["defdatabase",8]],[["cratelangitemsquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytable",3],["langitemquery",3]]],[[["defdatabase",8]],[["langitemquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["importmapquery",3],["querytable",3]]],[[["defdatabase",8]],[["importmapquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytable",3],["fieldvisibilitiesquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["fieldvisibilitiesquery",3]]],[[["defdatabase",8]],[["querytable",3],["functionvisibilityquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["functionvisibilityquery",3]]],[[["u16",15]],["defdatabasegroupstorage__",3]],[[["defdatabase",8],["formatter",3],["databasekeyindex",3]],[["result",4],["error",3]]],[[["defdatabase",8],["revision",3],["databasekeyindex",3]],["bool",15]],[[["fnmut",8],["runtime",3]]],[[["astdatabase",8]],[["astidmapquery",3],["querytable",3]]],[[["astdatabase",8]],[["astidmapquery",3],["querytablemut",3]]],[[["astdatabase",8]],[["querytable",3],["hygieneframequery",3]]],[[["astdatabase",8]],[["hygieneframequery",3],["querytablemut",3]]],[[["astdatabase",8]],[["querytable",3],["interneagerexpansionquery",3]]],[[["astdatabase",8]],[["interneagerexpansionquery",3],["querytablemut",3]]],[[["astdatabase",8]],[["internmacroquery",3],["querytable",3]]],[[["astdatabase",8]],[["internmacroquery",3],["querytablemut",3]]],[[["astdatabase",8]],[["macroargtextquery",3],["querytable",3]]],[[["astdatabase",8]],[["macroargtextquery",3],["querytablemut",3]]],[[["astdatabase",8]],[["macrodefquery",3],["querytable",3]]],[[["astdatabase",8]],[["querytablemut",3],["macrodefquery",3]]],[[["astdatabase",8]],[["querytable",3],["macroexpandquery",3]]],[[["astdatabase",8]],[["macroexpandquery",3],["querytablemut",3]]],[[["astdatabase",8]],[["querytable",3],["parsemacroexpansionquery",3]]],[[["astdatabase",8]],[["querytablemut",3],["parsemacroexpansionquery",3]]],[[["hirdatabase",8]],[["querytable",3],["inferqueryquery",3]]],[[["hirdatabase",8]],[["inferqueryquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytable",3],["tyquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["tyquery",3]]],[[["hirdatabase",8]],[["valuetyquery",3],["querytable",3]]],[[["hirdatabase",8]],[["valuetyquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["implselftyquery",3],["querytable",3]]],[[["hirdatabase",8]],[["implselftyquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytable",3],["constparamtyquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["constparamtyquery",3]]],[[["hirdatabase",8]],[["querytable",3],["impltraitquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["impltraitquery",3]]],[[["hirdatabase",8]],[["fieldtypesquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytablemut",3],["fieldtypesquery",3]]],[[["hirdatabase",8]],[["callableitemsignaturequery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytablemut",3],["callableitemsignaturequery",3]]],[[["hirdatabase",8]],[["returntypeimpltraitsquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytablemut",3],["returntypeimpltraitsquery",3]]],[[["hirdatabase",8]],[["querytable",3],["genericpredicatesforparamquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["genericpredicatesforparamquery",3]]],[[["hirdatabase",8]],[["querytable",3],["genericpredicatesquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["genericpredicatesquery",3]]],[[["hirdatabase",8]],[["querytable",3],["traitenvironmentquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["traitenvironmentquery",3]]],[[["hirdatabase",8]],[["querytable",3],["genericdefaultsquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["genericdefaultsquery",3]]],[[["hirdatabase",8]],[["querytable",3],["inherentimplsincratequery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["inherentimplsincratequery",3]]],[[["hirdatabase",8]],[["traitimplsincratequery",3],["querytable",3]]],[[["hirdatabase",8]],[["traitimplsincratequery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytable",3],["traitimplsindepsquery",3]]],[[["hirdatabase",8]],[["traitimplsindepsquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["interncallabledefquery",3],["querytable",3]]],[[["hirdatabase",8]],[["interncallabledefquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytable",3],["interncallabledeflookupquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["interncallabledeflookupquery",3]]],[[["hirdatabase",8]],[["interntypeparamidquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytablemut",3],["interntypeparamidquery",3]]],[[["hirdatabase",8]],[["querytable",3],["interntypeparamidlookupquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["interntypeparamidlookupquery",3]]],[[["hirdatabase",8]],[["internlifetimeparamidquery",3],["querytable",3]]],[[["hirdatabase",8]],[["internlifetimeparamidquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytable",3],["internlifetimeparamidlookupquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["internlifetimeparamidlookupquery",3]]],[[["hirdatabase",8]],[["querytable",3],["internconstparamidquery",3]]],[[["hirdatabase",8]],[["internconstparamidquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytable",3],["internconstparamidlookupquery",3]]],[[["hirdatabase",8]],[["internconstparamidlookupquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytable",3],["internimpltraitidquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["internimpltraitidquery",3]]],[[["hirdatabase",8]],[["querytable",3],["internimpltraitidlookupquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["internimpltraitidlookupquery",3]]],[[["hirdatabase",8]],[["internclosurequery",3],["querytable",3]]],[[["hirdatabase",8]],[["internclosurequery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["internclosurelookupquery",3],["querytable",3]]],[[["hirdatabase",8]],[["internclosurelookupquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytable",3],["associatedtydataquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["associatedtydataquery",3]]],[[["hirdatabase",8]],[["querytable",3],["traitdatumquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["traitdatumquery",3]]],[[["hirdatabase",8]],[["querytable",3],["structdatumquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["structdatumquery",3]]],[[["hirdatabase",8]],[["querytable",3],["impldatumquery",3]]],[[["hirdatabase",8]],[["impldatumquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["fndefdatumquery",3],["querytable",3]]],[[["hirdatabase",8]],[["fndefdatumquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytable",3],["fndefvariancequery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["fndefvariancequery",3]]],[[["hirdatabase",8]],[["querytable",3],["adtvariancequery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["adtvariancequery",3]]],[[["hirdatabase",8]],[["associatedtyvaluequery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytablemut",3],["associatedtyvaluequery",3]]],[[["hirdatabase",8]],[["querytable",3],["traitsolvequeryquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["traitsolvequeryquery",3]]],[[["hirdatabase",8]],[["programclausesforchalkenvquery",3],["querytable",3]]],[[["hirdatabase",8]],[["programclausesforchalkenvquery",3],["querytablemut",3]]],[[["u16",15]],["hirdatabasegroupstorage__",3]],[[["hirdatabase",8],["formatter",3],["databasekeyindex",3]],[["result",4],["error",3]]],[[["hirdatabase",8],["revision",3],["databasekeyindex",3]],["bool",15]],[[["fnmut",8],["runtime",3]]],[[],["bool",15]],[[["subtree",3]],["cfgexpr",4]],[[["fn",8]],[["bool",15],["option",4]]],[[["cfgexpr",4]],[["bool",15],["option",4]]],[[["smolstr",3]]],[[["smolstr",3]]],[[["cfgdiff",3]]],[[],[["option",4],["smolstr",3]]],null,[[["str",15]],["attrquery",3]],[[],[["option",4],["cfgexpr",4]]],[[],[["option",4],["documentation",3]]],[[["defdatabase",8]],["attrsourcemap",3]],[[["defdatabase",8]],["option",4]],[[],["str",15]],[[["idx",3],["scopedata",3]]],[[["idx",3],["scopedata",3]],[["blockid",3],["option",4]]],[[["idx",3],["scopedata",3]],["option",4]],[[["idx",3],["option",4]]],[[["idx",3],["name",3],["scopedata",3]],[["option",4],["scopeentry",3]]],[[["idx",3],["expr",4]],[["idx",3],["option",4]]],[[],["hashmap",3]],[[["defdatabase",8],["crateid",3]],[["arc",3],["importmap",3]]],[[["iteminns",4]],[["importpath",3],["option",4]]],[[["iteminns",4]],[["option",4],["importinfo",3]]],[[["string",3]],["query",3]],[[],["query",3]],[[],["query",3]],[[["searchmode",4]],["query",3]],[[["usize",15]],["query",3]],[[],["query",3]],[[["importkind",4]],["query",3]],[[],[["moduledefid",4],["option",4]]],[[["defdatabase",8]],[["option",4],["crateid",3]]],[[["defdatabase",8],["path",3],["hygiene",3]],[["modpath",3],["option",4]]],[[["pathkind",4]],["modpath",3]],[[["pathkind",4]],["modpath",3]],[[]],[[["name",3]]],[[],[["name",3],["option",4]]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["name",3]]],[[["bool",15]],["mutability",4]],[[],["str",15]],[[],["str",15]],[[["type",4],["lowerctx",3]],["typeref",4]],[[]],[[["defdatabase",8],["moduleid",3]],["bool",15]],[[["usize",15]],["name",3]],[[["lifetime",3]],["name",3]],[[],["name",3]],[[],[["option",4],["usize",15]]],[[],["expandresult",3]],[[["expanderror",4]],["expandresult",3]],[[["string",3]],["expandresult",3]],[[],["expandresult",3]],[[],[["result",4],["expanderror",4]]],[[["astdatabase",8]],["fileid",3]],[[["astdatabase",8]],["u32",15]],[[["astdatabase",8]],[["infile",3],["option",4]]],[[["astdatabase",8]],[["option",4],["expansioninfo",3]]],[[["astdatabase",8]],[["option",4],["infile",3]]],[[["astdatabase",8]],["bool",15]],[[["astdatabase",8]]],[[["hirfileid",3]],["infile",3]],[[],["infile",3]],[[],["infile",3]],[[],["infile",3]],[[["astdatabase",8]],[["syntaxnode",3],["rustlanguage",4]]],[[],["infile",3]],[[],[["option",4],["infile",3]]],[[["astdatabase",8]]],[[["astdatabase",8]],["filerange",3]],[[["astdatabase",8]]],[[]],[[],[["syntaxnode",3],["infile",3]]],[[],["hirfileid",3]],[[["astdatabase",8],["crateid",3],["macrocallkind",4]],["lazymacroid",3]],[[],[["infile",3],["either",4],["infile",3]]],[[],["bool",15]]],"p":[[3,"InactiveCode"],[3,"UnresolvedMacroCall"],[3,"UnresolvedModule"],[3,"UnresolvedProcMacro"],[8,"Diagnostic"],[3,"DiagnosticCode"],[3,"IncorrectCase"],[3,"MismatchedArgCount"],[3,"MissingFields"],[3,"MissingMatchArms"],[3,"MissingOkOrSomeInTailExpr"],[3,"NoSuchField"],[3,"RemoveThisSemicolon"],[3,"ReplaceFilterMapNextWithFindMap"],[8,"InternDatabase"],[3,"InternDatabaseGroupStorage__"],[8,"DefDatabase"],[3,"DefDatabaseGroupStorage__"],[8,"AstDatabase"],[8,"HirDatabase"],[3,"HirDatabaseGroupStorage__"],[8,"HasAttrs"],[4,"Namespace"],[8,"HasSource"],[4,"PathResolution"],[3,"Semantics"],[3,"SemanticsScope"],[4,"CfgAtom"],[13,"KeyValue"],[4,"CfgExpr"],[4,"StructKind"],[4,"PrefixKind"],[3,"ImportInfo"],[3,"ImportPath"],[4,"ImportKind"],[4,"SearchMode"],[4,"ItemInNs"],[4,"ModuleSource"],[3,"ModPath"],[4,"PathKind"],[4,"Mutability"],[4,"TypeRef"],[4,"Visibility"],[3,"ExpandResult"],[3,"InFile"],[4,"MacroCallId"],[3,"MacroCallLoc"],[3,"MacroDefId"],[4,"Origin"],[8,"HirDisplay"],[3,"CrateDependency"],[3,"Crate"],[4,"ModuleDef"],[3,"Module"],[4,"FieldSource"],[3,"Field"],[3,"Struct"],[3,"Union"],[3,"Enum"],[3,"Variant"],[4,"Adt"],[4,"VariantDef"],[4,"DefWithBody"],[3,"Function"],[4,"Access"],[3,"Param"],[3,"SelfParam"],[3,"Const"],[3,"Static"],[3,"Trait"],[3,"TypeAlias"],[3,"BuiltinType"],[4,"MacroKind"],[3,"MacroDef"],[4,"AssocItem"],[4,"AssocItemContainer"],[8,"AsAssocItem"],[4,"GenericDef"],[3,"Local"],[3,"Label"],[4,"GenericParam"],[3,"TypeParam"],[3,"LifetimeParam"],[3,"ConstParam"],[3,"Impl"],[3,"Type"],[4,"CallableKind"],[3,"Callable"],[4,"ScopeDef"],[8,"HasVisibility"],[3,"DiagnosticSink"],[3,"DiagnosticSinkBuilder"],[3,"InternDatabaseStorage"],[3,"InternFunctionQuery"],[3,"InternFunctionLookupQuery"],[3,"InternStructQuery"],[3,"InternStructLookupQuery"],[3,"InternUnionQuery"],[3,"InternUnionLookupQuery"],[3,"InternEnumQuery"],[3,"InternEnumLookupQuery"],[3,"InternConstQuery"],[3,"InternConstLookupQuery"],[3,"InternStaticQuery"],[3,"InternStaticLookupQuery"],[3,"InternTraitQuery"],[3,"InternTraitLookupQuery"],[3,"InternTypeAliasQuery"],[3,"InternTypeAliasLookupQuery"],[3,"InternImplQuery"],[3,"InternImplLookupQuery"],[3,"InternBlockQuery"],[3,"InternBlockLookupQuery"],[3,"DefDatabaseStorage"],[3,"FileItemTreeQuery"],[3,"CrateDefMapQueryQuery"],[3,"BlockDefMapQuery"],[3,"StructDataQuery"],[3,"UnionDataQuery"],[3,"EnumDataQuery"],[3,"ImplDataQuery"],[3,"TraitDataQuery"],[3,"TypeAliasDataQuery"],[3,"FunctionDataQuery"],[3,"ConstDataQuery"],[3,"StaticDataQuery"],[3,"BodyWithSourceMapQuery"],[3,"BodyQuery"],[3,"ExprScopesQuery"],[3,"GenericParamsQuery"],[3,"VariantsAttrsQuery"],[3,"FieldsAttrsQuery"],[3,"VariantsAttrsSourceMapQuery"],[3,"FieldsAttrsSourceMapQuery"],[3,"AttrsQuery"],[3,"CrateLangItemsQuery"],[3,"LangItemQuery"],[3,"ImportMapQuery"],[3,"FieldVisibilitiesQuery"],[3,"FunctionVisibilityQuery"],[3,"AstDatabaseStorage"],[3,"AstIdMapQuery"],[3,"HygieneFrameQuery"],[3,"InternEagerExpansionQuery"],[3,"InternMacroQuery"],[3,"MacroArgTextQuery"],[3,"MacroDefQuery"],[3,"MacroExpandQuery"],[3,"ParseMacroExpansionQuery"],[3,"HirDatabaseStorage"],[3,"InferQueryQuery"],[3,"TyQuery"],[3,"ValueTyQuery"],[3,"ImplSelfTyQuery"],[3,"ConstParamTyQuery"],[3,"ImplTraitQuery"],[3,"FieldTypesQuery"],[3,"CallableItemSignatureQuery"],[3,"ReturnTypeImplTraitsQuery"],[3,"GenericPredicatesForParamQuery"],[3,"GenericPredicatesQuery"],[3,"TraitEnvironmentQuery"],[3,"GenericDefaultsQuery"],[3,"InherentImplsInCrateQuery"],[3,"TraitImplsInCrateQuery"],[3,"TraitImplsInDepsQuery"],[3,"InternCallableDefQuery"],[3,"InternCallableDefLookupQuery"],[3,"InternTypeParamIdQuery"],[3,"InternTypeParamIdLookupQuery"],[3,"InternLifetimeParamIdQuery"],[3,"InternLifetimeParamIdLookupQuery"],[3,"InternConstParamIdQuery"],[3,"InternConstParamIdLookupQuery"],[3,"InternImplTraitIdQuery"],[3,"InternImplTraitIdLookupQuery"],[3,"InternClosureQuery"],[3,"InternClosureLookupQuery"],[3,"AssociatedTyDataQuery"],[3,"TraitDatumQuery"],[3,"StructDatumQuery"],[3,"ImplDatumQuery"],[3,"FnDefDatumQuery"],[3,"FnDefVarianceQuery"],[3,"AdtVarianceQuery"],[3,"AssociatedTyValueQuery"],[3,"TraitSolveQueryQuery"],[3,"ProgramClausesForChalkEnvQuery"],[3,"InternedTypeParamId"],[3,"InternedLifetimeParamId"],[3,"InternedConstParamId"],[3,"InternedOpaqueTyId"],[3,"InternedClosureId"],[3,"InternedCallableDefId"],[3,"CfgOptions"],[3,"Attr"],[3,"Attrs"],[3,"AttrsWithOwner"],[3,"Documentation"],[3,"ExprScopes"],[3,"ImportMap"],[3,"Query"],[3,"Name"],[3,"HirFileId"],[3,"MacroFile"]]},\
"hir_def":{"doc":"<code>hir_def</code> crate contains everything between macro expansion …","t":[0,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,0,3,11,3,3,18,11,11,11,11,11,3,11,3,11,3,4,13,13,11,3,11,11,11,11,0,3,12,4,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,3,3,12,12,12,3,12,12,12,4,13,13,11,11,11,11,11,11,11,3,12,12,3,18,11,11,11,11,11,11,11,11,0,3,8,10,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,14,14,0,4,13,13,11,11,11,4,13,13,11,3,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,11,4,13,13,13,11,11,11,0,4,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,4,13,13,13,13,13,13,18,11,11,11,0,17,17,17,0,5,3,12,12,12,3,12,12,3,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,0,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,11,4,13,13,13,11,11,0,3,8,16,16,10,10,3,3,11,11,0,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,0,3,18,18,18,3,11,11,11,11,4,13,13,13,13,13,8,16,10,10,10,10,3,3,12,11,11,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,4,13,13,3,12,12,12,12,12,12,4,13,13,13,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,12,4,13,12,13,3,12,12,12,3,12,12,3,12,12,12,11,11,11,4,13,13,13,13,3,12,12,3,4,13,13,13,3,12,12,12,0,3,11,11,3,11,8,10,0,3,12,12,12,12,3,12,12,12,3,12,12,4,13,13,13,3,12,12,12,4,13,13,11,11,11,11,4,13,13,13,0,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,3,12,12,12,12,12,3,12,12,12,12,12,12,11,11,3,12,12,12,12,3,12,12,12,3,12,12,12,12,12,0,3,12,12,12,3,12,3,12,12,4,13,13,13,3,12,12,12,12,4,13,12,12,13,12,12,13,12,12,12,4,13,13,11,11,11,0,4,13,13,13,13,13,13,11,11,11,11,11,11,3,11,5,0,6,6,3,12,6,4,13,13,13,13,13,13,13,4,13,13,13,12,12,12,13,12,12,12,12,13,12,12,13,12,12,12,13,12,12,12,12,13,12,12,13,12,12,12,12,13,12,12,13,12,13,12,12,13,12,13,12,13,12,12,12,13,12,12,13,12,13,12,13,12,13,12,13,12,13,12,12,13,12,12,12,13,12,13,12,12,13,12,12,12,13,12,12,12,13,12,12,13,12,12,12,12,13,12,13,12,13,12,13,13,4,13,13,13,13,12,4,13,13,4,13,12,13,12,12,4,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,4,13,13,12,12,3,12,12,12,3,12,12,4,13,12,12,12,13,12,12,11,4,13,13,13,13,11,3,12,12,4,13,13,13,12,12,13,13,12,12,12,13,12,12,13,12,12,12,13,13,13,12,12,12,13,12,12,12,13,12,12,13,12,13,11,0,0,6,3,3,11,11,3,11,11,11,11,11,11,11,3,12,3,11,11,11,11,3,3,12,12,12,12,12,6,6,6,6,6,6,3,3,11,11,11,11,11,11,11,11,11,11,11,0,3,4,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,5,5,8,10,0,3,4,13,12,13,12,12,12,13,12,13,12,11,11,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,0,8,16,10,8,16,10,0,8,11,10,0,4,13,13,11,4,13,13,11,0,5,5,4,13,13,13,0,3,12,12,12,3,12,3,11,11,11,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,3,11,11,11,11,11,11,11,5,3,12,11,11,11,11,6,3,12,12,3,12,12,3,3,3,6,3,6,3,12,12,6,3,12,12,6,3,3,6,3,6,3,3,3,3,3,12,12,6,3,12,12,6,3,12,12,6,4,13,13,13,4,13,13,13,4,13,13,13,4,13,13,13,13,13,13,13,13,13,4,13,13,13,11,4,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,11,11,8,16,10,8,10,11,11,11,8,11,10,3,12,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["db","InternDatabase","intern_function","lookup_intern_function","intern_struct","lookup_intern_struct","intern_union","lookup_intern_union","intern_enum","lookup_intern_enum","intern_const","lookup_intern_const","intern_static","lookup_intern_static","intern_trait","lookup_intern_trait","intern_type_alias","lookup_intern_type_alias","intern_impl","lookup_intern_impl","intern_block","lookup_intern_block","InternDatabaseStorage","InternFunctionQuery","in_db","in_db_mut","InternFunctionLookupQuery","in_db","in_db_mut","InternStructQuery","in_db","in_db_mut","InternStructLookupQuery","in_db","in_db_mut","InternUnionQuery","in_db","in_db_mut","InternUnionLookupQuery","in_db","in_db_mut","InternEnumQuery","in_db","in_db_mut","InternEnumLookupQuery","in_db","in_db_mut","InternConstQuery","in_db","in_db_mut","InternConstLookupQuery","in_db","in_db_mut","InternStaticQuery","in_db","in_db_mut","InternStaticLookupQuery","in_db","in_db_mut","InternTraitQuery","in_db","in_db_mut","InternTraitLookupQuery","in_db","in_db_mut","InternTypeAliasQuery","in_db","in_db_mut","InternTypeAliasLookupQuery","in_db","in_db_mut","InternImplQuery","in_db","in_db_mut","InternImplLookupQuery","in_db","in_db_mut","InternBlockQuery","in_db","in_db_mut","InternBlockLookupQuery","in_db","in_db_mut","InternDatabaseGroupStorage__","intern_function","lookup_intern_function","intern_struct","lookup_intern_struct","intern_union","lookup_intern_union","intern_enum","lookup_intern_enum","intern_const","lookup_intern_const","intern_static","lookup_intern_static","intern_trait","lookup_intern_trait","intern_type_alias","lookup_intern_type_alias","intern_impl","lookup_intern_impl","intern_block","lookup_intern_block","new","fmt_index","maybe_changed_since","for_each_query","DefDatabase","file_item_tree","crate_def_map","crate_def_map_query","block_def_map","struct_data","union_data","enum_data","impl_data","trait_data","type_alias_data","function_data","const_data","static_data","body_with_source_map","body","expr_scopes","generic_params","variants_attrs","fields_attrs","variants_attrs_source_map","fields_attrs_source_map","attrs","crate_lang_items","lang_item","import_map","field_visibilities","function_visibility","DefDatabaseStorage","FileItemTreeQuery","in_db","in_db_mut","CrateDefMapQueryQuery","in_db","in_db_mut","BlockDefMapQuery","in_db","in_db_mut","StructDataQuery","in_db","in_db_mut","UnionDataQuery","in_db","in_db_mut","EnumDataQuery","in_db","in_db_mut","ImplDataQuery","in_db","in_db_mut","TraitDataQuery","in_db","in_db_mut","TypeAliasDataQuery","in_db","in_db_mut","FunctionDataQuery","in_db","in_db_mut","ConstDataQuery","in_db","in_db_mut","StaticDataQuery","in_db","in_db_mut","BodyWithSourceMapQuery","in_db","in_db_mut","BodyQuery","in_db","in_db_mut","ExprScopesQuery","in_db","in_db_mut","GenericParamsQuery","in_db","in_db_mut","VariantsAttrsQuery","in_db","in_db_mut","FieldsAttrsQuery","in_db","in_db_mut","VariantsAttrsSourceMapQuery","in_db","in_db_mut","FieldsAttrsSourceMapQuery","in_db","in_db_mut","AttrsQuery","in_db","in_db_mut","CrateLangItemsQuery","in_db","in_db_mut","LangItemQuery","in_db","in_db_mut","ImportMapQuery","in_db","in_db_mut","FieldVisibilitiesQuery","in_db","in_db_mut","FunctionVisibilityQuery","in_db","in_db_mut","DefDatabaseGroupStorage__","file_item_tree","crate_def_map_query","block_def_map","struct_data","union_data","enum_data","impl_data","trait_data","type_alias_data","function_data","const_data","static_data","body_with_source_map","body","expr_scopes","generic_params","variants_attrs","fields_attrs","variants_attrs_source_map","fields_attrs_source_map","attrs","crate_lang_items","lang_item","import_map","field_visibilities","function_visibility","new","fmt_index","maybe_changed_since","for_each_query","attr","Documentation","as_str","Attrs","AttrsWithOwner","EMPTY","by_key","cfg","docs","source_map","docs_with_rangemap","AttrSourceMap","source_of","DocsRangeMap","map","Attr","AttrInput","Literal","TokenTree","string_value","AttrQuery","tt_values","string_value","exists","attrs","path","ModPath","kind","PathKind","Plain","Super","Crate","Abs","DollarCrate","ImportAlias","Underscore","Alias","from_src","from_segments","from_kind","segments","push_segment","pop_segment","len","is_ident","is_self","as_ident","Path","GenericArgs","args","has_self_type","bindings","AssociatedTypeBinding","name","type_ref","bounds","GenericArg","Type","Lifetime","from_src","kind","type_anchor","segments","mod_path","qualifier","is_self_type","PathSegment","name","args_and_bindings","PathSegments","EMPTY","is_empty","len","first","last","get","skip","take","iter","__name","Name","AsName","as_name","known","isize","i8","i16","i32","i64","i128","usize","u8","u16","u32","u64","u128","f32","f64","bool","char","str","macro_rules","derive","doc","cfg","cfg_attr","std","core","alloc","iter","ops","future","result","boxed","option","Iterator","IntoIterator","Item","Try","Ok","Future","Result","Option","Output","Target","Box","RangeFrom","RangeFull","RangeInclusive","RangeToInclusive","RangeTo","Range","Neg","Not","Index","filter_map","next","iter_mut","len","is_empty","file","column","compile_error","line","module_path","assert","core_panic","std_panic","stringify","concat","include","include_bytes","include_str","format_args","format_args_nl","env","option_env","llvm_asm","asm","global_asm","Copy","Clone","Default","Debug","Hash","Ord","PartialOrd","Eq","PartialEq","abort","size_of","min_align_of","needs_drop","caller_location","size_of_val","min_align_of_val","add_with_overflow","sub_with_overflow","mul_with_overflow","wrapping_add","wrapping_sub","wrapping_mul","saturating_add","saturating_sub","rotate_left","rotate_right","ctpop","ctlz","cttz","bswap","bitreverse","discriminant_value","type_id","likely","unlikely","ptr_guaranteed_eq","ptr_guaranteed_ne","minnumf32","minnumf64","maxnumf32","rustc_peek","maxnumf64","type_name","variant_count","SELF_PARAM","SELF_TYPE","STATIC_LIFETIME","name","__name","type_ref","Mutability","Shared","Mut","from_mutable","as_keyword_for_ref","as_keyword_for_ptr","Rawness","RawPtr","Ref","from_raw","TraitRef","path","TypeRef","Never","Placeholder","Tuple","Path","RawPtr","Reference","Array","Slice","Fn","ImplTrait","DynTrait","Macro","Error","LifetimeRef","name","missing","TypeBound","Path","Lifetime","Error","from_ast","walk","as_path","builtin_type","BuiltinInt","Isize","I8","I16","I32","I64","I128","BuiltinUint","Usize","U8","U16","U32","U64","U128","BuiltinFloat","F32","F64","BuiltinType","Char","Bool","Str","Int","Uint","Float","ALL","from_suffix","from_suffix","from_suffix","builtin_attr","TOOL_MODULES","EXTRA_ATTRIBUTES","INERT_ATTRIBUTES","diagnostics","validate_body","UnresolvedModule","file","decl","candidate","UnresolvedExternCrate","file","item","UnresolvedImport","file","node","UnresolvedMacroCall","file","node","path","InactiveCode","file","node","cfg","opts","UnresolvedProcMacro","file","node","precise_location","macro_name","MacroError","file","node","message","per_ns","PerNs","types","values","macros","none","values","types","both","macros","is_none","take_types","take_types_vis","take_values","take_macros","filter_visibility","with_visibility","or","iter_items","item_scope","PerNsGlobImports","ItemScope","entries","declarations","impls","values","visibility_of","unnamed_consts","ItemInNs","Types","Values","Macros","as_module_def_id","krate","dyn_map","Key","Policy","K","V","insert","get","DynMap","KeyMap","insert","get","keys","Key","FUNCTION","CONST","STATIC","TYPE_ALIAS","IMPL","TRAIT","STRUCT","UNION","ENUM","VARIANT","TUPLE_FIELD","RECORD_FIELD","TYPE_PARAM","LIFETIME_PARAM","CONST_PARAM","MACRO","AstPtrPolicy","item_tree","RawVisibilityId","PUB","PRIV","PUB_CRATE","ItemTree","top_level_items","top_level_attrs","attrs","inner_items_of_block","AttrOwner","ModItem","TopLevel","Variant","Field","Param","ItemTreeNode","Source","ast_id","lookup","id_from_mod_item","id_to_mod_item","FileItemTreeId","ItemTreeId","value","new","file_id","item_tree","ModItem","Import","ExternCrate","Function","Struct","Union","Enum","Const","Static","Trait","Impl","TypeAlias","Mod","MacroCall","MacroRules","MacroDef","Import","path","alias","visibility","is_glob","ast_id","index","ExternCrate","name","alias","visibility","ast_id","Function","name","visibility","generic_params","abi","params","ret_type","ast_id","Param","Normal","Varargs","Struct","name","visibility","generic_params","fields","ast_id","kind","StructDefKind","Record","Tuple","Unit","Union","name","visibility","generic_params","fields","ast_id","Enum","name","visibility","generic_params","variants","ast_id","Const","name","visibility","type_ref","ast_id","Static","name","visibility","mutable","is_extern","type_ref","ast_id","Trait","name","visibility","generic_params","is_auto","is_unsafe","bounds","items","ast_id","Impl","generic_params","target_trait","self_ty","is_negative","items","ast_id","TypeAlias","name","visibility","bounds","generic_params","type_ref","is_extern","ast_id","Mod","name","visibility","kind","ast_id","ModKind","Inline","items","Outline","MacroCall","path","ast_id","fragment","MacroRules","name","ast_id","MacroDef","name","visibility","ast_id","as_assoc_item","downcast","ast_id","AssocItem","Function","TypeAlias","Const","MacroCall","Variant","name","fields","IdRange","Fields","Record","Tuple","Unit","Field","name","type_ref","visibility","intern","Interned","new","new_str","InternStorage","new","Internable","storage","adt","StructData","name","variant_data","repr","visibility","EnumData","name","variants","visibility","EnumVariantData","name","variant_data","VariantData","Record","Tuple","Unit","FieldData","name","type_ref","visibility","ReprKind","Packed","Other","variant","fields","field","kind","StructKind","Tuple","Record","Unit","data","FunctionData","name","params","ret_type","attrs","visibility","abi","has_body","has_self_param","is_default","is_const","is_async","is_unsafe","is_in_extern_block","is_varargs","TypeAliasData","name","type_ref","visibility","is_extern","bounds","TraitData","name","items","is_auto","is_unsafe","visibility","bounds","associated_types","associated_type_by_name","ImplData","target_trait","self_ty","items","is_negative","ConstData","name","type_ref","visibility","StaticData","name","type_ref","visibility","mutable","is_extern","generics","TypeParamData","name","default","provenance","LifetimeParamData","name","ConstParamData","name","ty","TypeParamProvenance","TypeParamList","TraitSelf","ArgumentImplTrait","GenericParams","types","lifetimes","consts","where_predicates","WherePredicate","TypeBound","target","bound","Lifetime","target","bound","ForLifetime","lifetimes","target","bound","WherePredicateTypeTarget","TypeRef","TypeParam","find_type_by_name","find_const_by_name","find_trait_self_param","lang_item","LangItemTarget","EnumId","FunctionId","ImplDefId","StaticId","StructId","TraitId","as_enum","as_function","as_impl_def","as_static","as_struct","as_trait","LangItems","target","lang_attr","expr","ExprId","PatId","Label","name","LabelId","Literal","String","ByteString","Char","Bool","Int","Uint","Float","Expr","Missing","Path","If","condition","then_branch","else_branch","Block","id","statements","tail","label","Loop","body","label","While","condition","body","label","For","iterable","pat","body","label","Call","callee","args","MethodCall","receiver","method_name","args","generic_args","Match","expr","arms","Continue","label","Break","expr","label","Return","expr","Yield","expr","RecordLit","path","fields","spread","Field","expr","name","Await","expr","Try","expr","TryBlock","body","Async","body","Const","body","Cast","expr","type_ref","Ref","expr","rawness","mutability","Box","expr","UnaryOp","expr","op","BinaryOp","lhs","rhs","op","Range","lhs","rhs","range_type","Index","base","index","Lambda","args","arg_types","ret_type","body","Tuple","exprs","Unsafe","body","MacroStmts","tail","Array","Literal","BinaryOp","LogicOp","ArithOp","CmpOp","Assignment","op","LogicOp","And","Or","CmpOp","Eq","negated","Ord","ordering","strict","Ordering","Less","Greater","ArithOp","Add","Mul","Sub","Div","Rem","Shl","Shr","BitXor","BitOr","BitAnd","UnaryOp","Deref","Not","Neg","Array","ElementList","Repeat","initializer","repeat","MatchArm","pat","guard","expr","RecordLitField","name","expr","Statement","Let","pat","type_ref","initializer","Expr","expr","has_semi","walk_child_exprs","BindingAnnotation","Unannotated","Mutable","Ref","RefMut","new","RecordFieldPat","name","pat","Pat","Missing","Wild","Tuple","args","ellipsis","Or","Record","path","args","ellipsis","Range","start","end","Slice","prefix","slice","suffix","Path","Lit","Bind","mode","name","subpat","TupleStruct","path","args","ellipsis","Ref","pat","mutability","Box","inner","ConstBlock","walk_child_pats","body","scope","ScopeId","ExprScopes","ScopeEntry","name","pat","ScopeData","entries","block","label","scope_chain","resolve_name_in_scope","scope_for","scope_by_expr","LowerCtx","db","Expander","new","enter_expand","exit","current_file_id","Mark","Body","exprs","pats","labels","params","body_expr","ExprPtr","ExprSource","PatPtr","PatSource","LabelPtr","LabelSource","BodySourceMap","SyntheticSyntax","blocks","expr_syntax","node_expr","node_macro_file","pat_syntax","node_pat","node_self_param","label_syntax","node_label","field_syntax","node_field","resolver","Resolver","TypeNs","SelfType","GenericParam","AdtId","AdtSelfType","EnumVariantId","TypeAliasId","BuiltinType","TraitId","ResolveValueResult","ValueNs","Partial","ValueNs","ImplSelf","LocalBinding","FunctionId","ConstId","StaticId","StructId","EnumVariantId","GenericParam","resolve_known_trait","resolve_known_struct","resolve_known_enum","resolve_module_path_in_items","resolve_module_path_in_trait_items","resolve_path_in_type_ns","resolve_path_in_type_ns_fully","resolve_visibility","resolve_path_in_value_ns","resolve_path_in_value_ns_fully","resolve_path_as_macro","process_all_names","traits_in_scope","module","krate","where_predicates_in_scope","generic_def","body_owner","ScopeDef","PerNs","ImplSelfType","AdtSelfType","GenericParam","Local","Label","resolver_for_expr","resolver_for_scope","HasResolver","resolver","nameres","DefMap","ModuleOrigin","CrateRoot","definition","File","is_mod_rs","declaration","definition","Inline","definition","BlockExpr","block","file_id","is_inline","ModuleData","parent","children","scope","origin","add_diagnostics","modules_for_file","modules","root","module_id","with_ancestor_maps","parent","containing_module","dump","dump_block_scopes","definition_source","declaration_source","ModuleSource","SourceFile","Module","BlockExpr","src","HasSource","Value","source","HasChildSource","Value","child_source","child_by_source","ChildBySource","child_by_source","child_by_source_to","visibility","RawVisibility","Module","Public","resolve","Visibility","Module","Public","is_visible_from","find_path","find_path","find_path_prefixed","PrefixKind","BySelf","Plain","ByCrate","import_map","ImportInfo","path","container","is_trait_assoc_item","ImportPath","segments","ImportMap","import_map_query","path_of","import_info_for","ImportKind","Module","Function","Adt","EnumVariant","Const","Static","Trait","TypeAlias","BuiltinType","AssociatedItem","SearchMode","Equals","Contains","Fuzzy","Query","new","name_only","assoc_items_only","search_mode","limit","case_sensitive","exclude_import_kind","search_dependencies","ModuleId","local_id","def_map","krate","containing_module","is_block_root","LocalModuleId","ItemLoc","container","id","AssocItemLoc","container","id","FunctionId","StructId","UnionId","UnionLoc","EnumId","EnumLoc","EnumVariantId","parent","local_id","LocalEnumVariantId","FieldId","parent","local_id","LocalFieldId","ConstId","StaticId","StaticLoc","TraitId","TraitLoc","TypeAliasId","ImplId","BlockId","BlockLoc","TypeParamId","parent","local_id","LocalTypeParamId","LifetimeParamId","parent","local_id","LocalLifetimeParamId","ConstParamId","parent","local_id","LocalConstParamId","AssocContainerId","ModuleId","ImplId","TraitId","AdtId","StructId","UnionId","EnumId","GenericParamId","TypeParamId","LifetimeParamId","ConstParamId","ModuleDefId","ModuleId","FunctionId","AdtId","EnumVariantId","ConstId","StaticId","TraitId","TypeAliasId","BuiltinType","DefWithBodyId","FunctionId","StaticId","ConstId","as_generic_def_id","AssocItemId","FunctionId","ConstId","TypeAliasId","GenericDefId","FunctionId","AdtId","TraitId","TypeAliasId","ImplId","EnumVariantId","ConstId","AttrDefId","ModuleId","FieldId","AdtId","FunctionId","EnumVariantId","StaticId","ConstId","TraitId","TypeAliasId","MacroDefId","ImplId","GenericParamId","VariantId","EnumVariantId","StructId","UnionId","variant_data","file_id","Lookup","Data","lookup","HasModule","module","as_mod_item","module","krate","AsMacroCall","as_call_id","as_call_id_with_errors","UnresolvedMacro","path","__known_path","__path","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","resolver","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","resolver","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","resolver","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","resolver","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","hash","fmt","eq","clone","hash","eq","ne","fmt","cmp","clone","partial_cmp","fmt","insert","get","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","ast_id","lookup","id_from_mod_item","id_to_mod_item","storage","storage","storage","storage","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","source","source","child_source","child_source","child_source","child_source","child_source","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","module","module","module","module","module","module","module","drop","as_ref","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","next_back","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","deref","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","as_name","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","is_experimental","code","message","display_source","as_any","is_experimental","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","is_experimental","new_tuple_field","new_lifetime","missing","as_tuple_index","new","with_hygiene"],"q":["hir_def","hir_def::dbhir_def","hir_def::attr","","","","","","","","","","","","","","","","","","","","","","","","hir_def","hir_def::path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::path::__name","","","","hir_def::path::__name::known","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::path::__name","hir_def::path","hir_def","hir_def::type_ref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def","hir_def::builtin_type","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def","hir_def::builtin_attr","","","hir_def","hir_def::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def","hir_def::per_ns","","","","","","","","","","","","","","","","","","hir_def","hir_def::item_scope","","","","","","","","","","","","","","hir_def","hir_def::dyn_map","","","","","","","","","","hir_def","hir_def::keys","","","","","","","","","","","","","","","","","","hir_def","hir_def::item_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::item_tree::ModKind","hir_def::item_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def","hir_def::intern","","","","","","","hir_def","hir_def::adt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def","hir_def::data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def","hir_def::generics","","","","","","","","","","","","","","","","","","","","hir_def::generics::WherePredicate","","hir_def::generics","hir_def::generics::WherePredicate","","hir_def::generics","hir_def::generics::WherePredicate","","","hir_def::generics","","","","","","hir_def","hir_def::lang_item","","","","","","","","","","","","","","","","hir_def","hir_def::expr","","","","","","","","","","","","","","","","","hir_def::expr::Expr","","","hir_def::expr","hir_def::expr::Expr","","","","hir_def::expr","hir_def::expr::Expr","","hir_def::expr","hir_def::expr::Expr","","","hir_def::expr","hir_def::expr::Expr","","","","hir_def::expr","hir_def::expr::Expr","","hir_def::expr","hir_def::expr::Expr","","","","hir_def::expr","hir_def::expr::Expr","","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","","","hir_def::expr","hir_def::expr::Expr","","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","","hir_def::expr","hir_def::expr::Expr","","","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","","hir_def::expr","hir_def::expr::Expr","","","hir_def::expr","hir_def::expr::Expr","","","hir_def::expr","hir_def::expr::Expr","","hir_def::expr","hir_def::expr::Expr","","","","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","hir_def::expr","hir_def::expr::Expr","hir_def::expr","","","","","","","hir_def::expr::BinaryOp","hir_def::expr","","","","","hir_def::expr::CmpOp","hir_def::expr","hir_def::expr::CmpOp","","hir_def::expr","","","","","","","","","","","","","","","","","","","","","hir_def::expr::Array","","hir_def::expr","","","","","","","","","hir_def::expr::Statement","","","hir_def::expr","hir_def::expr::Statement","","hir_def::expr","","","","","","","","","","","","","","hir_def::expr::Pat","","hir_def::expr","","hir_def::expr::Pat","","","hir_def::expr","hir_def::expr::Pat","","hir_def::expr","hir_def::expr::Pat","","","hir_def::expr","","","hir_def::expr::Pat","","","hir_def::expr","hir_def::expr::Pat","","","hir_def::expr","hir_def::expr::Pat","","hir_def::expr","hir_def::expr::Pat","hir_def::expr","","hir_def","hir_def::body","hir_def::body::scope","","","","","","","","","","","","","hir_def::body","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def","hir_def::resolver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def","hir_def::nameres","","","hir_def::nameres::ModuleOrigin","hir_def::nameres","hir_def::nameres::ModuleOrigin","","","hir_def::nameres","hir_def::nameres::ModuleOrigin","hir_def::nameres","hir_def::nameres::ModuleOrigin","hir_def::nameres","","","","","","","","","","","","","","","","","","","","","","","hir_def","hir_def::src","","","","","","hir_def","hir_def::child_by_source","","","hir_def","hir_def::visibility","","","","","","","","hir_def","hir_def::find_path","","","","","","hir_def","hir_def::import_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::dbhir_def::attr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::path::__name","","","","","","","","","","","hir_def::type_ref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::builtin_type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::per_ns","","","","","","","","","","hir_def::item_scope","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::dyn_map","","","","","","","","","","","","","","","","","","","","","","","hir_def::keys","","","","","","","hir_def::item_treehir_def::intern","","","","","","","","","","","","","","","","","hir_def::adt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::generics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::lang_item","","","","","","","","","","","","","","","","","","","","hir_def::expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::body","","","","","","","hir_def::body::scope","","","","","","","","","","","","","","","","","","","","","","","","hir_def::body","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::resolver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::nameres","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::visibility","","","","","","","","","","","","","","","","","","","","hir_def::find_path","","","","","","","","","","hir_def::import_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_defhir_def::expr","","","","hir_def::path::__name","","","","","","","","hir_def::keys","","hir_def::item_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::type_ref","","hir_def::path","hir_def::generics","hir_def","","","","","","","","","","","","","","","","","","","","","","hir_def::item_scope","hir_def","","","","","","","","","","","","","","","","","","","","hir_def::intern","","hir_def::path","","hir_def::item_tree","","","","","","","","","","","","","","","","","","","","","","","","hir_def::expr","","hir_def","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::item_tree","","hir_def::attr","","","","","","hir_def::path","","","","","","","","hir_def::type_ref","","","","","","hir_def::builtin_type","","","","hir_def::diagnostics","","","","hir_def::per_ns","hir_def::item_scope","hir_def::dyn_map","hir_def::item_tree","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::intern","hir_def::adt","","","","","","","hir_def::data","","","","","","hir_def::generics","","","","","","","hir_def::lang_item","","hir_def::expr","","","","","","","","","","","","","","","hir_def::body","hir_def::resolver","","","","hir_def::nameres","","hir_def::visibility","","hir_def::find_path","hir_def::import_map","","hir_def","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::attr","hir_def::per_ns","hir_def::item_scope","","hir_def::dyn_map","hir_def::item_tree","hir_def::generics","hir_def::lang_item","hir_def::body","","hir_def::resolver","hir_def::nameres","","hir_def::import_map","hir_def::path","","hir_def::builtin_type","","","hir_def","","","","","","hir_def::attr","","","","","","","","","","hir_def::path","","","","","","","","","","","","","","","","hir_def::type_ref","","","","","","","","","","hir_def::builtin_type","","","","","hir_def::diagnostics","","","","","","","","hir_def::per_ns","","hir_def::item_scope","","","","hir_def::item_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::intern","","hir_def::adt","","","","","","","","","","","","hir_def::data","","","","","","","","","","","","hir_def::generics","","","","","","","","","","","","","hir_def::lang_item","","","","hir_def::expr","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::body::scope","","","","","","hir_def::body","","","","","hir_def::resolver","","","","","","hir_def::nameres","","","","","","","","hir_def::visibility","","","","hir_def::find_path","hir_def::import_map","","","","","","hir_def","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::path","","hir_def::builtin_type","","","hir_def","","","","","","hir_def::attr","","hir_def::intern","hir_def::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::attr","","","","","","hir_def::path","","","","","","","","hir_def::type_ref","","","","","","hir_def::builtin_type","","","","hir_def::diagnostics","","","","","","","hir_def::per_ns","hir_def::item_scope","","","hir_def::item_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::intern","hir_def::adt","","","","","","","hir_def::data","","","","","","hir_def::generics","","","","","","","hir_def::lang_item","","hir_def::expr","","","","","","","","","","","","","","","hir_def::body::scope","","","hir_def::body","","","","","hir_def::resolver","","","","hir_def::nameres","","","","hir_def::visibility","","hir_def::find_path","hir_def::import_map","","","","","","hir_def","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::path","hir_def::builtin_type","hir_def::import_map","hir_def::dyn_map","hir_def::item_tree","","","","","","","","","","","","","","","","","","","","hir_def::body","","","hir_def::nameres","hir_def::dyn_map","hir_def::attr","hir_def::path","","","","","","","hir_def::type_ref","","","","","","hir_def::builtin_type","","","","hir_def::per_ns","hir_def::item_scope","hir_def::item_tree","","","","hir_def::intern","hir_def::generics","","","","","","","hir_def::lang_item","hir_def::expr","","","","","hir_def::resolver","","","hir_def::nameres","hir_def::visibility","hir_def::import_map","hir_def","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def","","","","","","","","","","","","","","","","","","","","hir_def::builtin_type","hir_def::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::path::__name","","","","hir_def::body",""],"d":["Defines database & queries for name resolution.","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the block-level <code>DefMap</code>, returning <code>None</code> when <code>block</code>…","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A higher level attributes based on TokenTree, with also …","Holds documentation","","","","","","","","","","","Maps the lowered <code>Attr</code> back to its original syntax node.","A struct to map text ranges from [<code>Documentation</code>] back to …","","","","<code>#[attr = \\\"string\\\"]</code>","<code>#[attr(subtree)]</code>","","","","","","","A desugared representation of paths like <code>crate::foo</code> or …","","","","","<code>self::</code> is <code>Super(0)</code>","","Absolute path (::foo)","<code>$crate</code> from macro expansion","","Unnamed alias, as in <code>use Foo as _;</code>","Named alias","","","Creates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …","","","","Returns the number of segments in the path (counting …","","","If this path is a single identifier, like <code>foo</code>, return its …","","Generic arguments to a path segment (e.g. the <code>i32</code> in …","","This specifies whether the args contain a Self type as …","Associated type bindings like in <code>Iterator<Item = T></code>.","An associated type binding like in <code>Iterator<Item = T></code>.","The name of the associated type.","The type bound to this associated type (in <code>Item = T</code>, this …","Bounds for the associated type, like in …","A single generic argument.","","","Converts an <code>ast::Path</code> to <code>Path</code>. Works with use trees. It …","","","","","","","","","","","","","","","","","","","","FIXME: write short doc here","<code>Name</code> is a wrapper around string, which is used in hir for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HIR for references to types. Paths in these are not yet …","","","","","","","","","","","","","Compare ty::Ty","","","","","","","","","A fn pointer. Last element of the vector is the return …","","","","","","","","","","","","Converts an <code>ast::TypeRef</code> to a <code>hir::TypeRef</code>.","","","This module defines built-in types.","Different signed int types.","","","","","","","Different unsigned int types.","","","","","","","","","","","","","","","","","","","","","Builtin attributes resolved by nameres.","Ignored attribute namespaces used by tools.","Built-in macro-like attributes.","“Inert” built-in attributes that have a special …","Diagnostics produced by <code>hir_def</code>.","","","","","","","","","","","","","","","","","","","","","","","","If the diagnostic can be pinpointed more accurately than …","","","","","","In rust, it is possible to have a value, a type and a …","","","","","","","","","","","","","","","","","","","Describes items defined or visible (ie, imported) in a …","","","","","","","","","","","","","","Returns the crate defining this item (or <code>None</code> if <code>self</code> is …","This module defines a <code>DynMap</code> – a container for …","","","","","","","","","","","keys to be used with <code>DynMap</code>","","","","","","","","","","","","","","","","","","XXX: AST Nodes and SyntaxNodes have identity equality …","A simplified AST that only contains items.","","","","","The item tree of a source file.","Returns an iterator over all items located at the top …","Returns the inner attributes of the source file.","","","","Attributes on an item.","Inner attributes of the source file.","","","","Trait implemented by all item nodes in the item tree.","","","Looks up an instance of <code>Self</code> in an item tree.","Downcasts a <code>ModItem</code> to a <code>FileItemTreeId</code> specific to this …","Upcasts a <code>FileItemTreeId</code> to a generic <code>ModItem</code>.","","","","","","","","","","","","","","","","","","","","","","","A desugared <code>use</code> import.","","","","","AST ID of the <code>use</code> or <code>extern crate</code> item this import was …","Index of this <code>Import</code> when the containing <code>Use</code> is visited …","","","","","","","","","","","","","","","","","","","","","","","","","<code>struct S { ... }</code> - type namespace only.","<code>struct S(...);</code>","<code>struct S;</code>","","","","","","","","","","","","","","const _: () = ();","","","","","","","","Whether the static is in an <code>extern</code> block.","","","","","","","","","","","","","","","","","","","","","","Bounds on the type alias itself. Only valid in trait …","","","","","","","","","","","<code>mod m { ... }</code>","","<code>mod m;</code>","","Path to the called macro.","","","","The name of the declared macro.","","“Macros 2.0” macro definition.","","","","","","","","","","","","","","","A range of densely allocated ItemTree IDs.","","","","","A single field of an enum variant or struct","","","","Global <code>Arc</code>-based object interning infrastructure.","","","","","","","","Defines hir-level representation of structs, enums and …","Note that we use <code>StructData</code> for unions as well!","","","","","","","","","","","","","","","","A single field of an enum variant or struct","","","","","","","","","","","","","","","Contains basic data about various HIR declarations.","","","","","","","","","True if the first param is <code>self</code>. This is relevant to …","","","","","","","","","","","","Bounds restricting the type alias itself (eg. …","","","","","","","","","","","","","","","","const _: () = ();","","","","","","","","","Many kinds of items or constructs can have generic …","Data about a generic type parameter (to a function, …","","","","Data about a generic lifetime parameter (to a function, …","","Data about a generic const parameter (to a function, …","","","","","","","Data about the generic parameters of a function, struct, …","","","","","A single predicate from a where clause, i.e. …","","","","","","","","","","","","","For desugared where predicates that can directly refer to …","","","","Collects lang items: items marked with <code>#[lang = \\\"...\\\"]</code> …","","","","","","","","","","","","","","","","","This module describes hir-level representation of …","","","","","","","","","","","","","","","This is produced if the syntax tree does not have a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>*</code> operator for dereferencing","The <code>!</code> operator for logical inversion","The <code>-</code> operator for negation","","","","","","","","","","","","","","","","","","","","","","Explicit binding annotations given in the HIR for a …","No binding annotation given: this means that the final …","Annotated with <code>mut x</code> – could be either ref or not, …","Annotated as <code>ref</code>, like <code>ref x</code>","Annotated as <code>ref mut x</code>.","","","","","Close relative to rustc’s hir::PatKind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines <code>Body</code>: a lowered representation of bodies of …","Name resolution for expressions.","","","","","","","","If <code>scope</code> refers to a block expression scope, returns the …","If <code>scope</code> refers to a labeled expression scope, returns …","","","","","","","","","","","","","The body of an item (function, const etc.).","","","","The patterns for the function’s parameters. While the …","The <code>ExprId</code> of the actual body expression.","","","","","","","An item body together with the mapping from syntax nodes …","","Returns an iterator over all block expressions in this …","","","","","","","","","","","Name resolution façade.","","","","","","","","","","","","","","","","","","","","","","","Resolve known trait from std, like <code>std::futures::Future</code>","Resolve known struct from std, like <code>std::boxed::Box</code>","Resolve known enum from std, like <code>std::result::Result</code>","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a resolver for type references inside this def.","This module implements import-resolution/macro expansion …","Contains the results of (early) name resolution.","","","","Note that non-inline modules, by definition, live inside …","","","","","","Pseudo-module introduced by a block scope (contains only …","","","","","","","","Where does this module come from?","","","","","","Ascends the <code>DefMap</code> hierarchy and calls <code>f</code> with every <code>DefMap</code>…","If this <code>DefMap</code> is for a block expression, returns the …","Returns the module containing <code>local_mod</code>, either the …","","","Returns a node which defines this module. That is, a file …","Returns a node which declares this module, either a …","","","","","Utilities for mapping between hir IDs and the surface …","","","","","","","When <em>constructing</em> <code>hir</code>, we start at some parent syntax …","","","","Defines hir-level representation of visibility (e.g. <code>pub</code> …","Visibility of an item, not yet resolved.","<code>pub(in module)</code>, <code>pub(crate)</code> or <code>pub(super)</code>. Also private, …","<code>pub</code>.","","Visibility of an item, with the path resolved.","Visibility is restricted to a certain module.","Visibility is unrestricted.","","An algorithm to find a path to refer to a certain item.","Find a path that can be used to refer to a certain item. …","","","Causes paths to always start with either <code>self</code>, <code>super</code>, …","Causes paths to ignore imports in the local module.","Causes paths to start with <code>crate</code> where applicable, …","A map of all publicly exported items in a crate.","Item import details stored in the <code>ImportMap</code>.","A path that can be used to import the item, relative to …","The module containing this item.","Whether the import is a trait associated item or not.","","","A map from publicly exported items to the path needed to …","","Returns the <code>ModPath</code> needed to import/mention <code>item</code>, …","","","","","","","","","","","","","A way to match import map contents against the search …","Import map entry should strictly match the query string.","Import map entry should contain the query string.","Import map entry should contain all letters from the …","","","Matches entries’ names only, ignoring the rest of the …","Matches only the entries that are associated items, …","Specifies the way to search for the entries using the …","Limits the returned number of items to <code>limit</code>.","Respect casing of the query string when matching.","Do not include imports of the specified kind in the …","Searches dependencies of <code>krate</code> for an importable path …","","The module’s ID in its originating <code>DefMap</code>.","","","","Returns <code>true</code> if this module represents a block expression.","An ID of a module, <strong>local</strong> to a specific crate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Data Type","","","","A generic param","","","","The defs which can be visible in the module.","","","","","","","","","","The defs which have a body.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the module containing <code>self</code> (or <code>self</code>, if <code>self</code> is …","","A helper trait for converting to MacroCallIdfake name for things missing in the source code.","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2,0,3,3,0,4,4,0,5,5,0,6,6,0,7,7,0,8,8,0,9,9,0,10,10,0,11,11,0,12,12,0,13,13,0,14,14,0,15,15,0,16,16,0,17,17,0,18,18,0,19,19,0,20,20,0,21,21,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,24,24,0,25,25,0,26,26,0,27,27,0,28,28,0,29,29,0,30,30,0,31,31,0,32,32,0,33,33,0,34,34,0,35,35,0,36,36,0,37,37,0,38,38,0,39,39,0,40,40,0,41,41,0,42,42,0,43,43,0,44,44,0,45,45,0,46,46,0,47,47,0,48,48,0,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,51,0,0,52,52,52,52,53,53,0,54,0,55,0,0,56,56,57,0,58,58,58,58,0,0,59,0,60,60,60,60,60,0,61,61,59,59,59,59,59,59,59,59,59,59,0,0,62,62,62,0,63,63,63,0,64,64,65,65,65,65,65,65,65,0,66,66,0,67,67,67,67,67,67,67,67,67,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,69,69,69,69,0,70,70,70,0,71,0,72,72,72,72,72,72,72,72,72,72,72,72,72,0,73,73,0,74,74,74,72,72,74,0,0,75,75,75,75,75,75,0,76,76,76,76,76,76,0,77,77,0,78,78,78,78,78,78,78,75,76,77,0,0,0,0,0,0,0,79,79,79,0,80,80,0,81,81,0,82,82,82,0,83,83,83,83,0,84,84,84,84,0,85,85,85,0,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,87,87,87,87,87,87,0,88,88,88,88,88,0,0,0,89,89,89,89,0,0,90,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,91,0,92,92,92,92,0,93,93,93,93,93,0,94,94,94,94,94,0,0,95,95,95,95,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,97,97,97,97,97,97,0,98,98,98,98,0,99,99,99,99,99,99,99,0,100,100,0,101,101,101,101,101,101,0,102,102,102,0,103,103,103,103,103,0,104,104,104,104,104,0,105,105,105,105,0,106,106,106,106,106,106,0,107,107,107,107,107,107,107,107,0,108,108,108,108,108,108,0,109,109,109,109,109,109,109,0,110,110,110,110,0,111,112,111,0,113,113,113,0,114,114,0,115,115,115,96,96,96,0,116,116,116,116,0,117,117,0,0,118,118,118,0,119,119,119,0,0,120,120,0,121,0,122,0,0,123,123,123,123,0,124,124,124,0,125,125,0,126,126,126,0,127,127,127,0,128,128,124,126,126,126,0,129,129,129,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,131,131,131,131,131,0,132,132,132,132,132,132,132,132,0,133,133,133,133,0,134,134,134,0,135,135,135,135,135,0,0,136,136,136,0,137,0,138,138,0,139,139,139,0,140,140,140,140,0,141,142,142,141,143,143,141,144,144,144,0,145,145,140,140,140,0,0,146,146,146,146,146,146,146,146,146,146,146,146,0,147,0,0,0,0,0,148,0,0,149,149,149,149,149,149,149,0,150,150,150,151,151,151,150,152,152,152,152,150,153,153,150,154,154,154,150,155,155,155,155,150,156,156,150,157,157,157,157,150,158,158,150,159,150,160,160,150,161,150,162,150,163,163,163,150,164,164,150,165,150,166,150,167,150,168,150,169,150,170,170,150,171,171,171,150,172,150,173,173,150,174,174,174,150,175,175,175,150,176,176,150,177,177,177,177,150,178,150,179,150,180,150,150,0,181,181,181,181,182,0,183,183,0,184,185,184,186,186,0,187,187,0,188,188,188,188,188,188,188,188,188,188,0,189,189,189,0,190,190,191,191,0,192,192,192,0,193,193,0,194,195,195,195,194,196,196,150,0,197,197,197,197,197,0,198,198,0,199,199,199,200,200,199,199,201,201,201,199,202,202,199,203,203,203,199,199,199,204,204,204,199,205,205,205,199,206,206,199,207,199,199,0,0,0,0,0,208,208,0,209,209,209,209,209,209,209,0,210,0,211,211,211,211,0,0,212,212,212,212,212,0,0,0,0,0,0,0,0,212,213,213,213,213,213,213,213,213,213,213,0,0,0,214,214,214,214,214,214,214,214,0,215,215,0,216,216,216,216,216,216,216,216,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,0,218,218,218,218,218,218,0,0,0,219,0,0,0,220,221,220,222,222,222,220,223,220,224,220,220,0,225,225,225,225,226,226,226,226,226,226,226,226,226,226,225,225,0,227,227,227,0,0,228,228,0,229,229,0,0,230,230,0,0,231,231,231,0,232,232,232,0,0,0,0,233,233,233,0,0,234,234,234,0,235,0,236,236,236,0,237,237,237,237,237,237,237,237,237,237,0,238,238,238,0,239,239,239,239,239,239,239,0,0,240,240,240,240,240,0,0,241,241,0,242,242,0,0,0,0,0,0,0,243,243,0,0,244,244,0,0,0,0,0,0,0,0,0,0,0,245,245,0,0,246,246,0,0,247,247,0,0,248,248,248,0,249,249,249,0,250,250,250,0,251,251,251,251,251,251,251,251,251,0,252,252,252,252,0,253,253,253,0,254,254,254,254,254,254,254,0,255,255,255,255,255,255,255,255,255,255,255,255,0,256,256,256,256,256,0,257,257,0,258,252,251,255,0,259,259,0,260,0,0,261,261,261,261,261,261,261,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,262,262,262,262,262,262,262,24,24,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,32,32,32,32,32,32,32,33,33,33,33,33,33,33,34,34,34,34,34,34,34,35,35,35,35,35,35,35,36,36,36,36,36,36,36,37,37,37,37,37,37,37,38,38,38,38,38,38,38,39,39,39,39,39,39,39,40,40,40,40,40,40,40,41,41,41,41,41,41,41,42,42,42,42,42,42,42,43,43,43,43,43,43,43,44,44,44,44,44,44,44,45,45,45,45,45,45,45,46,46,46,46,46,46,46,47,47,47,47,47,47,47,48,48,48,48,48,48,48,49,49,49,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,55,55,55,55,55,55,55,57,57,57,57,57,57,57,57,57,57,56,56,56,56,56,56,56,56,56,56,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,65,65,65,65,65,65,65,65,65,65,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,263,263,263,263,263,263,263,263,263,263,263,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,80,80,80,80,80,80,80,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,264,264,264,264,264,264,264,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,265,265,265,265,265,265,265,265,265,266,266,266,266,266,266,266,90,90,90,90,90,90,90,267,267,267,267,267,267,267,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,268,268,268,268,268,268,268,268,268,268,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,111,113,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,117,269,269,269,269,269,269,269,269,269,269,269,118,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,138,138,139,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,141,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,150,181,181,181,181,181,181,181,181,181,181,183,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,184,187,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,190,192,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,194,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,210,210,210,210,210,210,210,209,209,209,209,209,209,209,209,208,208,208,208,208,208,208,208,270,270,270,270,270,270,270,270,211,211,211,211,211,211,211,271,271,271,271,271,271,271,212,212,212,212,212,212,212,212,213,213,213,213,213,213,213,213,272,272,272,272,272,272,272,272,272,272,217,217,217,217,217,217,217,217,217,214,214,214,214,214,214,214,214,214,214,215,215,215,215,215,215,215,215,215,215,216,216,216,216,216,216,216,216,216,216,218,218,218,218,218,218,218,226,226,226,226,226,226,226,226,220,220,220,220,220,220,220,220,220,220,225,225,225,225,225,225,225,225,227,227,227,227,227,227,227,227,227,227,231,231,231,231,231,231,231,231,231,231,232,232,232,232,232,232,232,232,232,232,233,233,233,233,233,233,233,233,233,233,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,236,236,237,237,237,237,237,237,237,237,238,238,238,238,238,238,238,239,239,239,239,239,239,239,240,240,240,240,240,240,240,240,240,240,241,241,241,241,241,241,241,241,241,241,242,242,242,242,242,242,242,242,242,242,273,273,273,273,273,273,273,273,273,273,274,274,274,274,274,274,274,274,274,274,274,275,275,275,275,275,275,275,275,275,275,275,276,276,276,276,276,276,276,276,276,276,276,243,243,243,243,243,243,243,243,243,243,244,244,244,244,244,244,244,244,244,244,277,277,277,277,277,277,277,277,277,277,278,278,278,278,278,278,278,278,278,278,279,279,279,279,279,279,279,279,279,279,280,280,280,280,280,280,280,280,280,280,281,281,281,281,281,281,281,281,281,281,282,282,282,282,282,282,282,282,282,282,283,283,283,283,283,283,283,283,283,283,245,245,245,245,245,245,245,245,245,245,246,246,246,246,246,246,246,246,246,246,247,247,247,247,247,247,247,247,247,247,248,248,248,248,248,248,248,248,248,248,249,249,249,249,249,249,249,249,249,249,249,250,250,250,250,250,250,250,250,250,250,251,251,251,251,251,251,251,251,251,251,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,256,256,256,256,256,256,256,256,256,256,260,260,260,260,260,260,260,189,189,189,189,263,263,263,263,263,263,263,263,267,267,97,97,97,97,98,98,98,98,99,99,99,99,101,101,101,101,103,103,103,103,104,104,104,104,105,105,105,105,106,106,106,106,107,107,107,107,108,108,108,108,109,109,109,109,110,110,110,110,113,113,113,113,114,114,114,114,115,115,115,115,72,71,59,140,240,279,273,277,278,280,281,252,248,254,256,242,241,276,256,254,254,254,254,279,281,240,87,256,276,252,273,274,275,276,277,278,279,280,281,282,248,242,249,256,252,254,284,120,120,65,59,93,93,93,93,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,116,116,116,116,96,181,149,248,249,249,249,250,250,250,251,251,251,251,251,251,251,251,251,251,251,251,252,252,252,253,253,253,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,256,256,256,269,269,51,52,53,57,56,58,59,60,61,65,62,63,64,66,69,70,71,72,73,74,75,76,77,78,82,83,84,85,86,88,265,91,268,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,269,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,146,147,148,149,150,181,183,184,187,188,190,192,193,194,197,198,199,272,217,214,215,216,220,227,231,232,233,234,235,240,241,242,273,274,275,276,243,244,277,278,279,280,281,282,283,245,246,247,248,249,250,251,252,253,254,255,256,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,86,264,87,266,92,140,147,213,272,217,220,225,236,59,60,75,76,77,274,275,276,281,282,249,51,51,52,52,53,53,57,57,56,56,59,59,60,60,61,61,65,65,62,62,63,63,64,64,66,66,69,70,71,71,72,72,73,73,74,74,75,76,77,78,78,82,82,83,83,84,84,85,85,86,86,87,87,88,88,91,91,92,92,93,93,268,95,96,96,97,97,98,98,99,99,100,100,101,101,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,113,113,114,114,115,115,116,116,117,117,269,118,118,119,119,120,120,123,123,124,124,125,125,126,126,127,127,128,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,140,140,141,141,145,145,146,146,147,147,148,148,149,149,150,150,181,181,183,184,184,187,188,190,190,192,192,193,193,194,194,197,198,198,199,199,209,209,208,208,270,270,212,212,213,213,272,214,214,215,215,216,216,226,226,220,220,225,225,227,227,231,231,232,232,233,234,234,235,235,236,237,240,240,241,242,273,273,274,274,275,275,276,276,243,243,244,244,277,277,278,278,279,279,280,280,281,281,282,282,283,283,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,59,60,75,76,77,274,275,276,281,282,249,52,53,120,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,57,56,58,59,60,61,65,62,63,64,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,264,87,88,91,92,93,268,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,269,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,146,147,148,149,150,181,183,184,187,188,190,192,193,194,197,198,199,209,208,270,211,271,212,213,272,217,214,215,216,226,220,225,227,231,232,233,234,235,236,237,238,239,240,241,242,273,274,275,276,243,244,277,278,279,280,281,282,283,245,246,247,248,249,250,251,252,253,254,255,256,260,59,78,235,266,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,212,212,212,226,266,51,59,60,65,62,63,64,66,69,70,71,72,73,74,75,76,77,78,86,88,93,268,95,96,120,136,137,138,139,140,141,145,146,181,183,184,187,188,214,215,216,220,232,237,240,241,242,273,274,275,276,243,244,277,278,279,280,281,282,283,245,246,247,248,249,250,251,252,253,254,255,256,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,78,79,79,79,79,80,80,80,80,81,81,81,81,81,82,82,82,82,82,83,83,83,83,84,84,84,84,85,85,85,85,85,263,263,263,263,210,210],"f":[null,null,[[["associtemloc",3],["function",3]],["functionid",3]],[[["functionid",3]],[["associtemloc",3],["function",3]]],[[["struct",3],["itemloc",3]],["structid",3]],[[["structid",3]],[["struct",3],["itemloc",3]]],[[["unionloc",6]],["unionid",3]],[[["unionid",3]],["unionloc",6]],[[["enumloc",6]],["enumid",3]],[[["enumid",3]],["enumloc",6]],[[["associtemloc",3],["const",3]],["constid",3]],[[["constid",3]],[["associtemloc",3],["const",3]]],[[["staticloc",6]],["staticid",3]],[[["staticid",3]],["staticloc",6]],[[["traitloc",6]],["traitid",3]],[[["traitid",3]],["traitloc",6]],[[["typealias",3],["associtemloc",3]],["typealiasid",3]],[[["typealiasid",3]],[["typealias",3],["associtemloc",3]]],[[["impl",3],["itemloc",3]],["implid",3]],[[["implid",3]],[["impl",3],["itemloc",3]]],[[["blockloc",3]],["blockid",3]],[[["blockid",3]],["blockloc",3]],null,null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15]]],[[["interndatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["interndatabase",8],["databasekeyindex",3],["revision",3]],["bool",15]],[[["runtime",3],["fnmut",8]]],null,[[["hirfileid",3]],[["arc",3],["itemtree",3]]],[[["crateid",3]],[["defmap",3],["arc",3]]],[[["crateid",3]],[["defmap",3],["arc",3]]],[[["blockid",3]],[["option",4],["arc",3]]],[[["structid",3]],[["structdata",3],["arc",3]]],[[["unionid",3]],[["structdata",3],["arc",3]]],[[["enumid",3]],[["arc",3],["enumdata",3]]],[[["implid",3]],[["arc",3],["impldata",3]]],[[["traitid",3]],[["arc",3],["traitdata",3]]],[[["typealiasid",3]],[["typealiasdata",3],["arc",3]]],[[["functionid",3]],[["arc",3],["functiondata",3]]],[[["constid",3]],[["constdata",3],["arc",3]]],[[["staticid",3]],[["arc",3],["staticdata",3]]],[[["defwithbodyid",4]]],[[["defwithbodyid",4]],[["arc",3],["body",3]]],[[["defwithbodyid",4]],[["arc",3],["exprscopes",3]]],[[["genericdefid",4]],[["interned",3],["genericparams",3]]],[[["enumid",3]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["enumid",3]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["attrdefid",4]],["attrswithowner",3]],[[["crateid",3]],[["arc",3],["langitems",3]]],[[["crateid",3],["smolstr",3]],[["langitemtarget",4],["option",4]]],[[["crateid",3]],[["arc",3],["importmap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["functionid",3]],["visibility",4]],null,null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytablemut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15]]],[[["databasekeyindex",3],["defdatabase",8],["formatter",3]],["result",6]],[[["databasekeyindex",3],["defdatabase",8],["revision",3]],["bool",15]],[[["runtime",3],["fnmut",8]]],null,null,[[],["str",15]],null,null,null,[[["str",15]],["attrquery",3]],[[],[["cfgexpr",4],["option",4]]],[[],[["documentation",3],["option",4]]],[[["defdatabase",8]],["attrsourcemap",3]],[[["defdatabase",8]],["option",4]],null,[[["attr",3]],[["either",4],["infile",3]]],null,[[["textrange",3]],[["option",4],["infile",3]]],null,null,null,null,[[],[["smolstr",3],["option",4]]],null,[[]],[[],[["smolstr",3],["option",4]]],[[],["bool",15]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["hygiene",3],["defdatabase",8],["path",3]],[["option",4],["modpath",3]]],[[["pathkind",4]],["modpath",3]],[[["pathkind",4]],["modpath",3]],[[]],[[["name",3]]],[[],[["option",4],["name",3]]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]],[[],[["name",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["lowerctx",3],["path",3]],[["path",3],["option",4]]],[[],["pathkind",4]],[[],[["option",4],["typeref",4]]],[[],["pathsegments",3]],[[],["modpath",3]],[[],[["path",3],["option",4]]],[[],["bool",15]],null,null,null,null,null,[[],["bool",15]],[[],["usize",15]],[[],[["pathsegment",3],["option",4]]],[[],[["pathsegment",3],["option",4]]],[[["usize",15]],[["pathsegment",3],["option",4]]],[[["usize",15]],["pathsegments",3]],[[["usize",15]],["pathsegments",3]],[[]],null,null,null,[[],["name",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15]],["mutability",4]],[[],["str",15]],[[],["str",15]],null,null,null,[[["bool",15]],["rawness",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["lifetimeref",3]],null,null,null,null,[[["lowerctx",3],["type",4]]],[[]],[[],[["path",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["option",4],["builtinint",4]]],[[["str",15]],[["option",4],["builtinuint",4]]],[[["str",15]],[["option",4],["builtinfloat",4]]],null,null,null,null,null,[[["defwithbodyid",4],["defdatabase",8],["diagnosticsink",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["perns",3]],[[["visibility",4],["moduledefid",4]],["perns",3]],[[["visibility",4],["moduledefid",4]],["perns",3]],[[["visibility",4],["moduledefid",4]],["perns",3]],[[["macrodefid",3],["visibility",4]],["perns",3]],[[],["bool",15]],[[],[["moduledefid",4],["option",4]]],[[],["option",4]],[[],[["moduledefid",4],["option",4]]],[[],[["macrodefid",3],["option",4]]],[[],["perns",3]],[[["visibility",4]],["perns",3]],[[["perns",3]],["perns",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[["moduledefid",4]],[["option",4],["visibility",4]]],[[]],null,null,null,null,[[],[["moduledefid",4],["option",4]]],[[["defdatabase",8]],[["crateid",3],["option",4]]],null,null,null,null,null,[[["dynmap",3]]],[[["dynmap",3]],["option",4]],null,null,[[]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["crateid",3],["defdatabase",8]],["attrs",3]],[[["crateid",3],["attrowner",4],["defdatabase",8]],["attrs",3]],[[["blockexpr",3],["fileastid",3]]],null,null,null,null,null,null,null,null,[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],null,null,null,[[["hirfileid",3],["fileitemtreeid",3]]],[[],["hirfileid",3]],[[["defdatabase",8]],[["arc",3],["itemtree",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["associtem",4],["option",4]]],[[],[["option",4],["fileitemtreeid",3]]],[[["itemtree",3]],[["item",4],["fileastid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["str",15]]],null,[[]],null,[[],["internstorage",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["name",3]],[["localenumvariantid",6],["option",4]]],[[],["arena",3]],[[["name",3]],[["localfieldid",6],["option",4]]],[[],["structkind",4]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["name",3]],[["option",4],["typealiasid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["name",3]],[["option",4],["localtypeparamid",6]]],[[["name",3]],[["localconstparamid",6],["option",4]]],[[],[["option",4],["localtypeparamid",6]]],null,null,null,null,null,null,null,null,[[],[["enumid",3],["option",4]]],[[],[["functionid",3],["option",4]]],[[],[["option",4],["implid",3]]],[[],[["staticid",3],["option",4]]],[[],[["structid",3],["option",4]]],[[],[["traitid",3],["option",4]]],null,[[["str",15]],[["langitemtarget",4],["option",4]]],[[["defdatabase",8]],[["option",4],["smolstr",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,[[["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,[[],["name",3]],[[],["patid",6]],null,[[["scopeid",6]]],[[["scopeid",6]],[["blockid",3],["option",4]]],[[["scopeid",6]],["option",4]],[[["option",4],["scopeid",6]]],[[["name",3],["scopeid",6]],[["scopeentry",3],["option",4]]],[[["exprid",6]],[["option",4],["scopeid",6]]],[[],["fxhashmap",6]],null,null,null,[[["hirfileid",3],["defdatabase",8],["moduleid",3]],["expander",3]],[[["macrocall",3],["defdatabase",8]],[["result",4],["expandresult",3],["unresolvedmacro",3]]],[[["defdatabase",8],["mark",3]]],[[],["hirfileid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["defdatabase",8]]],[[["exprid",6]],[["result",4],["exprsource",6],["syntheticsyntax",3]]],[[["infile",3],["expr",4]],[["option",4],["exprid",6]]],[[["macrocall",3],["infile",3]],[["hirfileid",3],["option",4]]],[[["patid",6]],[["patsource",6],["syntheticsyntax",3],["result",4]]],[[["infile",3],["pat",4]],[["option",4],["patid",6]]],[[["selfparam",3],["infile",3]],[["option",4],["patid",6]]],[[["labelid",6]],["labelsource",6]],[[["infile",3],["label",3]],[["option",4],["labelid",6]]],[[["exprid",6]],[["infile",3],["astptr",3]]],[[["infile",3],["recordexprfield",3]],[["option",4],["exprid",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["defdatabase",8],["modpath",3]],[["traitid",3],["option",4]]],[[["defdatabase",8],["modpath",3]],[["structid",3],["option",4]]],[[["defdatabase",8],["modpath",3]],[["enumid",3],["option",4]]],[[["defdatabase",8],["modpath",3]],["perns",3]],[[["defdatabase",8],["modpath",3]],[["traitid",3],["option",4]]],[[["defdatabase",8],["modpath",3]],["option",4]],[[["defdatabase",8],["modpath",3]],[["typens",4],["option",4]]],[[["rawvisibility",4],["defdatabase",8]],[["option",4],["visibility",4]]],[[["defdatabase",8],["modpath",3]],[["option",4],["resolvevalueresult",4]]],[[["defdatabase",8],["modpath",3]],[["option",4],["valuens",4]]],[[["defdatabase",8],["modpath",3]],[["macrodefid",3],["option",4]]],[[["defdatabase",8],["fnmut",8]]],[[["defdatabase",8]],[["traitid",3],["fxhashset",6]]],[[],[["option",4],["moduleid",3]]],[[],[["crateid",3],["option",4]]],[[]],[[],[["option",4],["genericdefid",4]]],[[],[["defwithbodyid",4],["option",4]]],null,null,null,null,null,null,null,[[["defwithbodyid",4],["defdatabase",8],["exprid",6]],["resolver",3]],[[["option",4],["scopeid",6],["defwithbodyid",4],["defdatabase",8]],["resolver",3]],null,[[["defdatabase",8]],["resolver",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4],["fileid",3]]],[[],["bool",15]],null,null,null,null,null,[[["diagnosticsink",3],["defdatabase",8],["localmoduleid",6]]],[[["fileid",3]]],[[]],[[],["localmoduleid",6]],[[["localmoduleid",6]],["moduleid",3]],[[["fnmut",8],["defdatabase",8],["localmoduleid",6]],["option",4]],[[],[["option",4],["moduleid",3]]],[[["localmoduleid",6]],[["option",4],["moduleid",3]]],[[["defdatabase",8]],["string",3]],[[["defdatabase",8]],["string",3]],[[["defdatabase",8]],[["modulesource",4],["infile",3]]],[[["defdatabase",8]],[["infile",3],["option",4]]],null,null,null,null,null,null,null,[[["defdatabase",8]],["infile",3]],null,null,[[["defdatabase",8]],[["infile",3],["arenamap",3]]],null,null,[[["defdatabase",8]],["dynmap",3]],[[["defdatabase",8],["dynmap",3]]],null,null,null,null,[[["resolver",3],["defdatabase",8]],["visibility",4]],null,null,null,[[["defdatabase",8],["moduleid",3]],["bool",15]],null,[[["iteminns",4],["defdatabase",8],["moduleid",3]],[["option",4],["modpath",3]]],[[["prefixkind",4],["iteminns",4],["defdatabase",8],["moduleid",3]],[["option",4],["modpath",3]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["crateid",3],["defdatabase",8]],["arc",3]],[[["iteminns",4]],[["importpath",3],["option",4]]],[[["iteminns",4]],[["importinfo",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3]]],[[]],[[]],[[["searchmode",4]]],[[["usize",15]]],[[]],[[["importkind",4]]],[[["defdatabase",8],["crateid",3],["query",3]],[["fxhashset",6],["iteminns",4]]],null,null,[[["defdatabase",8]],[["defmap",3],["arc",3]]],[[],["crateid",3]],[[["defdatabase",8]],[["option",4],["moduleid",3]]],[[["defdatabase",8]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4],["genericdefid",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["defdatabase",8]],[["arc",3],["variantdata",4]]],[[["defdatabase",8]],["hirfileid",3]],null,null,[[["defdatabase",8]]],null,[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moditem",4]],[[["defdatabase",8]],[["option",4],["moduleid",3]]],[[["defdatabase",8]],["crateid",3]],null,[[["crateid",3],["defdatabase",8]],[["option",4],["macrocallid",4]]],[[["crateid",3],["defdatabase",8],["fnmut",8]],[["unresolvedmacro",3],["result",4],["result",4]]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["defdatabase",8]],["resolver",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["defdatabase",8]],["resolver",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["defdatabase",8]],["resolver",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["defdatabase",8]],["resolver",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[["prefixop",4]],["bool",15]],[[],["prefixop",4]],[[]],[[["name",3]],["bool",15]],[[["name",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["name",3]],["ordering",4]],[[],["name",3]],[[["name",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["infile",3],["dynmap",3]]],[[["infile",3],["dynmap",3]],["option",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["fileastid",3]],[[["itemtree",3],["idx",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[],["internstorage",3]],[[],["internstorage",3]],[[],["internstorage",3]],[[],["internstorage",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["infile",3]],[[["defdatabase",8]],["infile",3]],[[["defdatabase",8]],[["arenamap",3],["infile",3]]],[[["defdatabase",8]],[["infile",3],["arenamap",3]]],[[["defdatabase",8]],[["infile",3],["arenamap",3]]],[[["defdatabase",8]],[["arenamap",3],["infile",3]]],[[["defdatabase",8]],[["infile",3],["arenamap",3]]],[[["defdatabase",8],["dynmap",3]]],[[["defdatabase",8],["dynmap",3]]],[[["defdatabase",8],["dynmap",3]]],[[["defdatabase",8],["dynmap",3]]],[[["defdatabase",8],["dynmap",3]]],[[["defdatabase",8],["dynmap",3]]],[[["defdatabase",8],["dynmap",3]]],[[["defdatabase",8],["dynmap",3]]],[[["defdatabase",8]],[["associtemloc",3],["function",3]]],[[["defdatabase",8]],[["struct",3],["itemloc",3]]],[[["defdatabase",8]],["unionloc",6]],[[["defdatabase",8]],["enumloc",6]],[[["defdatabase",8]],[["associtemloc",3],["const",3]]],[[["defdatabase",8]],["staticloc",6]],[[["defdatabase",8]],["traitloc",6]],[[["defdatabase",8]],[["typealias",3],["associtemloc",3]]],[[["defdatabase",8]],[["impl",3],["itemloc",3]]],[[["defdatabase",8]],["blockloc",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[]],[[]],[[["name",3]],["path",3]],[[["name",3]],["modpath",3]],[[["moditem",4]],["attrowner",4]],[[["idx",3],["variant",3]],["attrowner",4]],[[["field",3],["idx",3]],["attrowner",4]],[[["param",4],["idx",3]],["attrowner",4]],[[["import",3],["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3],["externcrate",3]],["moditem",4]],[[["fileitemtreeid",3],["function",3]],["moditem",4]],[[["struct",3],["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3],["union",3]],["moditem",4]],[[["fileitemtreeid",3],["enum",3]],["moditem",4]],[[["fileitemtreeid",3],["const",3]],["moditem",4]],[[["static",3],["fileitemtreeid",3]],["moditem",4]],[[["trait",3],["fileitemtreeid",3]],["moditem",4]],[[["impl",3],["fileitemtreeid",3]],["moditem",4]],[[["typealias",3],["fileitemtreeid",3]],["moditem",4]],[[["mod",3],["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3],["macrocall",3]],["moditem",4]],[[["macrorules",3],["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3],["macrodef",3]],["moditem",4]],[[["fileitemtreeid",3],["function",3]],["associtem",4]],[[["typealias",3],["fileitemtreeid",3]],["associtem",4]],[[["fileitemtreeid",3],["const",3]],["associtem",4]],[[["fileitemtreeid",3],["macrocall",3]],["associtem",4]],[[["associtem",4]]],[[["binop",4]]],[[["literalkind",4]]],[[["moduleid",3]],["assoccontainerid",4]],[[["structid",3]],["adtid",4]],[[["unionid",3]],["adtid",4]],[[["enumid",3]],["adtid",4]],[[["typeparamid",3]],["genericparamid",4]],[[["lifetimeparamid",3]],["genericparamid",4]],[[["constparamid",3]],["genericparamid",4]],[[["moduleid",3]],["moduledefid",4]],[[["functionid",3]],["moduledefid",4]],[[["adtid",4]],["moduledefid",4]],[[["structid",3]],["moduledefid",4]],[[["enumid",3]],["moduledefid",4]],[[["unionid",3]],["moduledefid",4]],[[["enumvariantid",3]],["moduledefid",4]],[[["constid",3]],["moduledefid",4]],[[["staticid",3]],["moduledefid",4]],[[["traitid",3]],["moduledefid",4]],[[["typealiasid",3]],["moduledefid",4]],[[["builtintype",4]],["moduledefid",4]],[[["functionid",3]],["defwithbodyid",4]],[[["constid",3]],["defwithbodyid",4]],[[["staticid",3]],["defwithbodyid",4]],[[["functionid",3]],["associtemid",4]],[[["constid",3]],["associtemid",4]],[[["typealiasid",3]],["associtemid",4]],[[["functionid",3]],["genericdefid",4]],[[["adtid",4]],["genericdefid",4]],[[["structid",3]],["genericdefid",4]],[[["enumid",3]],["genericdefid",4]],[[["unionid",3]],["genericdefid",4]],[[["traitid",3]],["genericdefid",4]],[[["typealiasid",3]],["genericdefid",4]],[[["implid",3]],["genericdefid",4]],[[["enumvariantid",3]],["genericdefid",4]],[[["constid",3]],["genericdefid",4]],[[["associtemid",4]]],[[["moduleid",3]],["attrdefid",4]],[[["fieldid",3]],["attrdefid",4]],[[["adtid",4]],["attrdefid",4]],[[["structid",3]],["attrdefid",4]],[[["enumid",3]],["attrdefid",4]],[[["unionid",3]],["attrdefid",4]],[[["enumvariantid",3]],["attrdefid",4]],[[["staticid",3]],["attrdefid",4]],[[["constid",3]],["attrdefid",4]],[[["functionid",3]],["attrdefid",4]],[[["traitid",3]],["attrdefid",4]],[[["typealiasid",3]],["attrdefid",4]],[[["macrodefid",3]],["attrdefid",4]],[[["implid",3]],["attrdefid",4]],[[["genericparamid",4]],["attrdefid",4]],[[["assoccontainerid",4]]],[[["enumvariantid",3]],["variantid",4]],[[["structid",3]],["variantid",4]],[[["unionid",3]],["variantid",4]],[[],["option",4]],[[],["option",4]],[[],["documentation",3]],[[],["attrs",3]],[[],["attrswithowner",3]],[[],["attr",3]],[[],["attrinput",4]],[[],["attrquery",3]],[[],["modpath",3]],[[],["pathkind",4]],[[],["importalias",4]],[[],["path",3]],[[],["genericargs",3]],[[],["associatedtypebinding",3]],[[],["genericarg",4]],[[],["pathsegment",3]],[[],["mutability",4]],[[],["rawness",4]],[[],["traitref",3]],[[],["typeref",4]],[[],["lifetimeref",3]],[[],["typebound",4]],[[],["builtinint",4]],[[],["builtinuint",4]],[[],["builtinfloat",4]],[[],["builtintype",4]],[[],["unresolvedmacrocall",3]],[[],["inactivecode",3]],[[],["unresolvedprocmacro",3]],[[],["macroerror",3]],[[],["perns",3]],[[],["iteminns",4]],[[],["key",3]],[[],["rawvisibilityid",3]],[[]],[[]],[[],["moditem",4]],[[],["import",3]],[[],["externcrate",3]],[[],["function",3]],[[],["param",4]],[[],["struct",3]],[[],["structdefkind",4]],[[],["union",3]],[[],["enum",3]],[[],["const",3]],[[],["static",3]],[[],["trait",3]],[[],["impl",3]],[[],["typealias",3]],[[],["mod",3]],[[],["modkind",4]],[[],["macrocall",3]],[[],["macrorules",3]],[[],["macrodef",3]],[[],["associtem",4]],[[]],[[],["fields",4]],[[],["field",3]],[[]],[[],["structdata",3]],[[],["enumdata",3]],[[],["enumvariantdata",3]],[[],["variantdata",4]],[[],["fielddata",3]],[[],["reprkind",4]],[[],["structkind",4]],[[],["functiondata",3]],[[],["typealiasdata",3]],[[],["traitdata",3]],[[],["impldata",3]],[[],["constdata",3]],[[],["staticdata",3]],[[],["typeparamdata",3]],[[],["lifetimeparamdata",3]],[[],["constparamdata",3]],[[],["typeparamprovenance",4]],[[],["genericparams",3]],[[],["wherepredicate",4]],[[],["wherepredicatetypetarget",4]],[[],["langitemtarget",4]],[[],["langitems",3]],[[],["label",3]],[[],["literal",4]],[[],["expr",4]],[[],["binaryop",4]],[[],["logicop",4]],[[],["cmpop",4]],[[],["ordering",4]],[[],["arithop",4]],[[],["array",4]],[[],["matcharm",3]],[[],["recordlitfield",3]],[[],["statement",4]],[[],["bindingannotation",4]],[[],["recordfieldpat",3]],[[],["pat",4]],[[],["syntheticsyntax",3]],[[],["resolver",3]],[[],["typens",4]],[[],["resolvevalueresult",4]],[[],["valuens",4]],[[],["moduleorigin",4]],[[],["modulesource",4]],[[],["rawvisibility",4]],[[],["visibility",4]],[[],["prefixkind",4]],[[],["importinfo",3]],[[],["importpath",3]],[[],["moduleid",3]],[[]],[[]],[[],["functionid",3]],[[],["structid",3]],[[],["unionid",3]],[[],["enumid",3]],[[],["enumvariantid",3]],[[],["fieldid",3]],[[],["constid",3]],[[],["staticid",3]],[[],["traitid",3]],[[],["typealiasid",3]],[[],["implid",3]],[[],["blockid",3]],[[],["blockloc",3]],[[],["typeparamid",3]],[[],["lifetimeparamid",3]],[[],["constparamid",3]],[[],["assoccontainerid",4]],[[],["adtid",4]],[[],["genericparamid",4]],[[],["moduledefid",4]],[[],["defwithbodyid",4]],[[],["associtemid",4]],[[],["genericdefid",4]],[[],["attrdefid",4]],[[],["variantid",4]],[[],["internfunctionquery",3]],[[],["internfunctionlookupquery",3]],[[],["internstructquery",3]],[[],["internstructlookupquery",3]],[[],["internunionquery",3]],[[],["internunionlookupquery",3]],[[],["internenumquery",3]],[[],["internenumlookupquery",3]],[[],["internconstquery",3]],[[],["internconstlookupquery",3]],[[],["internstaticquery",3]],[[],["internstaticlookupquery",3]],[[],["interntraitquery",3]],[[],["interntraitlookupquery",3]],[[],["interntypealiasquery",3]],[[],["interntypealiaslookupquery",3]],[[],["internimplquery",3]],[[],["internimpllookupquery",3]],[[],["internblockquery",3]],[[],["internblocklookupquery",3]],[[],["fileitemtreequery",3]],[[],["cratedefmapqueryquery",3]],[[],["blockdefmapquery",3]],[[],["structdataquery",3]],[[],["uniondataquery",3]],[[],["enumdataquery",3]],[[],["impldataquery",3]],[[],["traitdataquery",3]],[[],["typealiasdataquery",3]],[[],["functiondataquery",3]],[[],["constdataquery",3]],[[],["staticdataquery",3]],[[],["bodywithsourcemapquery",3]],[[],["bodyquery",3]],[[],["exprscopesquery",3]],[[],["genericparamsquery",3]],[[],["variantsattrsquery",3]],[[],["fieldsattrsquery",3]],[[],["variantsattrssourcemapquery",3]],[[],["fieldsattrssourcemapquery",3]],[[],["attrsquery",3]],[[],["cratelangitemsquery",3]],[[],["langitemquery",3]],[[],["importmapquery",3]],[[],["fieldvisibilitiesquery",3]],[[],["functionvisibilityquery",3]],[[],["attrs",3]],[[]],[[],["pernsglobimports",3]],[[],["itemscope",3]],[[]],[[],["itemtree",3]],[[],["genericparams",3]],[[],["langitems",3]],[[],["bodysourcemap",3]],[[],["syntheticsyntax",3]],[[],["resolver",3]],[[]],[[],["moduledata",3]],[[],["importmap",3]],[[["modpath",3]],["ordering",4]],[[["pathkind",4]],["ordering",4]],[[["builtinint",4]],["ordering",4]],[[["builtinuint",4]],["ordering",4]],[[["builtinfloat",4]],["ordering",4]],[[["structid",3]],["ordering",4]],[[["unionid",3]],["ordering",4]],[[["enumid",3]],["ordering",4]],[[["implid",3]],["ordering",4]],[[["blockid",3]],["ordering",4]],[[["adtid",4]],["ordering",4]],[[["documentation",3]],["bool",15]],[[["documentation",3]],["bool",15]],[[["attrs",3]],["bool",15]],[[["attrs",3]],["bool",15]],[[["attrswithowner",3]],["bool",15]],[[["attrswithowner",3]],["bool",15]],[[["attr",3]],["bool",15]],[[["attr",3]],["bool",15]],[[["attrinput",4]],["bool",15]],[[["attrinput",4]],["bool",15]],[[["modpath",3]],["bool",15]],[[["modpath",3]],["bool",15]],[[["pathkind",4]],["bool",15]],[[["pathkind",4]],["bool",15]],[[["importalias",4]],["bool",15]],[[["importalias",4]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["genericargs",3]],["bool",15]],[[["genericargs",3]],["bool",15]],[[["associatedtypebinding",3]],["bool",15]],[[["associatedtypebinding",3]],["bool",15]],[[["genericarg",4]],["bool",15]],[[["genericarg",4]],["bool",15]],[[["pathsegment",3]],["bool",15]],[[["pathsegment",3]],["bool",15]],[[["mutability",4]],["bool",15]],[[["rawness",4]],["bool",15]],[[["traitref",3]],["bool",15]],[[["traitref",3]],["bool",15]],[[["typeref",4]],["bool",15]],[[["typeref",4]],["bool",15]],[[["lifetimeref",3]],["bool",15]],[[["lifetimeref",3]],["bool",15]],[[["typebound",4]],["bool",15]],[[["typebound",4]],["bool",15]],[[["builtinint",4]],["bool",15]],[[["builtinuint",4]],["bool",15]],[[["builtinfloat",4]],["bool",15]],[[["builtintype",4]],["bool",15]],[[["builtintype",4]],["bool",15]],[[["unresolvedmacrocall",3]],["bool",15]],[[["unresolvedmacrocall",3]],["bool",15]],[[["inactivecode",3]],["bool",15]],[[["inactivecode",3]],["bool",15]],[[["unresolvedprocmacro",3]],["bool",15]],[[["unresolvedprocmacro",3]],["bool",15]],[[["macroerror",3]],["bool",15]],[[["macroerror",3]],["bool",15]],[[["perns",3]],["bool",15]],[[["perns",3]],["bool",15]],[[["itemscope",3]],["bool",15]],[[["itemscope",3]],["bool",15]],[[["iteminns",4]],["bool",15]],[[["iteminns",4]],["bool",15]],[[["rawvisibilityid",3]],["bool",15]],[[["rawvisibilityid",3]],["bool",15]],[[["itemtree",3]],["bool",15]],[[["itemtree",3]],["bool",15]],[[["attrowner",4]],["bool",15]],[[["attrowner",4]],["bool",15]],[[["fileitemtreeid",3]],["bool",15]],[[],["bool",15]],[[["moditem",4]],["bool",15]],[[["moditem",4]],["bool",15]],[[["import",3]],["bool",15]],[[["import",3]],["bool",15]],[[["externcrate",3]],["bool",15]],[[["externcrate",3]],["bool",15]],[[["function",3]],["bool",15]],[[["function",3]],["bool",15]],[[["param",4]],["bool",15]],[[["param",4]],["bool",15]],[[["struct",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["structdefkind",4]],["bool",15]],[[["union",3]],["bool",15]],[[["union",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["const",3]],["bool",15]],[[["const",3]],["bool",15]],[[["static",3]],["bool",15]],[[["static",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["mod",3]],["bool",15]],[[["mod",3]],["bool",15]],[[["modkind",4]],["bool",15]],[[["modkind",4]],["bool",15]],[[["macrocall",3]],["bool",15]],[[["macrocall",3]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["associtem",4]],["bool",15]],[[["associtem",4]],["bool",15]],[[["variant",3]],["bool",15]],[[["variant",3]],["bool",15]],[[],["bool",15]],[[["fields",4]],["bool",15]],[[["fields",4]],["bool",15]],[[["field",3]],["bool",15]],[[["field",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["structdata",3]],["bool",15]],[[["structdata",3]],["bool",15]],[[["enumdata",3]],["bool",15]],[[["enumdata",3]],["bool",15]],[[["enumvariantdata",3]],["bool",15]],[[["enumvariantdata",3]],["bool",15]],[[["variantdata",4]],["bool",15]],[[["variantdata",4]],["bool",15]],[[["fielddata",3]],["bool",15]],[[["fielddata",3]],["bool",15]],[[["reprkind",4]],["bool",15]],[[["structkind",4]],["bool",15]],[[["functiondata",3]],["bool",15]],[[["functiondata",3]],["bool",15]],[[["typealiasdata",3]],["bool",15]],[[["typealiasdata",3]],["bool",15]],[[["traitdata",3]],["bool",15]],[[["traitdata",3]],["bool",15]],[[["impldata",3]],["bool",15]],[[["impldata",3]],["bool",15]],[[["constdata",3]],["bool",15]],[[["constdata",3]],["bool",15]],[[["staticdata",3]],["bool",15]],[[["staticdata",3]],["bool",15]],[[["typeparamdata",3]],["bool",15]],[[["typeparamdata",3]],["bool",15]],[[["lifetimeparamdata",3]],["bool",15]],[[["lifetimeparamdata",3]],["bool",15]],[[["constparamdata",3]],["bool",15]],[[["constparamdata",3]],["bool",15]],[[["typeparamprovenance",4]],["bool",15]],[[["genericparams",3]],["bool",15]],[[["genericparams",3]],["bool",15]],[[["wherepredicate",4]],["bool",15]],[[["wherepredicate",4]],["bool",15]],[[["wherepredicatetypetarget",4]],["bool",15]],[[["wherepredicatetypetarget",4]],["bool",15]],[[["langitemtarget",4]],["bool",15]],[[["langitemtarget",4]],["bool",15]],[[["langitems",3]],["bool",15]],[[["langitems",3]],["bool",15]],[[["label",3]],["bool",15]],[[["label",3]],["bool",15]],[[["literal",4]],["bool",15]],[[["literal",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["binaryop",4]],["bool",15]],[[["binaryop",4]],["bool",15]],[[["logicop",4]],["bool",15]],[[["cmpop",4]],["bool",15]],[[["cmpop",4]],["bool",15]],[[["ordering",4]],["bool",15]],[[["arithop",4]],["bool",15]],[[["array",4]],["bool",15]],[[["array",4]],["bool",15]],[[["matcharm",3]],["bool",15]],[[["matcharm",3]],["bool",15]],[[["recordlitfield",3]],["bool",15]],[[["recordlitfield",3]],["bool",15]],[[["statement",4]],["bool",15]],[[["statement",4]],["bool",15]],[[["bindingannotation",4]],["bool",15]],[[["recordfieldpat",3]],["bool",15]],[[["recordfieldpat",3]],["bool",15]],[[["pat",4]],["bool",15]],[[["pat",4]],["bool",15]],[[["exprscopes",3]],["bool",15]],[[["exprscopes",3]],["bool",15]],[[["scopeentry",3]],["bool",15]],[[["scopeentry",3]],["bool",15]],[[["scopedata",3]],["bool",15]],[[["scopedata",3]],["bool",15]],[[["body",3]],["bool",15]],[[["body",3]],["bool",15]],[[["bodysourcemap",3]],["bool",15]],[[["bodysourcemap",3]],["bool",15]],[[["syntheticsyntax",3]],["bool",15]],[[["typens",4]],["bool",15]],[[["typens",4]],["bool",15]],[[["resolvevalueresult",4]],["bool",15]],[[["resolvevalueresult",4]],["bool",15]],[[["valuens",4]],["bool",15]],[[["valuens",4]],["bool",15]],[[["defmap",3]],["bool",15]],[[["defmap",3]],["bool",15]],[[["moduleorigin",4]],["bool",15]],[[["moduleorigin",4]],["bool",15]],[[["moduledata",3]],["bool",15]],[[["moduledata",3]],["bool",15]],[[["modulesource",4]],["bool",15]],[[["modulesource",4]],["bool",15]],[[["rawvisibility",4]],["bool",15]],[[["rawvisibility",4]],["bool",15]],[[["visibility",4]],["bool",15]],[[["visibility",4]],["bool",15]],[[["prefixkind",4]],["bool",15]],[[["importinfo",3]],["bool",15]],[[["importinfo",3]],["bool",15]],[[["importpath",3]],["bool",15]],[[["importpath",3]],["bool",15]],[[],["bool",15]],[[["importkind",4]],["bool",15]],[[["moduleid",3]],["bool",15]],[[["moduleid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["functionid",3]],["bool",15]],[[["functionid",3]],["bool",15]],[[["structid",3]],["bool",15]],[[["structid",3]],["bool",15]],[[["unionid",3]],["bool",15]],[[["unionid",3]],["bool",15]],[[["enumid",3]],["bool",15]],[[["enumid",3]],["bool",15]],[[["enumvariantid",3]],["bool",15]],[[["enumvariantid",3]],["bool",15]],[[["fieldid",3]],["bool",15]],[[["fieldid",3]],["bool",15]],[[["constid",3]],["bool",15]],[[["constid",3]],["bool",15]],[[["staticid",3]],["bool",15]],[[["staticid",3]],["bool",15]],[[["traitid",3]],["bool",15]],[[["traitid",3]],["bool",15]],[[["typealiasid",3]],["bool",15]],[[["typealiasid",3]],["bool",15]],[[["implid",3]],["bool",15]],[[["implid",3]],["bool",15]],[[["blockid",3]],["bool",15]],[[["blockid",3]],["bool",15]],[[["blockloc",3]],["bool",15]],[[["blockloc",3]],["bool",15]],[[["typeparamid",3]],["bool",15]],[[["typeparamid",3]],["bool",15]],[[["lifetimeparamid",3]],["bool",15]],[[["lifetimeparamid",3]],["bool",15]],[[["constparamid",3]],["bool",15]],[[["constparamid",3]],["bool",15]],[[["assoccontainerid",4]],["bool",15]],[[["assoccontainerid",4]],["bool",15]],[[["adtid",4]],["bool",15]],[[["adtid",4]],["bool",15]],[[["genericparamid",4]],["bool",15]],[[["genericparamid",4]],["bool",15]],[[["moduledefid",4]],["bool",15]],[[["moduledefid",4]],["bool",15]],[[["defwithbodyid",4]],["bool",15]],[[["defwithbodyid",4]],["bool",15]],[[["associtemid",4]],["bool",15]],[[["associtemid",4]],["bool",15]],[[["genericdefid",4]],["bool",15]],[[["genericdefid",4]],["bool",15]],[[["attrdefid",4]],["bool",15]],[[["attrdefid",4]],["bool",15]],[[["variantid",4]],["bool",15]],[[["variantid",4]],["bool",15]],[[["modpath",3]],[["ordering",4],["option",4]]],[[["pathkind",4]],[["ordering",4],["option",4]]],[[["builtinint",4]],[["ordering",4],["option",4]]],[[["builtinuint",4]],[["ordering",4],["option",4]]],[[["builtinfloat",4]],[["ordering",4],["option",4]]],[[["structid",3]],[["ordering",4],["option",4]]],[[["unionid",3]],[["ordering",4],["option",4]]],[[["enumid",3]],[["ordering",4],["option",4]]],[[["implid",3]],[["ordering",4],["option",4]]],[[["blockid",3]],[["ordering",4],["option",4]]],[[["adtid",4]],[["ordering",4],["option",4]]],[[]],[[],["attrs",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["key",3]]],[[["import",3],["idx",3]]],[[["idx",3],["externcrate",3]]],[[["idx",3],["function",3]]],[[["struct",3],["idx",3]]],[[["union",3],["idx",3]]],[[["idx",3],["enum",3]]],[[["idx",3],["const",3]]],[[["static",3],["idx",3]]],[[["trait",3],["idx",3]]],[[["impl",3],["idx",3]]],[[["typealias",3],["idx",3]]],[[["mod",3],["idx",3]]],[[["idx",3],["macrocall",3]]],[[["macrorules",3],["idx",3]]],[[["macrodef",3],["idx",3]]],[[["field",3],["idx",3]]],[[["idx",3],["variant",3]]],[[["param",4],["idx",3]]],[[["rawvisibilityid",3]]],[[["fileitemtreeid",3]]],[[["exprid",6]],["expr",4]],[[["patid",6]],["pat",4]],[[["labelid",6]],["label",3]],[[["localmoduleid",6]],["moduledata",3]],[[["keyarc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[],["name",3]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["bool",15]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["bool",15]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["bool",15]],[[["usize",15]],["name",3]],[[["lifetime",3]],["name",3]],[[],["name",3]],[[],[["option",4],["usize",15]]],[[["defdatabase",8],["hirfileid",3]]],[[["defdatabase",8],["hygiene",3]]]],"p":[[8,"InternDatabase"],[3,"InternFunctionQuery"],[3,"InternFunctionLookupQuery"],[3,"InternStructQuery"],[3,"InternStructLookupQuery"],[3,"InternUnionQuery"],[3,"InternUnionLookupQuery"],[3,"InternEnumQuery"],[3,"InternEnumLookupQuery"],[3,"InternConstQuery"],[3,"InternConstLookupQuery"],[3,"InternStaticQuery"],[3,"InternStaticLookupQuery"],[3,"InternTraitQuery"],[3,"InternTraitLookupQuery"],[3,"InternTypeAliasQuery"],[3,"InternTypeAliasLookupQuery"],[3,"InternImplQuery"],[3,"InternImplLookupQuery"],[3,"InternBlockQuery"],[3,"InternBlockLookupQuery"],[3,"InternDatabaseGroupStorage__"],[8,"DefDatabase"],[3,"FileItemTreeQuery"],[3,"CrateDefMapQueryQuery"],[3,"BlockDefMapQuery"],[3,"StructDataQuery"],[3,"UnionDataQuery"],[3,"EnumDataQuery"],[3,"ImplDataQuery"],[3,"TraitDataQuery"],[3,"TypeAliasDataQuery"],[3,"FunctionDataQuery"],[3,"ConstDataQuery"],[3,"StaticDataQuery"],[3,"BodyWithSourceMapQuery"],[3,"BodyQuery"],[3,"ExprScopesQuery"],[3,"GenericParamsQuery"],[3,"VariantsAttrsQuery"],[3,"FieldsAttrsQuery"],[3,"VariantsAttrsSourceMapQuery"],[3,"FieldsAttrsSourceMapQuery"],[3,"AttrsQuery"],[3,"CrateLangItemsQuery"],[3,"LangItemQuery"],[3,"ImportMapQuery"],[3,"FieldVisibilitiesQuery"],[3,"FunctionVisibilityQuery"],[3,"DefDatabaseGroupStorage__"],[3,"Documentation"],[3,"Attrs"],[3,"AttrsWithOwner"],[3,"AttrSourceMap"],[3,"DocsRangeMap"],[4,"AttrInput"],[3,"Attr"],[3,"AttrQuery"],[3,"ModPath"],[4,"PathKind"],[4,"ImportAlias"],[3,"GenericArgs"],[3,"AssociatedTypeBinding"],[4,"GenericArg"],[3,"Path"],[3,"PathSegment"],[3,"PathSegments"],[8,"AsName"],[4,"Mutability"],[4,"Rawness"],[3,"TraitRef"],[4,"TypeRef"],[3,"LifetimeRef"],[4,"TypeBound"],[4,"BuiltinInt"],[4,"BuiltinUint"],[4,"BuiltinFloat"],[4,"BuiltinType"],[3,"UnresolvedModule"],[3,"UnresolvedExternCrate"],[3,"UnresolvedImport"],[3,"UnresolvedMacroCall"],[3,"InactiveCode"],[3,"UnresolvedProcMacro"],[3,"MacroError"],[3,"PerNs"],[3,"ItemScope"],[4,"ItemInNs"],[8,"Policy"],[3,"KeyMap"],[3,"RawVisibilityId"],[3,"ItemTree"],[4,"AttrOwner"],[8,"ItemTreeNode"],[3,"ItemTreeId"],[4,"ModItem"],[3,"Import"],[3,"ExternCrate"],[3,"Function"],[4,"Param"],[3,"Struct"],[4,"StructDefKind"],[3,"Union"],[3,"Enum"],[3,"Const"],[3,"Static"],[3,"Trait"],[3,"Impl"],[3,"TypeAlias"],[3,"Mod"],[4,"ModKind"],[13,"Inline"],[3,"MacroCall"],[3,"MacroRules"],[3,"MacroDef"],[4,"AssocItem"],[3,"Variant"],[4,"Fields"],[3,"Field"],[3,"Interned"],[3,"InternStorage"],[8,"Internable"],[3,"StructData"],[3,"EnumData"],[3,"EnumVariantData"],[4,"VariantData"],[3,"FieldData"],[4,"ReprKind"],[4,"StructKind"],[3,"FunctionData"],[3,"TypeAliasData"],[3,"TraitData"],[3,"ImplData"],[3,"ConstData"],[3,"StaticData"],[3,"TypeParamData"],[3,"LifetimeParamData"],[3,"ConstParamData"],[4,"TypeParamProvenance"],[3,"GenericParams"],[4,"WherePredicate"],[13,"TypeBound"],[13,"Lifetime"],[13,"ForLifetime"],[4,"WherePredicateTypeTarget"],[4,"LangItemTarget"],[3,"LangItems"],[3,"Label"],[4,"Literal"],[4,"Expr"],[13,"If"],[13,"Block"],[13,"Loop"],[13,"While"],[13,"For"],[13,"Call"],[13,"MethodCall"],[13,"Match"],[13,"Continue"],[13,"Break"],[13,"Return"],[13,"Yield"],[13,"RecordLit"],[13,"Field"],[13,"Await"],[13,"Try"],[13,"TryBlock"],[13,"Async"],[13,"Const"],[13,"Cast"],[13,"Ref"],[13,"Box"],[13,"UnaryOp"],[13,"BinaryOp"],[13,"Range"],[13,"Index"],[13,"Lambda"],[13,"Tuple"],[13,"Unsafe"],[13,"MacroStmts"],[4,"BinaryOp"],[13,"Assignment"],[4,"LogicOp"],[4,"CmpOp"],[13,"Eq"],[13,"Ord"],[4,"Ordering"],[4,"ArithOp"],[4,"UnaryOp"],[4,"Array"],[13,"Repeat"],[3,"MatchArm"],[3,"RecordLitField"],[4,"Statement"],[13,"Let"],[13,"Expr"],[4,"BindingAnnotation"],[3,"RecordFieldPat"],[4,"Pat"],[13,"Tuple"],[13,"Record"],[13,"Range"],[13,"Slice"],[13,"Bind"],[13,"TupleStruct"],[13,"Ref"],[13,"Box"],[3,"ScopeEntry"],[3,"ExprScopes"],[3,"LowerCtx"],[3,"Expander"],[3,"Body"],[3,"BodySourceMap"],[4,"TypeNs"],[4,"ResolveValueResult"],[4,"ValueNs"],[3,"Resolver"],[4,"ScopeDef"],[8,"HasResolver"],[4,"ModuleOrigin"],[13,"CrateRoot"],[13,"File"],[13,"Inline"],[13,"BlockExpr"],[3,"ModuleData"],[3,"DefMap"],[4,"ModuleSource"],[8,"HasSource"],[8,"HasChildSource"],[8,"ChildBySource"],[4,"RawVisibility"],[4,"Visibility"],[4,"PrefixKind"],[3,"ImportInfo"],[3,"ImportPath"],[3,"ImportMap"],[4,"ImportKind"],[4,"SearchMode"],[3,"Query"],[3,"ModuleId"],[3,"ItemLoc"],[3,"AssocItemLoc"],[3,"EnumVariantId"],[3,"FieldId"],[3,"TypeParamId"],[3,"LifetimeParamId"],[3,"ConstParamId"],[4,"AssocContainerId"],[4,"AdtId"],[4,"GenericParamId"],[4,"ModuleDefId"],[4,"DefWithBodyId"],[4,"AssocItemId"],[4,"GenericDefId"],[4,"AttrDefId"],[4,"VariantId"],[8,"Lookup"],[8,"HasModule"],[8,"AsMacroCall"],[3,"UnresolvedMacro"],[3,"InternDatabaseStorage"],[3,"DefDatabaseStorage"],[3,"Name"],[3,"PerNsGlobImports"],[3,"Key"],[3,"DynMap"],[3,"AstPtrPolicy"],[3,"FileItemTreeId"],[3,"IdRange"],[3,"ScopeData"],[3,"Mark"],[3,"SyntheticSyntax"],[3,"FunctionId"],[3,"StructId"],[3,"UnionId"],[3,"EnumId"],[3,"ConstId"],[3,"StaticId"],[3,"TraitId"],[3,"TypeAliasId"],[3,"ImplId"],[3,"BlockId"],[3,"BlockLoc"],[6,"StaticLoc"]]},\
"hir_expand":{"doc":"<code>hir_expand</code> deals with macro expansion.","t":[0,4,13,12,12,13,12,12,13,13,13,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,11,11,3,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,5,0,3,11,3,11,11,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,11,11,11,11,8,10,0,3,11,11,11,11,3,0,3,12,11,8,10,10,10,10,11,3,11,3,11,11,11,11,0,4,13,13,13,13,13,13,13,13,13,11,5,0,3,5,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,0,3,11,11,11,0,0,3,8,10,11,11,11,11,5,4,13,13,13,13,13,13,13,3,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,11,11,3,4,13,13,3,3,3,12,12,12,11,11,11,4,13,13,13,13,13,3,12,4,13,12,12,13,12,12,12,11,3,3,4,13,13,11,11,11,6,11,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["db","TokenExpander","MacroRules","mac","def_site_token_map","MacroDef","mac","def_site_token_map","Builtin","BuiltinDerive","ProcMacro","AstDatabase","ast_id_map","parse_or_expand","parse_macro_expansion","intern_macro","lookup_intern_macro","intern_eager_expansion","lookup_intern_eager_expansion","macro_arg","macro_arg_text","macro_def","macro_expand","expand_proc_macro","macro_expand_error","hygiene_frame","AstDatabaseStorage","AstIdMapQuery","in_db","in_db_mut","ParseMacroExpansionQuery","in_db","in_db_mut","InternMacroQuery","in_db","in_db_mut","InternMacroLookupQuery","in_db","in_db_mut","InternEagerExpansionQuery","in_db","in_db_mut","InternEagerExpansionLookupQuery","in_db","in_db_mut","MacroArgTextQuery","in_db","in_db_mut","MacroDefQuery","in_db","in_db_mut","MacroExpandQuery","in_db","in_db_mut","ExpandProcMacroQuery","in_db","in_db_mut","MacroExpandErrorQuery","in_db","in_db_mut","HygieneFrameQuery","in_db","in_db_mut","AstDatabaseGroupStorage__","ast_id_map","parse_macro_expansion","intern_macro","lookup_intern_macro","intern_eager_expansion","lookup_intern_eager_expansion","macro_arg_text","macro_def","macro_expand","expand_proc_macro","macro_expand_error","hygiene_frame","new","fmt_index","maybe_changed_since","for_each_query","expand_hypothetical","ast_id_map","FileAstId","upcast","AstIdMap","ast_id","get","name","known","isize","i8","i16","i32","i64","i128","usize","u8","u16","u32","u64","u128","f32","f64","bool","char","str","macro_rules","derive","doc","cfg","cfg_attr","std","core","alloc","iter","ops","future","result","boxed","option","Iterator","IntoIterator","Item","Try","Ok","Future","Result","Option","Output","Target","Box","RangeFrom","RangeFull","RangeInclusive","RangeToInclusive","RangeTo","Range","Neg","Not","Index","filter_map","next","iter_mut","len","is_empty","file","column","compile_error","line","module_path","assert","core_panic","std_panic","stringify","concat","include","include_bytes","include_str","format_args","format_args_nl","env","option_env","llvm_asm","asm","global_asm","Copy","Clone","Default","Debug","Hash","Ord","PartialOrd","Eq","PartialEq","abort","size_of","min_align_of","needs_drop","caller_location","size_of_val","min_align_of_val","add_with_overflow","sub_with_overflow","mul_with_overflow","wrapping_add","wrapping_sub","wrapping_mul","saturating_add","saturating_sub","rotate_left","rotate_right","ctpop","ctlz","cttz","bswap","bitreverse","discriminant_value","type_id","likely","unlikely","ptr_guaranteed_eq","ptr_guaranteed_ne","minnumf32","minnumf64","maxnumf32","rustc_peek","maxnumf64","type_name","variant_count","SELF_PARAM","SELF_TYPE","STATIC_LIFETIME","Name","new_tuple_field","new_lifetime","missing","as_tuple_index","AsName","as_name","hygiene","Hygiene","new","new_unhygienic","name_ref_to_name","local_inner_macros","HygieneFrame","diagnostics","DiagnosticCode","0","as_str","Diagnostic","code","message","display_source","as_any","is_experimental","DiagnosticSink","push","DiagnosticSinkBuilder","new","filter","on","build","builtin_derive","BuiltinDeriveExpander","Copy","Clone","Default","Debug","Hash","Ord","PartialOrd","Eq","PartialEq","expand","find_builtin_derive","builtin_macro","ExpandedEager","find_builtin_macro","BuiltinFnLikeExpander","Column","File","Line","ModulePath","Assert","Stringify","FormatArgs","FormatArgsNl","LlvmAsm","Asm","GlobalAsm","Cfg","CorePanic","StdPanic","EagerExpander","CompileError","Concat","Include","IncludeBytes","IncludeStr","Env","OptionEnv","expand","expand","proc_macro","ProcMacroExpander","new","dummy","expand","quote","eager","ErrorEmitted","ErrorSink","emit","option","option_with","result","expand_result_option","expand_eager_macro","ExpandError","NoMatchingRule","UnexpectedToken","BindingError","ConversionError","ProcMacroError","UnresolvedProcMacro","Other","ExpandResult","value","err","FragmentKind","Path","Expr","Statement","StatementOptionalSemi","Type","Pattern","Item","Block","Visibility","MetaItem","Items","Statements","Attr","HirFileId","original_file","expansion_level","call_node","expansion_info","is_builtin_derive","is_include_macro","MacroFile","MacroCallId","LazyMacro","EagerMacro","LazyMacroId","EagerMacroId","MacroDefId","krate","kind","local_inner","as_lazy_macro","ast_id","is_proc_macro","MacroDefKind","Declarative","BuiltIn","BuiltInDerive","BuiltInEager","ProcMacro","MacroCallLoc","kind","MacroCallKind","FnLike","ast_id","fragment","Derive","ast_id","derive_name","derive_attr_index","as_file","EagerCallLoc","ExpansionInfo","Origin","Def","Call","call_node","map_token_down","map_token_up","AstId","to_node","InFile","file_id","value","new","with_value","map","as_ref","file_syntax","cloned","transpose","ancestors_with_macros","original_file_range","ancestors_with_macros","descendants","syntax","to_fragment_kind","name","quote","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","clone","hash","eq","fmt","from","from","eq","eq","ne","eq","ne","fmt","clone","clone","fmt","fmt","fmt","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","cmp","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","execute","execute","execute","execute","execute","execute","execute","execute","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","from_intern_id","as_intern_id","from_intern_id","as_intern_id","ok","only_err","str_err","map","result","to_node"],"q":["hir_expand","hir_expand::db","","hir_expand::db::TokenExpander","","hir_expand::db","hir_expand::db::TokenExpander","","hir_expand::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand","hir_expand::ast_id_map","","","","","hir_expand","hir_expand::name","hir_expand::name::known","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::name","","","","","","","hir_expand","hir_expand::hygiene","","","","","","hir_expand","hir_expand::diagnostics","","","","","","","","","","","","","","","","hir_expand","hir_expand::builtin_derive","","","","","","","","","","","","hir_expand","hir_expand::builtin_macro","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand","hir_expand::proc_macro","","","","hir_expand","","hir_expand::eager","","","","","","","","hir_expand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::MacroCallKind","","hir_expand","hir_expand::MacroCallKind","","","hir_expand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::ast_id_map","","","","","","","","","","","","","","","","","","hir_expand::name","","","","","","","","","","","hir_expand::hygiene","","","","","","","","","","","","","","","","","","","hir_expand::diagnostics","","","","","","","","","","","","","","","","","","","","","","","hir_expand::builtin_derive","","","","","","","","","","hir_expand::builtin_macro","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::proc_macro","","","","","","","","","","hir_expand::eager","","","","","","","hir_expandhir_expand::db","hir_expand::ast_id_map","hir_expand::name","hir_expand::hygiene","","hir_expand::diagnostics","hir_expand::builtin_derive","hir_expand::builtin_macro","","hir_expand::proc_macro","hir_expand","","","","","","","","","","","","hir_expand::db","","","","","","","","","","","","hir_expand::ast_id_map","hir_expand::name","hir_expand::db","","hir_expand::ast_id_map","","","hir_expand::name","","hir_expand::hygiene","","hir_expand::diagnostics","","hir_expand::builtin_derive","hir_expand::builtin_macro","","hir_expand::proc_macro","","hir_expand","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::name","hir_expand::db","","","","","","","","","","","","","hir_expand::ast_id_map","","hir_expand::name","hir_expand::hygiene","","hir_expand::diagnostics","hir_expand::builtin_derive","hir_expand::builtin_macro","","","hir_expand::proc_macro","hir_expand::eager","hir_expand","","","","","","","","","","","","hir_expand::name","hir_expand::ast_id_map","hir_expand::name","hir_expand::builtin_derive","hir_expand::builtin_macro","","hir_expand::proc_macro","hir_expand","","","","","","","","","","","hir_expand::db","","","","","","","","","","","","","","","","","","","","hir_expand","","","","","","","","",""],"d":["Defines database & queries for macro expansion.","","Old-style <code>macro_rules</code>.","","","AKA macros 2.0.","","","Stuff like <code>line!</code> and <code>file!</code>.","<code>derive(Copy)</code> and such.","The thing we love the most here in rust-analyzer – …","","","Main public API – parsis a hir file, not caring whether …","Implementation for the macro case.","Macro ids. That’s probably the tricksiest bit in …","","Certain built-in macros are eager (…","","Lowers syntactic macro call to a token tree …","Extracts syntax node, corresponding to a macro call. That…","Gets the expander for this macro. This compiles …","Expand macro call to a token tree. This query is LRUed …","Special case of the previous query for procedural macros. …","Firewall query that returns the error from the …","","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","This expands the given macro call, but with different …","<code>AstIdMap</code> allows to create stable IDs for “large” …","<code>AstId</code> points to an AST node in a specific file.","","Maps items’ <code>SyntaxNode</code>s to <code>ErasedFileAstId</code>s and back.","","","FIXME: write short doc here","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Name</code> is a wrapper around string, which is used in hir for …","","","A fake name for things missing in the source code.","","","","This modules handles hygiene information.","","","","","","","Semantic errors and warnings.","","","","","","","Source element that triggered the diagnostics.","","","","","","","","","","Builtin derives.","","","","","","","","","","","","","Builtin macro","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proc Macro Expander stub","","","","","A simplified version of quote-crate like quasi quote macro","Eager expansion related utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Input to the analyzer is a set of files, where each file …","For macro-expansion files, returns the file original …","","If this is a macro call, returns the syntax node of the …","Return expansion information if it is a macro-expansion …","Indicate it is macro file generated for builtin derive","Return whether this file is an include macro","","<code>MacroCallId</code> identifies a particular macro invocation, like…","","","","","","","","","","","","","","","","","","","","","","","","","","","Syntactical index of the invoking <code>#[derive]</code> attribute.","","","ExpansionInfo mainly describes how to map text range …","","","","","","","<code>AstId</code> points to an AST node in any file.","","<code>InFile<T></code> stores a value of <code>T</code> inside a particular …","","","","","","","","","","","","","","","Given a <code>MacroCallId</code>, return what <code>FragmentKind</code> it belongs …","","FIXME: It probably should implement in proc-macroi":[0,0,1,2,2,1,3,3,1,1,1,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,5,5,0,6,6,0,7,7,0,8,8,0,9,9,0,10,10,0,11,11,0,12,12,0,13,13,0,14,14,0,15,15,0,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,18,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,21,0,0,22,22,22,22,0,0,0,23,23,0,24,24,24,24,24,0,25,0,26,26,26,26,0,0,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,29,29,29,29,29,29,29,28,29,0,0,30,30,30,0,0,0,0,31,31,31,31,31,0,0,32,32,32,32,32,32,32,0,33,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,0,35,35,35,35,35,35,0,0,36,36,0,0,0,37,37,37,37,37,37,0,38,38,38,38,38,0,39,0,40,41,41,40,42,42,42,36,0,0,0,43,43,44,44,44,0,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,1,1,1,1,1,1,1,1,1,1,47,47,47,47,47,47,47,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,22,22,22,22,22,22,22,22,22,48,48,48,48,48,48,48,48,48,48,23,23,23,23,23,23,23,23,23,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,49,49,49,49,49,49,49,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,50,50,50,50,50,50,50,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,51,51,51,51,51,51,51,51,51,51,36,36,36,36,36,36,36,36,36,36,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,54,54,54,54,54,54,54,54,54,54,44,44,44,44,44,44,44,44,44,44,43,43,43,43,43,43,43,43,46,46,46,46,46,46,46,46,46,46,34,34,34,34,33,32,43,32,32,33,33,32,32,33,32,33,43,35,35,36,36,1,18,20,22,48,23,27,28,29,30,35,51,36,52,53,37,38,39,40,54,44,46,5,6,7,8,9,10,11,12,13,14,15,16,19,20,1,1,18,19,19,20,20,48,48,23,23,27,28,29,30,30,35,35,51,51,36,36,52,52,53,53,37,37,38,38,39,39,40,40,54,54,44,44,46,46,20,1,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,22,48,23,27,49,28,29,30,50,35,51,36,52,53,37,38,39,40,54,44,46,20,18,20,27,28,29,30,35,51,36,52,53,37,38,39,40,54,46,5,6,11,12,13,14,15,16,5,6,7,8,9,10,11,12,13,14,15,16,52,52,53,53,33,33,33,33,33,46],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["hirfileid",3]],[["astidmap",3],["arc",3]]],[[["hirfileid",3]],[["option",4],["syntaxnode",6]]],[[["macrofile",3]],[["expandresult",3],["option",4]]],[[["macrocallloc",3]],["lazymacroid",3]],[[["lazymacroid",3]],["macrocallloc",3]],[[["eagercallloc",3]],["eagermacroid",3]],[[["eagermacroid",3]],["eagercallloc",3]],[[["macrocallid",4]],[["option",4],["arc",3]]],[[["macrocallid",4]],[["greennode",3],["option",4]]],[[["macrodefid",3]],[["arc",3],["option",4]]],[[["macrocallid",4]],[["expandresult",3],["option",4]]],[[["macrocallid",4]],[["expanderror",4],["result",4],["subtree",3]]],[[["macrocallid",4]],[["expanderror",4],["option",4]]],[[["hirfileid",3]],[["arc",3],["hygieneframe",3]]],null,null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15]]],[[["astdatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["astdatabase",8],["databasekeyindex",3],["revision",3]],["bool",15]],[[["runtime",3],["fnmut",8]]],[[["tokentree",3],["macrocallid",4],["syntaxtoken",6],["astdatabase",8]],["option",4]],null,null,[[],[["fileastid",3],["astnode",8]]],null,[[],[["astnode",8],["fileastid",3]]],[[["astnode",8],["fileastid",3]],[["astnode",8],["astptr",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],["name",3]],[[["lifetime",3]],["name",3]],[[],["name",3]],[[],[["usize",15],["option",4]]],null,[[],["name",3]],null,null,[[["astdatabase",8],["hirfileid",3]],["hygiene",3]],[[],["hygiene",3]],[[["astdatabase",8],["nameref",3]],[["name",3],["crateid",3],["either",4]]],[[["astdatabase",8],["path",3]],[["option",4],["crateid",3]]],null,null,null,null,[[],["str",15]],null,[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["bool",15]],null,[[]],null,[[]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]],["diagnosticsink",3]],null,null,null,null,null,null,null,null,null,null,null,[[["lazymacroid",3],["astdatabase",8],["subtree",3]],[["expanderror",4],["result",4],["subtree",3]]],[[["crateid",3],["macro",4],["name",3],["astid",6]],[["macrodefid",3],["option",4]]],null,null,[[["crateid",3],["macro",4],["name",3],["astid",6]],[["macrodefid",3],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["lazymacroid",3],["astdatabase",8],["subtree",3]],[["subtree",3],["expandresult",3]]],[[["subtree",3],["astdatabase",8],["eagermacroid",3]],[["expandresult",3],["option",4]]],null,null,[[["procmacroid",3],["crateid",3]]],[[["crateid",3]]],[[["subtree",3],["astdatabase",8],["crateid",3]],[["expanderror",4],["result",4],["subtree",3]]],null,null,null,null,[[["expanderror",4]]],[[["option",4]],[["result",4],["erroremitted",3]]],[[],[["result",4],["erroremitted",3]]],[[["expanderror",4],["result",4]],[["result",4],["erroremitted",3]]],[[["expandresult",3],["option",4]],[["result",4],["erroremitted",3]]],[[["macrodefid",3],["crateid",3],["infile",3],["fn",8],["astdatabase",8],["macrocall",3],["fnmut",8]],[["eagermacroid",3],["erroremitted",3],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["astdatabase",8]],["fileid",3]],[[["astdatabase",8]],["u32",15]],[[["astdatabase",8]],[["option",4],["infile",3]]],[[["astdatabase",8]],[["expansioninfo",3],["option",4]]],[[["astdatabase",8]],[["option",4],["infile",3]]],[[["astdatabase",8]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[["macrocallkind",4],["astdatabase",8],["crateid",3]],["lazymacroid",3]],[[],[["astid",6],["astid",6],["either",4]]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["hirfileid",3]],null,null,null,null,null,[[],[["option",4],["infile",3]]],[[["syntaxtoken",6],["infile",3]],[["infile",3],["option",4]]],[[["syntaxtoken",6],["infile",3]],["option",4]],null,[[["astdatabase",8]]],null,null,null,[[["hirfileid",3]],["infile",3]],[[],["infile",3]],[[["fnonce",8]],["infile",3]],[[],["infile",3]],[[["astdatabase",8]],["syntaxnode",6]],[[],["infile",3]],[[],[["option",4],["infile",3]]],[[["astdatabase",8]]],[[["astdatabase",8]],["filerange",3]],[[["astdatabase",8]]],[[]],[[],[["infile",3],["syntaxnode",6]]],[[["macrocall",3]],["fragmentkind",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["fragmentkind",4]],[[]],[[["fragmentkind",4]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["expanderror",4],["result",4]],["expandresult",3]],[[["expansionerror",4]],["expanderror",4]],[[["origin",4]],["bool",15]],[[["expanderror",4]],["bool",15]],[[["expanderror",4]],["bool",15]],[[["expandresult",3]],["bool",15]],[[["expandresult",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[],["expanderror",4]],[[],["expandresult",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["fileid",3]]],[[["macrofile",3]]],[[["lazymacroid",3]]],[[["eagermacroid",3]]],[[],["tokenexpander",4]],[[],["fileastid",3]],[[],["name",3]],[[],["hygiene",3]],[[],["hygieneframe",3]],[[],["diagnosticcode",3]],[[],["builtinderiveexpander",4]],[[],["builtinfnlikeexpander",4]],[[],["eagerexpander",4]],[[],["procmacroexpander",3]],[[],["hirfileid",3]],[[],["macrofile",3]],[[],["macrocallid",4]],[[],["lazymacroid",3]],[[],["eagermacroid",3]],[[],["macrodefid",3]],[[],["macrodefkind",4]],[[],["macrocallloc",3]],[[],["macrocallkind",4]],[[],["eagercallloc",3]],[[],["expansioninfo",3]],[[],["infile",3]],[[],["astidmapquery",3]],[[],["parsemacroexpansionquery",3]],[[],["internmacroquery",3]],[[],["internmacrolookupquery",3]],[[],["interneagerexpansionquery",3]],[[],["interneagerexpansionlookupquery",3]],[[],["macroargtextquery",3]],[[],["macrodefquery",3]],[[],["macroexpandquery",3]],[[],["expandprocmacroquery",3]],[[],["macroexpanderrorquery",3]],[[],["hygieneframequery",3]],[[],["astidmap",3]],[[["name",3]],["ordering",4]],[[["tokenexpander",4]],["bool",15]],[[["tokenexpander",4]],["bool",15]],[[],["bool",15]],[[["astidmap",3]],["bool",15]],[[["astidmap",3]],["bool",15]],[[["name",3]],["bool",15]],[[["name",3]],["bool",15]],[[["hygieneframe",3]],["bool",15]],[[["hygieneframe",3]],["bool",15]],[[["diagnosticcode",3]],["bool",15]],[[["diagnosticcode",3]],["bool",15]],[[["builtinderiveexpander",4]],["bool",15]],[[["builtinfnlikeexpander",4]],["bool",15]],[[["eagerexpander",4]],["bool",15]],[[["procmacroexpander",3]],["bool",15]],[[["procmacroexpander",3]],["bool",15]],[[["hirfileid",3]],["bool",15]],[[["hirfileid",3]],["bool",15]],[[["macrofile",3]],["bool",15]],[[["macrofile",3]],["bool",15]],[[["macrocallid",4]],["bool",15]],[[["macrocallid",4]],["bool",15]],[[["lazymacroid",3]],["bool",15]],[[["lazymacroid",3]],["bool",15]],[[["eagermacroid",3]],["bool",15]],[[["eagermacroid",3]],["bool",15]],[[["macrodefid",3]],["bool",15]],[[["macrodefid",3]],["bool",15]],[[["macrodefkind",4]],["bool",15]],[[["macrodefkind",4]],["bool",15]],[[["macrocallloc",3]],["bool",15]],[[["macrocallloc",3]],["bool",15]],[[["macrocallkind",4]],["bool",15]],[[["macrocallkind",4]],["bool",15]],[[["eagercallloc",3]],["bool",15]],[[["eagercallloc",3]],["bool",15]],[[["expansioninfo",3]],["bool",15]],[[["expansioninfo",3]],["bool",15]],[[["infile",3]],["bool",15]],[[["infile",3]],["bool",15]],[[["name",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[],["expandresult",3]],[[["expanderror",4]],["expandresult",3]],[[["string",3]],["expandresult",3]],[[],["expandresult",3]],[[],[["expanderror",4],["result",4]]],[[["astdatabase",8]]]],"p":[[4,"TokenExpander"],[13,"MacroRules"],[13,"MacroDef"],[8,"AstDatabase"],[3,"AstIdMapQuery"],[3,"ParseMacroExpansionQuery"],[3,"InternMacroQuery"],[3,"InternMacroLookupQuery"],[3,"InternEagerExpansionQuery"],[3,"InternEagerExpansionLookupQuery"],[3,"MacroArgTextQuery"],[3,"MacroDefQuery"],[3,"MacroExpandQuery"],[3,"ExpandProcMacroQuery"],[3,"MacroExpandErrorQuery"],[3,"HygieneFrameQuery"],[3,"AstDatabaseGroupStorage__"],[3,"FileAstId"],[3,"AstIdMap"],[3,"Name"],[8,"AsName"],[3,"Hygiene"],[3,"DiagnosticCode"],[8,"Diagnostic"],[3,"DiagnosticSink"],[3,"DiagnosticSinkBuilder"],[4,"BuiltinDeriveExpander"],[4,"BuiltinFnLikeExpander"],[4,"EagerExpander"],[3,"ProcMacroExpander"],[8,"ErrorSink"],[4,"ExpandError"],[3,"ExpandResult"],[4,"FragmentKind"],[3,"HirFileId"],[4,"MacroCallId"],[3,"MacroDefId"],[4,"MacroDefKind"],[3,"MacroCallLoc"],[4,"MacroCallKind"],[13,"FnLike"],[13,"Derive"],[4,"Origin"],[3,"ExpansionInfo"],[6,"AstId"],[3,"InFile"],[3,"AstDatabaseStorage"],[3,"HygieneFrame"],[3,"ExpandedEager"],[3,"ErrorEmitted"],[3,"MacroFile"],[3,"LazyMacroId"],[3,"EagerMacroId"],[3,"EagerCallLoc"]]},\
"hir_ty":{"doc":"The type system. We currently use this to infer types for …","tn":["db","HirDatabase","infer","infer_query","ty","value_ty","impl_self_ty","const_param_ty","impl_trait","field_types","callable_item_signature","return_type_impl_traits","generic_predicates_for_param","generic_predicates","trait_environment","generic_defaults","inherent_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","intern_callable_def","lookup_intern_callable_def","intern_type_param_id","lookup_intern_type_param_id","intern_lifetime_param_id","lookup_intern_lifetime_param_id","intern_const_param_id","lookup_intern_const_param_id","intern_impl_trait_id","lookup_intern_impl_trait_id","intern_closure","lookup_intern_closure","associated_ty_data","trait_datum","struct_datum","impl_datum","fn_def_datum","fn_def_variance","adt_variance","associated_ty_value","trait_solve","trait_solve_query","program_clauses_for_chalk_env","HirDatabaseStorage","InferQueryQuery","in_db","in_db_mut","TyQuery","in_db","in_db_mut","ValueTyQuery","in_db","in_db_mut","ImplSelfTyQuery","in_db","in_db_mut","ConstParamTyQuery","in_db","in_db_mut","ImplTraitQuery","in_db","in_db_mut","FieldTypesQuery","in_db","in_db_mut","CallableItemSignatureQuery","in_db","in_db_mut","ReturnTypeImplTraitsQuery","in_db","in_db_mut","GenericPredicatesForParamQuery","in_db","in_db_mut","GenericPredicatesQuery","in_db","in_db_mut","TraitEnvironmentQuery","in_db","in_db_mut","GenericDefaultsQuery","in_db","in_db_mut","InherentImplsInCrateQuery","in_db","in_db_mut","TraitImplsInCrateQuery","in_db","in_db_mut","TraitImplsInDepsQuery","in_db","in_db_mut","InternCallableDefQuery","in_db","in_db_mut","InternCallableDefLookupQuery","in_db","in_db_mut","InternTypeParamIdQuery","in_db","in_db_mut","InternTypeParamIdLookupQuery","in_db","in_db_mut","InternLifetimeParamIdQuery","in_db","in_db_mut","InternLifetimeParamIdLookupQuery","in_db","in_db_mut","InternConstParamIdQuery","in_db","in_db_mut","InternConstParamIdLookupQuery","in_db","in_db_mut","InternImplTraitIdQuery","in_db","in_db_mut","InternImplTraitIdLookupQuery","in_db","in_db_mut","InternClosureQuery","in_db","in_db_mut","InternClosureLookupQuery","in_db","in_db_mut","AssociatedTyDataQuery","in_db","in_db_mut","TraitDatumQuery","in_db","in_db_mut","StructDatumQuery","in_db","in_db_mut","ImplDatumQuery","in_db","in_db_mut","FnDefDatumQuery","in_db","in_db_mut","FnDefVarianceQuery","in_db","in_db_mut","AdtVarianceQuery","in_db","in_db_mut","AssociatedTyValueQuery","in_db","in_db_mut","TraitSolveQueryQuery","in_db","in_db_mut","ProgramClausesForChalkEnvQuery","in_db","in_db_mut","HirDatabaseGroupStorage__","infer_query","ty","value_ty","impl_self_ty","const_param_ty","impl_trait","field_types","callable_item_signature","return_type_impl_traits","generic_predicates_for_param","generic_predicates","trait_environment","generic_defaults","inherent_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","intern_callable_def","lookup_intern_callable_def","intern_type_param_id","lookup_intern_type_param_id","intern_lifetime_param_id","lookup_intern_lifetime_param_id","intern_const_param_id","lookup_intern_const_param_id","intern_impl_trait_id","lookup_intern_impl_trait_id","intern_closure","lookup_intern_closure","associated_ty_data","trait_datum","struct_datum","impl_datum","fn_def_datum","fn_def_variance","adt_variance","associated_ty_value","trait_solve_query","program_clauses_for_chalk_env","new","fmt_index","maybe_changed_since","for_each_query","InternedTypeParamId","InternedLifetimeParamId","InternedConstParamId","InternedOpaqueTyId","InternedClosureId","InternedCallableDefId","diagnostics","record_literal_missing_fields","record_pattern_missing_fields","validate_module_item","validate_body","NoSuchField","file","field","MissingFields","file","field_list_parent","field_list_parent_path","missed_fields","MissingPatFields","file","field_list_parent","field_list_parent_path","missed_fields","MissingMatchArms","file","match_expr","arms","MissingOkOrSomeInTailExpr","file","expr","required","RemoveThisSemicolon","file","expr","BreakOutsideOfLoop","file","expr","MissingUnsafe","file","expr","MismatchedArgCount","file","call_expr","expected","found","CaseType","LowerSnakeCase","UpperSnakeCase","UpperCamelCase","IdentType","Argument","Constant","Enum","Field","Function","StaticVariable","Structure","Variable","Variant","IncorrectCase","file","ident","expected_case","ident_type","ident_text","suggested_text","ReplaceFilterMapNextWithFindMap","file","next_expr","display","HirFormatter","db","HirDisplay","hir_fmt","into_displayable","display","display_truncated","display_source_code","display_test","write_joined","write_fmt","should_truncate","omit_verbose_types","DisplayTarget","Diagnostics","SourceCode","module_id","Test","DisplaySourceCodeError","PathNotFound","UnknownType","Closure","HirDisplayError","DisplaySourceCodeError","FmtError","HirDisplayWrapper","write_bounds_like_dyn_trait_with_prefix","write_visibility","method_resolution","TyFingerprint","Str","Slice","Array","Never","RawPtr","Scalar","Adt","Dyn","ForeignType","Unit","Unnameable","Function","for_inherent_impl","for_trait_impl","TraitImpls","for_self_ty_without_blanket_impls","for_trait","for_trait_and_self_ty","all_impls","InherentImpls","for_self_ty","all_impls","def_crates","LookupMode","MethodCall","Path","iterate_method_candidates","resolve_indexing_op","implements_trait","implements_trait_unique","primitive","FloatTy","F32","F64","IntTy","Isize","I8","I16","I32","I64","I128","UintTy","Usize","U8","U16","U32","U64","U128","BuiltinFloat","F32","F64","BuiltinInt","Isize","I8","I16","I32","I64","I128","BuiltinUint","Usize","U8","U16","U32","U64","U128","int_ty_to_string","uint_ty_to_string","float_ty_to_string","traits","TraitEnvironment","env","FnTrait","FnOnce","FnMut","Fn","get_id","autoderef","TyBuilder","TyExt","is_unit","is_never","is_unknown","as_adt","as_builtin","as_tuple","as_fn_def","as_reference","as_reference_or_ptr","as_generic_def","callable_def","callable_sig","strip_references","dyn_trait","impl_trait_bounds","associated_type_parent_trait","equals_ctor","ProjectionTyExt","trait_ref","trait_","TraitRefExt","hir_trait_id","could_unify","InferenceResult","type_of_expr","type_of_pat","Interner","associated_type_shorthand_candidates","callable_item_sig","CallableDefId","FunctionId","StructId","EnumVariantId","ImplTraitLoweringMode","Opaque","Param","Variable","Disallowed","TyDefId","BuiltinType","AdtId","TypeAliasId","TyLoweringContext","db","resolver","type_param_mode","impl_trait_mode","ValueTyDefId","FunctionId","StructId","UnionId","EnumVariantId","ConstId","StaticId","const_from_placeholder_idx","from_assoc_type_id","from_chalk_trait_id","from_foreign_def_id","from_placeholder_idx","lt_from_placeholder_idx","to_assoc_type_id","to_chalk_trait_id","to_foreign_def_id","to_placeholder_idx","all_super_traits","TypeWalk","walk","Cast","cast","AdtId","0","BoundVar","debruijn","index","DebruijnIndex","Mutability","Mut","Not","Safety","Safe","Unsafe","Scalar","Bool","Char","Int","Uint","Float","TyVariableKind","General","Integer","Float","ForeignDefId","AssocTypeId","FnDefId","ClosureId","OpaqueTyId","PlaceholderIndex","VariableKind","VariableKinds","CanonicalVarKinds","Binders","Substitution","GenericArg","GenericArgData","Ty","TyKind","DynTy","FnPointer","FnSubst","0","ProjectionTy","AliasTy","OpaqueTy","InferenceVar","Lifetime","LifetimeData","LifetimeOutlives","Const","ConstData","ConstValue","ConcreteConst","ChalkTraitId","TraitRef","QuantifiedWhereClause","QuantifiedWhereClauses","Canonical","FnSig","InEnvironment","DomainGoal","AliasEq","Solution","ConstrainedSubst","Guidance","WhereClause","subst_prefix","param_idx","make_canonical","CallableSig","PolyFnSig","from_params_and_return","from_fn_ptr","params","ret","ImplTraitId","ReturnTypeImplTrait","AsyncBlockTypeImplTrait","ReturnTypeImplTraits","static_lifetime","dummy_usize_const","has_interner","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","shifted_in","shifted_in_from","shifted_out_to","shifted_out","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","shifted_in","shifted_in_from","shifted_out_to","shifted_out","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","shifted_in","shifted_in_from","shifted_out_to","shifted_out","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","shifted_in","shifted_in_from","shifted_out_to","shifted_out","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","shifted_in","shifted_in_from","shifted_out_to","shifted_out","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","shifted_in","shifted_in_from","shifted_out_to","shifted_out","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","shifted_in","shifted_in_from","shifted_out_to","shifted_out","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","shifted_in","shifted_in_from","shifted_out_to","shifted_out","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","shifted_in","shifted_in_from","shifted_out_to","shifted_out","could_match","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","shifted_in","shifted_in_from","shifted_out_to","shifted_out","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_with","fold_with","fold_with","fold_with","fold_with","fold_with","fold_with","fold_with","fold_with","eq","ne","eq","eq","ne","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","zip_with","zip_with","zip_with","zip_with","visit_with","visit_with","visit_with","visit_with","visit_with","visit_with","visit_with","visit_with","visit_with","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","hash","hash","hash","cmp","cmp","cmp","fmt","fmt","fmt","eq","eq","eq","clone","clone","clone","partial_cmp","partial_cmp","partial_cmp","is_unit","is_never","is_unknown","as_adt","as_builtin","as_tuple","as_fn_def","as_reference","as_reference_or_ptr","as_generic_def","callable_def","callable_sig","dyn_trait","strip_references","impl_trait_bounds","associated_type_parent_trait","equals_ctor","trait_ref","trait_","hir_trait_id","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","cmp","cmp","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","index","index","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","execute","execute","recover","execute","execute","recover","execute","execute","execute","execute","execute","execute","recover","execute","execute","execute","recover","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","from_intern_id","as_intern_id","fold_with","debug_adt_id","debug_trait_id","debug_assoc_type_id","debug_alias","debug_projection_ty","debug_opaque_ty","debug_opaque_ty_id","debug_ty","debug_lifetime","debug_generic_arg","debug_goal","debug_goals","debug_program_clause_implication","debug_substitution","debug_separator_trait_ref","debug_fn_def_id","debug_const","debug_variable_kinds","debug_variable_kinds_with_angles","debug_canonical_var_kinds","debug_program_clause","debug_program_clauses","debug_quantified_where_clauses","intern_ty","ty_data","intern_lifetime","lifetime_data","intern_const","const_data","const_eq","intern_generic_arg","generic_arg_data","intern_goal","intern_goals","goal_data","goals_data","intern_substitution","substitution_data","intern_program_clause","program_clause_data","intern_program_clauses","program_clauses_data","intern_quantified_where_clauses","quantified_where_clauses_data","intern_generic_arg_kinds","variable_kinds_data","intern_canonical_var_kinds","canonical_var_kinds_data","intern_constraints","constraints_data","debug_closure_id","debug_constraints","intern_variances","variances_data","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","code","message","display_source","as_any","is_experimental","code","message","display_source","as_any","is_experimental","code","message","display_source","as_any","push","remaining","fill_with_bound_vars","fill_with_unknown","fill","use_parent_substs","unit","fn_ptr","builtin","type_params_subst","subst_for_def","build","adt","fill_with_defaults","build","tuple","build","trait_ref","build","assoc_type_projection","build","build","def_ty","impl_self_ty","value_ty","method_resolution","field_resolution","variant_resolution_for_expr","variant_resolution_for_pat","assoc_resolutions_for_expr","assoc_resolutions_for_pat","type_mismatch_for_expr","add_diagnostics","new","with_debruijn","with_shifted_in","with_impl_trait_mode","with_type_param_mode","lower_ty","lower_ty_ext","krate","from_suffix","from_suffix","from_suffix","new","to_ty","to_lifetime","to_const","bound_within","shifted_in","shifted_in_from","shifted_out","shifted_out_to","index_if_innermost","index_if_bound_at","INNERMOST","ONE","new","depth","within","shifted_in","shift_in","shifted_in_from","shifted_out","shift_out","shifted_out_to"],"q":["hir_ty","hir_ty::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty","hir_ty::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty","hir_ty::display","","","","","","","","","","","","","","","","hir_ty::display::DisplayTarget","hir_ty::display","","","","","","","","","","","hir_ty","hir_ty::method_resolution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty","hir_ty::primitive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty","hir_ty::traits","","","","","","","hir_ty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::display","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::method_resolution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::primitive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::traits","","","","","","","","","","","","","","","","","","","","hir_ty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::primitive","hir_ty","","hir_ty::primitive","hir_ty","","hir_ty::primitive","hir_ty","","","","hir_ty::primitive","hir_ty","","","","","","hir_ty::primitive","","","","hir_ty","","","","","","","hir_ty::primitive","hir_ty","","","","","","hir_ty::primitive","hir_ty","hir_ty::primitive","","hir_ty","","","","","hir_ty::primitive","hir_ty","hir_ty::primitive","","hir_ty","","","","","","","","","","","","","","hir_ty::primitive","","hir_ty","","","hir_ty::primitive","","","hir_ty","","","","","","hir_ty::primitive","hir_ty","","","hir_ty::primitive","hir_ty","","","hir_ty::primitive","hir_ty","","hir_ty::primitive","","","","","","","","","","","","","","","","","","","hir_ty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::db","hir_ty","hir_ty::db","hir_ty","hir_ty::db","hir_ty::display","hir_ty","","","","","","hir_ty::db","","","","","","hir_ty::display","hir_ty::method_resolution","","hir_ty::traits","","hir_ty","","","","hir_ty::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::traits","hir_ty","hir_ty::db","hir_ty","","","","","","","","","","hir_ty::db","","","","","","","","","","","","hir_ty::method_resolution","","","","","","","hir_ty::traits","","","hir_ty","","","","","","","hir_ty::db","hir_ty","","","","","","","hir_ty::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::diagnostics","","","","","","","","","","","","","hir_ty::display","hir_ty::method_resolution","","","","hir_ty::traits","","hir_ty","","","hir_ty::diagnostics","","hir_ty::display","hir_ty","","","","","","hir_ty::db","","","","","","hir_ty::method_resolution","hir_ty::traits","","hir_ty","","hir_ty::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::primitive","","","hir_ty","","","","","","","","","","","","","","","","","","","","",""],"d":["The home of <code>HirDatabase</code>, which is the Salsa database …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This exists just for Chalk, because Chalk just has a …","Type inference-based diagnostics.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This expression is the whole method chain up to and …","The <code>HirDisplay</code> trait, which serves two purposes: Turning …","","","","","Returns a <code>Display</code>able type that is human-readable.","Returns a <code>Display</code>able type that is human-readable. Use …","Returns a <code>Display</code>able type that is human-readable and …","Returns a String representation of <code>self</code> that can be …","Returns a String representation of <code>self</code> for test purposes","","This allows using the <code>write!</code> macro directly with a …","","","","Display types for inlays, doc popups, autocompletion, etc…","Display types for inserting them in source files. The …","","Only for test purpose to keep real types","","","","","","Errors that can occur when generating source code","<code>FmtError</code> is required to be compatible with …","","","","This module is concerned with finding methods that a …","This is used as a key for indexing impls.","","","","","","","","","","","","","Creates a TyFingerprint for looking up an inherent impl. …","Creates a TyFingerprint for looking up a trait impl.","Trait impls defined or available in some crate.","Queries all trait impls for the given type.","Queries all impls of the given trait.","Queries all impls of <code>trait_</code> that may apply to <code>self_ty</code>.","","Inherent impls defined in some crate.","","","","Whether we’re looking up a dotted method call (like …","Looking up a method call like <code>v.len()</code>: We only consider …","Looking up a path like <code>Vec::new</code> or <code>Vec::default</code>: We …","","Returns the self type for the index trait call.","","","A few helper functions for dealing with primitives.","Different kinds of float types.","","","Different signed int types.","","","","","","","Different unsigned int types.","","","","","","","","","","Different signed int types.","","","","","","","Different unsigned int types.","","","","","","","","","","Trait solving using Chalk.","A set of clauses that we assume to be true. E.g. if we …","","","","","","","","This is a builder for <code>Ty</code> or anything that needs a …","","","","","","","","","","","","","","","If this is a <code>dyn Trait</code>, returns that trait.","","","FIXME: Get rid of this, it’s not a good abstraction","","","","","","","The result of type inference: A mapping from expressions …","","","","","Build the signature of a callable item (function, struct …","","","","","","<code>impl Trait</code> gets lowered into an opaque type that doesn’…","<code>impl Trait</code> gets lowered into a type variable. Used for …","<code>impl Trait</code> gets lowered into a variable that can unify …","<code>impl Trait</code> is disallowed and will be an error.","","","","","","","","Note: Conceptually, it’s thinkable that we could be in …","","","","","","","","","","","","","","","","","","","Returns an iterator over the whole super trait hierarchy …","This allows walking structures that contain types to do …","","The <code>Cast</code> trait is used to make annoying upcasts between …","Cast a value to type <code>U</code> using <code>CastTo</code>.","The id for an Abstract Data Type (i.e. structs, unions …","","Identifies a particular bound variable within a binder. …","Debruijn index, which identifies the binder.","Index within the binder.","References the binder at the given depth. The index is a …","Whether a type is mutable or not.","Mutable","Immutable","Whether a function is safe or not.","Safe","Unsafe","Types of scalar values.","","","","","","Represents some extra knowledge we may have about the …","","","","","","","","","","","","","","","","","","","","","A wrapper for the substs on a Fn.","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an index of a parameter in the generic type …","","A function signature as seen by type inference: Several …","A polymorphic function signature.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new bound variable.","Casts the bound variable to a type.","Wrap the bound variable in a lifetime.","Wraps the bound variable in a constant.","True if this variable is bound within the <code>amount</code> …","Adjusts the debruijn index (see [<code>DebruijnIndex::shifted_in</code>…","Adjusts the debruijn index (see [<code>DebruijnIndex::shifted_in</code>…","Adjusts the debruijn index (see [<code>DebruijnIndex::shifted_in</code>…","Adjusts the debruijn index (see [<code>DebruijnIndex::shifted_in</code>…","Return the index of the bound variable, but only if it is …","Return the index of the bound variable, but only if it is …","Innermost index.","One level higher than the innermost index.","Creates a new de Bruijn index with a given depth.","Depth of the De Bruijn index, counting from 0 starting …","True if the binder identified by this index is within the …","Returns the resulting index when this value is moved into …","Update this index in place by shifting it “in” through…","Adds <code>outer_binder</code> levels to the <code>self</code> index. Intuitively, …","Returns the resulting index when this value is moved out …","Update in place by shifting out from <code>amount</code> binders.","Subtracts <code>outer_binder</code> levels from the <code>self</code> index. …"],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2,0,3,3,0,4,4,0,5,5,0,6,6,0,7,7,0,8,8,0,9,9,0,10,10,0,11,11,0,12,12,0,13,13,0,14,14,0,15,15,0,16,16,0,17,17,0,18,18,0,19,19,0,20,20,0,21,21,0,22,22,0,23,23,0,24,24,0,25,25,0,26,26,0,27,27,0,28,28,0,29,29,0,30,30,0,31,31,0,32,32,0,33,33,0,34,34,0,35,35,0,36,36,0,37,37,0,38,38,0,39,39,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,42,42,42,42,0,43,43,43,43,0,44,44,44,0,45,45,45,0,46,46,0,47,47,0,48,48,0,49,49,49,49,0,50,50,50,0,51,51,51,51,51,51,51,51,51,0,52,52,52,52,52,52,0,53,53,0,0,54,0,55,55,55,55,55,55,54,54,54,54,0,56,56,57,56,0,58,58,58,0,59,59,0,0,0,0,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,61,61,61,61,0,62,62,0,0,63,63,0,0,0,0,0,0,64,64,0,65,65,65,65,65,65,0,66,66,66,66,66,66,0,67,67,0,68,68,68,68,68,68,0,69,69,69,69,69,69,0,0,0,0,0,70,0,71,71,71,71,0,0,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,73,73,0,74,0,0,75,75,0,0,0,0,76,76,76,0,77,77,77,77,0,78,78,78,0,79,79,79,79,0,80,80,80,80,80,80,0,0,0,0,0,0,0,0,0,0,0,0,81,0,82,0,83,0,84,84,0,0,85,85,0,86,86,0,87,87,87,87,87,0,88,88,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,90,90,90,0,91,91,0,0,0,0,92,92,92,92,92,92,92,75,75,75,75,75,75,75,75,75,75,93,93,93,93,93,93,93,93,93,93,79,79,79,79,79,79,79,77,77,77,77,77,77,77,77,77,77,76,76,76,76,76,76,76,76,76,76,78,78,78,78,78,78,78,78,78,78,80,80,80,80,80,80,80,80,80,80,94,94,94,94,94,94,94,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,32,32,32,32,32,32,32,33,33,33,33,33,33,33,34,34,34,34,34,34,34,35,35,35,35,35,35,35,36,36,36,36,36,36,36,37,37,37,37,37,37,37,38,38,38,38,38,38,38,39,39,39,39,39,39,39,40,40,40,40,40,40,40,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,41,41,41,41,41,41,41,42,42,42,42,42,42,42,43,43,43,43,43,43,43,44,44,44,44,44,44,44,45,45,45,45,45,45,45,46,46,46,46,46,46,46,47,47,47,47,47,47,47,48,48,48,48,48,48,48,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,53,53,53,53,53,53,53,54,54,54,54,54,54,54,56,56,56,56,56,56,56,56,56,58,58,58,58,58,58,58,59,59,59,59,59,59,59,101,101,101,101,101,101,101,101,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,83,83,83,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,102,102,102,102,102,102,102,102,102,102,102,102,102,102,85,85,85,85,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,103,103,103,103,103,103,103,103,103,103,66,88,83,64,89,86,65,87,102,84,85,65,84,86,85,102,87,83,66,64,64,65,89,87,84,88,86,85,83,66,102,102,86,89,87,85,66,83,65,64,102,102,85,89,89,65,86,66,64,88,87,87,83,83,84,84,83,89,85,87,85,89,87,66,65,102,86,83,64,65,64,102,87,84,85,86,88,66,83,89,86,65,84,87,102,66,83,85,64,67,68,69,69,68,67,68,67,69,68,67,69,67,69,68,69,68,67,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,105,105,106,104,107,105,108,109,110,111,106,112,90,113,89,105,107,109,114,84,104,90,106,112,115,116,117,118,76,76,76,78,78,78,78,78,78,80,80,80,80,80,80,100,119,98,120,99,59,75,93,77,76,78,80,95,96,97,98,99,100,56,60,63,70,71,90,91,103,75,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,70,93,100,75,75,93,77,76,76,78,78,80,80,95,95,96,96,97,97,98,98,99,99,100,100,60,60,61,61,62,62,63,70,70,71,90,90,91,91,103,103,93,100,75,93,79,77,76,78,80,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,95,96,97,98,99,100,41,42,43,44,45,46,47,48,49,50,51,52,53,58,60,61,62,63,70,71,90,91,103,50,51,101,75,75,93,76,78,80,95,96,97,98,99,100,60,70,71,91,103,2,3,3,4,5,5,6,7,8,9,10,11,11,12,13,14,14,15,16,17,30,31,32,33,34,35,36,37,38,39,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,95,95,96,96,97,97,98,98,99,99,100,100,90,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,49,52,52,52,52,52,53,53,53,53,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,75,75,75,75,75,75,75,75,79,79,79,79,79,79,79,76,67,68,69,84,84,84,84,84,84,84,84,84,84,84,102,102,102,102,102,102,102,102,102,102,102],"f":[null,null,[[["defwithbodyid",4]],[["inferenceresult",3],["arc",3]]],[[["defwithbodyid",4]],[["inferenceresult",3],["arc",3]]],[[["tydefid",4]],[["binders",6],["ty",6]]],[[["valuetydefid",4]],[["binders",6],["ty",6]]],[[["implid",3]],[["binders",6],["ty",6]]],[[["constparamid",3]],["ty",6]],[[["implid",3]],[["option",4],["binders",6]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["callabledefid",4]],["polyfnsig",6]],[[["functionid",3]],[["option",4],["arc",3]]],[[["typeparamid",3]],["arc",3]],[[["genericdefid",4]],["arc",3]],[[["genericdefid",4]],[["traitenvironment",3],["arc",3]]],[[["genericdefid",4]],["arc",3]],[[["crateid",3]],[["arc",3],["inherentimpls",3]]],[[["crateid",3]],[["arc",3],["traitimpls",3]]],[[["crateid",3]],[["arc",3],["traitimpls",3]]],[[["callabledefid",4]],["internedcallabledefid",3]],[[["internedcallabledefid",3]],["callabledefid",4]],[[["typeparamid",3]],["internedtypeparamid",3]],[[["internedtypeparamid",3]],["typeparamid",3]],[[["lifetimeparamid",3]],["internedlifetimeparamid",3]],[[["internedlifetimeparamid",3]],["lifetimeparamid",3]],[[["constparamid",3]],["internedconstparamid",3]],[[["internedconstparamid",3]],["constparamid",3]],[[["impltraitid",4]],["internedopaquetyid",3]],[[["internedopaquetyid",3]],["impltraitid",4]],[[],["internedclosureid",3]],[[["internedclosureid",3]]],[[["assoctypeid",3],["interner",3]],[["arc",3],["associatedtydatum",3]]],[[["traitid",3],["crateid",3],["interner",3]],[["traitdatum",3],["arc",3]]],[[["adtid",3],["crateid",3],["interner",3]],[["arc",3],["adtdatum",3]]],[[["implid",3],["crateid",3],["interner",3]],[["impldatum",3],["arc",3]]],[[["fndefid",6],["crateid",3]],[["fndefdatum",3],["arc",3]]],[[["fndefid",6],["crateid",3]],[["interner",3],["variances",3]]],[[["adtid",3],["crateid",3],["interner",3]],[["interner",3],["variances",3]]],[[["interner",3],["crateid",3],["associatedtyvalueid",3]],[["arc",3],["associatedtyvalue",3]]],[[["canonical",6],["inenvironment",6],["crateid",3]],[["option",4],["solution",6]]],[[["canonical",6],["inenvironment",6],["crateid",3]],[["option",4],["solution",6]]],[[["environment",3],["crateid",3],["interner",3]],[["programclauses",3],["interner",3]]],null,null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15]]],[[["databasekeyindex",3],["formatter",3],["hirdatabase",8]],["result",6]],[[["databasekeyindex",3],["revision",3],["hirdatabase",8]],["bool",15]],[[["fnmut",8],["runtime",3]]],null,null,null,null,null,null,null,[[["inferenceresult",3],["hirdatabase",8],["expr",4],["exprid",6]],["option",4]],[[["inferenceresult",3],["pat",4],["hirdatabase",8],["patid",6]],["option",4]],[[["hirdatabase",8],["diagnosticsink",3],["crateid",3],["moduledefid",4]]],[[["defwithbodyid",4],["diagnosticsink",3],["hirdatabase",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["usize",15],["hirdatabase",8],["option",4],["bool",15],["displaytarget",4]],["hirdisplaywrapper",3]],[[["hirdatabase",8]],["hirdisplaywrapper",3]],[[["usize",15],["hirdatabase",8],["option",4]],["hirdisplaywrapper",3]],[[["hirdatabase",8],["moduleid",3]],[["displaysourcecodeerror",4],["result",4],["string",3]]],[[["hirdatabase",8]],["hirdisplaywrapper",3]],[[["str",15]],[["hirdisplayerror",4],["result",4]]],[[["arguments",3]],[["hirdisplayerror",4],["result",4]]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirformatter",3],["str",15]],[["hirdisplayerror",4],["result",4]]],[[["visibility",4],["hirformatter",3],["moduleid",3]],[["hirdisplayerror",4],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ty",6]],[["tyfingerprint",4],["option",4]]],[[["ty",6]],[["tyfingerprint",4],["option",4]]],null,[[["tyfingerprint",4]]],[[["traitid",3]]],[[["traitid",3],["tyfingerprint",4]]],[[]],null,[[["ty",6]]],[[]],[[["ty",6],["crateid",3],["hirdatabase",8]],[["arrayvec",3],["option",4]]],null,null,null,[[["traitenvironment",3],["fxhashset",6],["hirdatabase",8],["option",4],["name",3],["option",4],["arc",3],["moduleid",3],["canonical",6],["lookupmode",4],["crateid",3]],["option",4]],[[["traitenvironment",3],["arc",3],["hirdatabase",8],["canonical",6],["traitid",3],["crateid",3]],[["canonical",6],["option",4]]],[[["traitenvironment",3],["arc",3],["hirdatabase",8],["canonical",6],["traitid",3],["crateid",3]],["bool",15]],[[["traitenvironment",3],["arc",3],["hirdatabase",8],["canonical",6],["traitid",3],["crateid",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["intty",4]],["str",15]],[[["uintty",4]],["str",15]],[[["floatty",4]],["str",15]],null,null,null,null,null,null,null,[[["crateid",3],["hirdatabase",8]],[["traitid",3],["option",4]]],[[["hirdatabase",8],["inenvironment",6],["canonical",6],["option",4],["crateid",3]]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],[["builtintype",4],["option",4]]],[[],[["option",4],["substitution",6]]],[[["hirdatabase",8]],[["functionid",3],["option",4]]],[[],["option",4]],[[],["option",4]],[[["hirdatabase",8]],[["option",4],["genericdefid",4]]],[[["hirdatabase",8]],[["option",4],["callabledefid",4]]],[[["hirdatabase",8]],[["option",4],["callablesig",3]]],[[],["ty",6]],[[],[["traitid",3],["option",4]]],[[["hirdatabase",8]],[["option",4],["vec",3]]],[[["hirdatabase",8]],[["traitid",3],["option",4]]],[[["ty",6]],["bool",15]],null,[[["hirdatabase",8]],["traitref",6]],[[["hirdatabase",8]],["traitid",3]],null,[[],["traitid",3]],[[["ty",6]],["bool",15]],null,null,null,null,[[["typens",4],["hirdatabase",8]],["option",4]],[[["callabledefid",4],["hirdatabase",8]],["polyfnsig",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["placeholderindex",6],["hirdatabase",8]],["constparamid",3]],[[["assoctypeid",6]],["typealiasid",3]],[[["chalktraitid",6]],["traitid",3]],[[["foreigndefid",6]],["typealiasid",3]],[[["placeholderindex",6],["hirdatabase",8]],["typeparamid",3]],[[["placeholderindex",6],["hirdatabase",8]],["lifetimeparamid",3]],[[["typealiasid",3]],["assoctypeid",6]],[[["traitid",3]],["chalktraitid",6]],[[["typealiasid",3]],["foreigndefid",6]],[[["typeparamid",3],["hirdatabase",8]],["placeholderindex",6]],[[["defdatabase",8],["traitid",3]],[["traitid",3],["vec",3]]],null,[[]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["substitution",6]],["substitution",6]],[[["typeparamid",3],["hirdatabase",8]],[["usize",15],["option",4]]],[[["hasinterner",8]],[["hasinterner",8],["canonical",6]]],null,null,[[["ty",6],["bool",15],["vec",3]],["callablesig",3]],[[["fnpointer",6]],["callablesig",3]],[[]],[[],["ty",6]],null,null,null,null,[[],["lifetime",6]],[[],["const",6]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]],[["result",4],["nosolution",3]]],[[],[["result",4],["nosolution",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]],[["result",4],["nosolution",3]]],[[],[["result",4],["nosolution",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]],[["result",4],["nosolution",3]]],[[],[["result",4],["nosolution",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]],[["result",4],["nosolution",3]]],[[],[["result",4],["nosolution",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]],[["result",4],["nosolution",3]]],[[],[["result",4],["nosolution",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]],[["result",4],["nosolution",3]]],[[],[["result",4],["nosolution",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]],[["result",4],["nosolution",3]]],[[],[["result",4],["nosolution",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]],[["result",4],["nosolution",3]]],[[],[["result",4],["nosolution",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]],[["result",4],["nosolution",3]]],[[],[["result",4],["nosolution",3]]],[[["unificationdatabase",8]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]],[["result",4],["nosolution",3]]],[[],[["result",4],["nosolution",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intty",4]],["ordering",4]],[[["boundvar",3]],["ordering",4]],[[["safety",4]],["ordering",4]],[[["mutability",4]],["ordering",4]],[[["debruijnindex",3]],["ordering",4]],[[["scalar",4]],["ordering",4]],[[["adtid",3]],["ordering",4]],[[["uintty",4]],["ordering",4]],[[["floatty",4]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[["folder",8],["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["folder",8],["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["folder",8],["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[["debruijnindex",3]],["bool",15]],[[["debruijnindex",3]],["bool",15]],[[["mutability",4]],["bool",15]],[[["fnsubst",3]],["bool",15]],[[["fnsubst",3]],["bool",15]],[[["intty",4]],["bool",15]],[[["safety",4]],["bool",15]],[[["uintty",4]],["bool",15]],[[["floatty",4]],["bool",15]],[[["tyvariablekind",4]],["bool",15]],[[["scalar",4]],["bool",15]],[[["scalar",4]],["bool",15]],[[["adtid",3]],["bool",15]],[[["adtid",3]],["bool",15]],[[["boundvar",3]],["bool",15]],[[["boundvar",3]],["bool",15]],[[["variance",4],["adtid",3]],[["result",4],["nosolution",3]]],[[["fnsubst",3],["variance",4]],[["result",4],["nosolution",3]]],[[["variance",4],["mutability",4]],[["result",4],["nosolution",3]]],[[["variance",4],["scalar",4]],[["result",4],["nosolution",3]]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[],["intty",4]],[[],["floatty",4]],[[],["debruijnindex",3]],[[],["scalar",4]],[[],["boundvar",3]],[[],["mutability",4]],[[],["safety",4]],[[],["tyvariablekind",4]],[[],["uintty",4]],[[],["adtid",3]],[[],["fnsubst",3]],[[["safety",4]],[["ordering",4],["option",4]]],[[["intty",4]],[["ordering",4],["option",4]]],[[["boundvar",3]],[["ordering",4],["option",4]]],[[["scalar",4]],[["ordering",4],["option",4]]],[[["debruijnindex",3]],[["ordering",4],["option",4]]],[[["uintty",4]],[["ordering",4],["option",4]]],[[["adtid",3]],[["ordering",4],["option",4]]],[[["mutability",4]],[["ordering",4],["option",4]]],[[["floatty",4]],[["ordering",4],["option",4]]],[[]],[[]],[[]],[[["builtinuint",4]],["ordering",4]],[[["builtinint",4]],["ordering",4]],[[["builtinfloat",4]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["builtinint",4]],["bool",15]],[[["builtinfloat",4]],["bool",15]],[[["builtinuint",4]],["bool",15]],[[],["builtinfloat",4]],[[],["builtinuint",4]],[[],["builtinint",4]],[[["builtinuint",4]],[["ordering",4],["option",4]]],[[["builtinint",4]],[["ordering",4],["option",4]]],[[["builtinfloat",4]],[["ordering",4],["option",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],[["builtintype",4],["option",4]]],[[],[["option",4],["substitution",6]]],[[["hirdatabase",8]],[["functionid",3],["option",4]]],[[],["option",4]],[[],["option",4]],[[["hirdatabase",8]],[["option",4],["genericdefid",4]]],[[["hirdatabase",8]],[["option",4],["callabledefid",4]]],[[["hirdatabase",8]],[["option",4],["callablesig",3]]],[[],[["traitid",3],["option",4]]],[[],["ty",6]],[[["hirdatabase",8]],[["option",4],["vec",3]]],[[["hirdatabase",8]],[["traitid",3],["option",4]]],[[["ty",6]],["bool",15]],[[["hirdatabase",8]],["traitref",6]],[[["hirdatabase",8]],["traitid",3]],[[],["traitid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["functionid",3]],["callabledefid",4]],[[["structid",3]],["callabledefid",4]],[[["enumvariantid",3]],["callabledefid",4]],[[["builtintype",4]],["tydefid",4]],[[["adtid",4]],["tydefid",4]],[[["structid",3]],["tydefid",4]],[[["enumid",3]],["tydefid",4]],[[["unionid",3]],["tydefid",4]],[[["typealiasid",3]],["tydefid",4]],[[["functionid",3]],["valuetydefid",4]],[[["structid",3]],["valuetydefid",4]],[[["unionid",3]],["valuetydefid",4]],[[["enumvariantid",3]],["valuetydefid",4]],[[["constid",3]],["valuetydefid",4]],[[["staticid",3]],["valuetydefid",4]],[[["fndefid",6]]],[[["internedcallabledefid",3]]],[[["opaquetyid",6]]],[[["internedopaquetyid",3]]],[[["closureid",3],["interner",3]]],[[["error",3]]],[[],["inferenceresult",3]],[[],["interner",3]],[[],["impltraitloweringmode",4]],[[],["callabledefid",4]],[[],["tydefid",4]],[[],["valuetydefid",4]],[[],["internedtypeparamid",3]],[[],["internedlifetimeparamid",3]],[[],["internedconstparamid",3]],[[],["internedopaquetyid",3]],[[],["internedclosureid",3]],[[],["internedcallabledefid",3]],[[],["displaytarget",4]],[[],["tyfingerprint",4]],[[],["lookupmode",4]],[[],["traitenvironment",3]],[[],["fntrait",4]],[[],["callablesig",3]],[[],["impltraitid",4]],[[],["returntypeimpltraits",3]],[[],["inferenceresult",3]],[[],["inferqueryquery",3]],[[],["tyquery",3]],[[],["valuetyquery",3]],[[],["implselftyquery",3]],[[],["constparamtyquery",3]],[[],["impltraitquery",3]],[[],["fieldtypesquery",3]],[[],["callableitemsignaturequery",3]],[[],["returntypeimpltraitsquery",3]],[[],["genericpredicatesforparamquery",3]],[[],["genericpredicatesquery",3]],[[],["traitenvironmentquery",3]],[[],["genericdefaultsquery",3]],[[],["inherentimplsincratequery",3]],[[],["traitimplsincratequery",3]],[[],["traitimplsindepsquery",3]],[[],["interncallabledefquery",3]],[[],["interncallabledeflookupquery",3]],[[],["interntypeparamidquery",3]],[[],["interntypeparamidlookupquery",3]],[[],["internlifetimeparamidquery",3]],[[],["internlifetimeparamidlookupquery",3]],[[],["internconstparamidquery",3]],[[],["internconstparamidlookupquery",3]],[[],["internimpltraitidquery",3]],[[],["internimpltraitidlookupquery",3]],[[],["internclosurequery",3]],[[],["internclosurelookupquery",3]],[[],["associatedtydataquery",3]],[[],["traitdatumquery",3]],[[],["structdatumquery",3]],[[],["impldatumquery",3]],[[],["fndefdatumquery",3]],[[],["fndefvariancequery",3]],[[],["adtvariancequery",3]],[[],["associatedtyvaluequery",3]],[[],["traitsolvequeryquery",3]],[[],["programclausesforchalkenvquery",3]],[[]],[[["interner",3]],["ordering",4]],[[["internedcallabledefid",3]],["ordering",4]],[[["inferenceresult",3]],["bool",15]],[[["inferenceresult",3]],["bool",15]],[[["interner",3]],["bool",15]],[[["impltraitloweringmode",4]],["bool",15]],[[["callabledefid",4]],["bool",15]],[[["callabledefid",4]],["bool",15]],[[["tydefid",4]],["bool",15]],[[["tydefid",4]],["bool",15]],[[["valuetydefid",4]],["bool",15]],[[["valuetydefid",4]],["bool",15]],[[["internedtypeparamid",3]],["bool",15]],[[["internedtypeparamid",3]],["bool",15]],[[["internedlifetimeparamid",3]],["bool",15]],[[["internedlifetimeparamid",3]],["bool",15]],[[["internedconstparamid",3]],["bool",15]],[[["internedconstparamid",3]],["bool",15]],[[["internedopaquetyid",3]],["bool",15]],[[["internedopaquetyid",3]],["bool",15]],[[["internedclosureid",3]],["bool",15]],[[["internedclosureid",3]],["bool",15]],[[["internedcallabledefid",3]],["bool",15]],[[["internedcallabledefid",3]],["bool",15]],[[["tyfingerprint",4]],["bool",15]],[[["tyfingerprint",4]],["bool",15]],[[["traitimpls",3]],["bool",15]],[[["traitimpls",3]],["bool",15]],[[["inherentimpls",3]],["bool",15]],[[["inherentimpls",3]],["bool",15]],[[["lookupmode",4]],["bool",15]],[[["traitenvironment",3]],["bool",15]],[[["traitenvironment",3]],["bool",15]],[[["fntrait",4]],["bool",15]],[[["callablesig",3]],["bool",15]],[[["callablesig",3]],["bool",15]],[[["impltraitid",4]],["bool",15]],[[["impltraitid",4]],["bool",15]],[[["returntypeimpltraits",3]],["bool",15]],[[["returntypeimpltraits",3]],["bool",15]],[[["interner",3]],[["ordering",4],["option",4]]],[[["internedcallabledefid",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["exprid",6]],["ty",6]],[[["patid",6]],["ty",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["internid",3]]],[[],["internid",3]],[[["debruijnindex",3],["folder",8]],["fallible",6]],[[["adtid",3],["formatter",3],["interner",3]],[["option",4],["result",6]]],[[["formatter",3],["traitid",3],["interner",3]],[["option",4],["result",6]]],[[["assoctypeid",3],["formatter",3],["interner",3]],[["option",4],["result",6]]],[[["aliasty",4],["formatter",3]],[["option",4],["result",6]]],[[["projectionty",3],["formatter",3]],[["option",4],["result",6]]],[[["opaquety",3],["formatter",3]],[["option",4],["result",6]]],[[["formatter",3],["opaquetyid",3]],[["option",4],["result",6]]],[[["ty",3],["formatter",3]],[["option",4],["result",6]]],[[["lifetime",3],["formatter",3]],[["option",4],["result",6]]],[[["genericarg",6],["formatter",3]],[["option",4],["result",6]]],[[["goal",3],["formatter",3]],[["option",4],["result",6]]],[[["formatter",3],["goals",3]],[["option",4],["result",6]]],[[["programclauseimplication",3],["formatter",3]],[["option",4],["result",6]]],[[["formatter",3],["substitution",3]],[["option",4],["result",6]]],[[["separatortraitref",3],["formatter",3]],[["option",4],["result",6]]],[[["formatter",3],["fndefid",3]],[["option",4],["result",6]]],[[["formatter",3],["const",3]],[["option",4],["result",6]]],[[["formatter",3],["variablekinds",3]],[["option",4],["result",6]]],[[["formatter",3],["variablekinds",3]],[["option",4],["result",6]]],[[["canonicalvarkinds",3],["formatter",3]],[["option",4],["result",6]]],[[["programclause",3],["formatter",3]],[["option",4],["result",6]]],[[["programclauses",3],["formatter",3]],[["option",4],["result",6]]],[[["quantifiedwhereclauses",3],["formatter",3]],[["option",4],["result",6]]],[[["tykind",4]]],[[],["tydata",3]],[[["lifetimedata",4]]],[[],["lifetimedata",4]],[[["constdata",3]]],[[],["constdata",3]],[[],["bool",15]],[[["genericargdata",4]]],[[],["genericargdata",4]],[[["goaldata",4]]],[[],["result",4]],[[],["goaldata",4]],[[]],[[],["result",4]],[[]],[[["programclausedata",3]]],[[],["programclausedata",3]],[[],["result",4]],[[]],[[],["result",4]],[[]],[[],["result",4]],[[]],[[],["result",4]],[[]],[[],["result",4]],[[]],[[["closureid",3],["formatter",3]],[["option",4],["result",6]]],[[["constraints",3],["formatter",3]],[["option",4],["result",6]]],[[],["result",4]],[[]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["bool",15]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[],["bool",15]],[[],["diagnosticcode",3]],[[],["string",3]],[[],[["infile",3],["syntaxnodeptr",3]]],[[],["any",8]],[[]],[[],["usize",15]],[[["usize",15],["debruijnindex",3]]],[[]],[[]],[[["substitution",6]]],[[],["ty",6]],[[["callablesig",3]],["ty",6]],[[["builtintype",4]],["ty",6]],[[["hirdatabase",8]],["substitution",6]],[[["hirdatabase",8]],["tybuilder",3]],[[],["substitution",6]],[[["adtid",4],["hirdatabase",8]],[["adtid",4],["tybuilder",3]]],[[["hirdatabase",8]]],[[],["ty",6]],[[["usize",15]],[["tuple",3],["tybuilder",3]]],[[],["ty",6]],[[["traitid",3],["hirdatabase",8]],[["traitid",3],["tybuilder",3]]],[[],["traitref",6]],[[["typealiasid",3],["hirdatabase",8]],[["tybuilder",3],["typealiasid",3]]],[[],["projectionty",6]],[[]],[[["tydefid",4],["hirdatabase",8]],[["binders",6],["tybuilder",3]]],[[["implid",3],["hirdatabase",8]],[["binders",6],["tybuilder",3]]],[[["valuetydefid",4],["hirdatabase",8]],[["binders",6],["tybuilder",3]]],[[["exprid",6]],[["functionid",3],["option",4]]],[[["exprid",6]],[["option",4],["fieldid",3]]],[[["exprid",6]],[["variantid",4],["option",4]]],[[["patid",6]],[["variantid",4],["option",4]]],[[["exprid",6]],[["option",4],["associtemid",4]]],[[["patid",6]],[["option",4],["associtemid",4]]],[[["exprid",6]],[["typemismatch",3],["option",4]]],[[["defwithbodyid",4],["diagnosticsink",3],["hirdatabase",8]]],[[["resolver",3],["hirdatabase",8]]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["impltraitloweringmode",4]]],[[["typeparamloweringmode",4]]],[[["typeref",4]],["ty",6]],[[["typeref",4]]],[[["hirdatabase",8]],["crateid",3]],[[["str",15]],[["builtinfloat",4],["option",4]]],[[["str",15]],[["builtinint",4],["option",4]]],[[["str",15]],[["option",4],["builtinuint",4]]],[[["usize",15],["debruijnindex",3]],["boundvar",3]],[[],["ty",3]],[[],["lifetime",3]],[[["ty",3]],["const",3]],[[["debruijnindex",3]],["bool",15]],[[],["boundvar",3]],[[["debruijnindex",3]],["boundvar",3]],[[],[["boundvar",3],["option",4]]],[[["debruijnindex",3]],[["boundvar",3],["option",4]]],[[],[["option",4],["usize",15]]],[[["debruijnindex",3]],[["option",4],["usize",15]]],null,null,[[["u32",15]],["debruijnindex",3]],[[],["u32",15]],[[["debruijnindex",3]],["bool",15]],[[],["debruijnindex",3]],[[]],[[["debruijnindex",3]],["debruijnindex",3]],[[],[["option",4],["debruijnindex",3]]],[[]],[[["debruijnindex",3]],[["option",4],["debruijnindex",3]]]],"p":[[8,"HirDatabase"],[3,"InferQueryQuery"],[3,"TyQuery"],[3,"ValueTyQuery"],[3,"ImplSelfTyQuery"],[3,"ConstParamTyQuery"],[3,"ImplTraitQuery"],[3,"FieldTypesQuery"],[3,"CallableItemSignatureQuery"],[3,"ReturnTypeImplTraitsQuery"],[3,"GenericPredicatesForParamQuery"],[3,"GenericPredicatesQuery"],[3,"TraitEnvironmentQuery"],[3,"GenericDefaultsQuery"],[3,"InherentImplsInCrateQuery"],[3,"TraitImplsInCrateQuery"],[3,"TraitImplsInDepsQuery"],[3,"InternCallableDefQuery"],[3,"InternCallableDefLookupQuery"],[3,"InternTypeParamIdQuery"],[3,"InternTypeParamIdLookupQuery"],[3,"InternLifetimeParamIdQuery"],[3,"InternLifetimeParamIdLookupQuery"],[3,"InternConstParamIdQuery"],[3,"InternConstParamIdLookupQuery"],[3,"InternImplTraitIdQuery"],[3,"InternImplTraitIdLookupQuery"],[3,"InternClosureQuery"],[3,"InternClosureLookupQuery"],[3,"AssociatedTyDataQuery"],[3,"TraitDatumQuery"],[3,"StructDatumQuery"],[3,"ImplDatumQuery"],[3,"FnDefDatumQuery"],[3,"FnDefVarianceQuery"],[3,"AdtVarianceQuery"],[3,"AssociatedTyValueQuery"],[3,"TraitSolveQueryQuery"],[3,"ProgramClausesForChalkEnvQuery"],[3,"HirDatabaseGroupStorage__"],[3,"NoSuchField"],[3,"MissingFields"],[3,"MissingPatFields"],[3,"MissingMatchArms"],[3,"MissingOkOrSomeInTailExpr"],[3,"RemoveThisSemicolon"],[3,"BreakOutsideOfLoop"],[3,"MissingUnsafe"],[3,"MismatchedArgCount"],[4,"CaseType"],[4,"IdentType"],[3,"IncorrectCase"],[3,"ReplaceFilterMapNextWithFindMap"],[3,"HirFormatter"],[8,"HirDisplay"],[4,"DisplayTarget"],[13,"SourceCode"],[4,"DisplaySourceCodeError"],[4,"HirDisplayError"],[4,"TyFingerprint"],[3,"TraitImpls"],[3,"InherentImpls"],[4,"LookupMode"],[4,"FloatTy"],[4,"IntTy"],[4,"UintTy"],[4,"BuiltinFloat"],[4,"BuiltinInt"],[4,"BuiltinUint"],[3,"TraitEnvironment"],[4,"FnTrait"],[8,"TyExt"],[8,"ProjectionTyExt"],[8,"TraitRefExt"],[3,"InferenceResult"],[4,"CallableDefId"],[4,"ImplTraitLoweringMode"],[4,"TyDefId"],[3,"TyLoweringContext"],[4,"ValueTyDefId"],[8,"TypeWalk"],[8,"Cast"],[3,"AdtId"],[3,"BoundVar"],[4,"Mutability"],[4,"Safety"],[4,"Scalar"],[4,"TyVariableKind"],[3,"FnSubst"],[3,"CallableSig"],[4,"ImplTraitId"],[3,"TyBuilder"],[3,"Interner"],[3,"HirDatabaseStorage"],[3,"InternedTypeParamId"],[3,"InternedLifetimeParamId"],[3,"InternedConstParamId"],[3,"InternedOpaqueTyId"],[3,"InternedClosureId"],[3,"InternedCallableDefId"],[3,"HirDisplayWrapper"],[3,"DebruijnIndex"],[3,"ReturnTypeImplTraits"],[6,"Ty"],[6,"ProjectionTy"],[6,"TraitRef"],[6,"OpaqueTy"],[6,"AliasTy"],[6,"GenericArg"],[6,"Substitution"],[6,"Binders"],[6,"WhereClause"],[6,"AliasEq"],[6,"Const"],[6,"LifetimeOutlives"],[6,"Lifetime"],[6,"LifetimeData"],[6,"DomainGoal"],[6,"FnDefId"],[6,"OpaqueTyId"]]},\
"ide":{"doc":"ide crate provides “ide-centric” APIs for the …","t":[3,12,12,3,12,12,12,12,12,12,12,4,13,12,12,13,12,12,13,12,12,3,12,12,3,12,12,12,12,12,12,3,12,12,4,13,13,3,12,12,12,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,4,13,13,3,12,12,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,3,12,12,12,12,12,12,3,12,12,3,12,12,3,12,12,12,3,12,12,12,12,4,13,13,13,3,4,13,13,4,13,13,12,12,12,13,3,3,12,12,3,12,12,12,4,13,12,12,13,12,13,12,13,12,13,4,13,13,3,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,3,3,12,3,12,12,12,12,12,3,12,12,12,3,12,12,4,13,13,13,13,13,13,13,4,13,13,13,3,12,12,3,12,12,12,12,12,12,3,4,13,13,13,13,13,13,13,13,3,12,12,12,3,12,12,4,13,13,3,3,12,12,12,3,3,12,4,13,13,13,3,12,3,12,12,3,12,12,3,12,3,12,3,12,12,12,3,3,12,12,3,12,12,3,4,13,13,3,4,13,12,12,13,12,12,3,12,12,12,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,12,12,3,6,3,12,12,11,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Annotation","range","kind","AnnotationConfig","binary_target","annotate_runnables","annotate_impls","annotate_references","annotate_method_references","run","debug","AnnotationKind","Runnable","debug","runnable","HasImpls","position","data","HasReferences","position","data","CallItem","target","ranges","Diagnostic","message","range","severity","fix","unused","code","DiagnosticsConfig","disable_experimental","disabled","Severity","Error","WeakWarning","NavigationTarget","file_id","full_range","focus_range","name","kind","container_name","description","docs","ExpandedMacro","name","expansion","StructureNode","parent","label","navigation_range","node_range","kind","detail","deprecated","StructureNodeKind","SymbolKind","Region","Fold","range","kind","FoldKind","Comment","Imports","Mods","Block","ArgList","Region","Consts","Statics","Array","WhereClause","HoverAction","Runnable","Implementation","GoToType","HoverConfig","implementations","run","debug","goto_type_def","links_in_hover","markdown","HoverGotoTypeData","mod_path","nav","HoverResult","markup","actions","InlayHint","range","kind","label","InlayHintsConfig","type_hints","parameter_hints","chaining_hints","max_length","InlayKind","TypeHint","ParameterHint","ChainingHint","Markup","Direction","Up","Down","PrimeCachesProgress","Started","StartedOnCrate","on_crate","n_done","n_total","Finished","RenameError","ReferenceSearchResult","declaration","references","Runnable","nav","kind","cfg","RunnableKind","Test","test_id","attr","TestMod","path","Bench","test_id","DocTest","test_id","Bin","TestId","Name","Path","Highlight","tag","mods","HlMod","Associated","Attribute","Callable","Consuming","ControlFlow","Definition","Documentation","Injected","IntraDocLink","Mutable","Static","Trait","Unsafe","HlMods","HlOperator","Bitwise","Arithmetic","Logical","Comparison","Other","HlPunct","Bracket","Brace","Parenthesis","Angle","Comma","Dot","Colon","Semi","Other","HlTag","Symbol","Attribute","BoolLiteral","BuiltinType","ByteLiteral","CharLiteral","Comment","EscapeSequence","FormatSpecifier","Keyword","NumericLiteral","Operator","Punctuation","StringLiteral","UnresolvedReference","None","HlRange","range","highlight","binding_hash","Documentation","Semantics","db","Assist","id","label","group","target","source_change","AssistConfig","snippet_cap","allowed","insert_use","AssistId","0","1","AssistKind","None","QuickFix","Generate","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","AssistResolveStrategy","None","All","Single","SingleResolve","assist_id","assist_kind","CompletionConfig","enable_postfix_completions","enable_imports_on_the_fly","add_call_parenthesis","add_call_argument_snippets","snippet_cap","insert_use","CompletionItem","CompletionItemKind","SymbolKind","Attribute","Binding","BuiltinType","Keyword","Method","Snippet","UnresolvedReference","CompletionRelevance","exact_name_match","type_match","is_local","ImportEdit","import","scope","InsertTextFormat","PlainText","Snippet","Canceled","Change","roots","files_changed","crate_graph","CrateGraph","CrateId","0","Edition","Edition2015","Edition2018","Edition2021","FileId","0","FilePosition","file_id","offset","FileRange","file_id","range","SourceRoot","is_library","SourceRootId","0","CallInfo","doc","signature","active_parameter","Label","LineCol","line","col","LineColUtf16","line","col","LineIndex","ReferenceAccess","Read","Write","SearchScope","FileSystemEdit","CreateFile","dst","initial_contents","MoveFile","src","dst","SourceChange","source_file_edits","file_system_edits","is_snippet","Query","RootDatabase","SymbolKind","Const","ConstParam","Enum","Field","Function","Impl","Label","LifetimeParam","Local","Macro","Module","SelfParam","Static","Struct","Trait","TypeAlias","TypeParam","Union","ValueParam","Variant","SsrError","TextRange","TextSize","Indel","insert","delete","TextEdit","Cancelable","RangeInfo","range","info","new","AnalysisHost","new","update_lru_capacity","analysis","apply_change","collect_garbage","per_query_memory_usage","request_cancellation","raw_database","raw_database_mut","Analysis","from_single_file","status","prime_caches","file_text","parse","is_library_file","file_line_index","extend_selection","matching_brace","syntax_tree","view_hir","view_crate_graph","expand_macro","join_lines","on_enter","on_char_typed","file_structure","inlay_hints","folding_ranges","symbol_search","goto_definition","goto_implementation","goto_type_definition","find_all_refs","find_all_methods","hover","external_docs","call_info","call_hierarchy","incoming_calls","outgoing_calls","parent_module","crate_for","crate_edition","crate_root","runnables","related_tests","highlight","highlight_range","highlight_as_html","completions","resolve_completion_edits","assists","diagnostics","assists_with_fixes","rename","prepare_rename","will_rename_file","structural_search_replace","annotations","resolve_annotation","move_item","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","infer","infer_query","ty","value_ty","impl_self_ty","const_param_ty","impl_trait","field_types","callable_item_signature","return_type_impl_traits","generic_predicates_for_param","generic_predicates","trait_environment","generic_defaults","inherent_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","intern_callable_def","lookup_intern_callable_def","intern_type_param_id","lookup_intern_type_param_id","intern_lifetime_param_id","lookup_intern_lifetime_param_id","intern_const_param_id","lookup_intern_const_param_id","intern_impl_trait_id","lookup_intern_impl_trait_id","intern_closure","lookup_intern_closure","associated_ty_data","trait_datum","struct_datum","impl_datum","fn_def_datum","fn_def_variance","adt_variance","associated_ty_value","trait_solve","trait_solve_query","program_clauses_for_chalk_env","file_item_tree","crate_def_map","crate_def_map_query","block_def_map","struct_data","union_data","enum_data","impl_data","trait_data","type_alias_data","function_data","const_data","static_data","body_with_source_map","body","expr_scopes","generic_params","variants_attrs","fields_attrs","variants_attrs_source_map","fields_attrs_source_map","attrs","crate_lang_items","lang_item","import_map","field_visibilities","function_visibility","ast_id_map","parse_or_expand","parse_macro_expansion","intern_macro","lookup_intern_macro","intern_eager_expansion","lookup_intern_eager_expansion","macro_arg","macro_arg_text","macro_def","macro_expand","expand_proc_macro","macro_expand_error","hygiene_frame","intern_function","lookup_intern_function","intern_struct","lookup_intern_struct","intern_union","lookup_intern_union","intern_enum","lookup_intern_enum","intern_const","lookup_intern_const","intern_static","lookup_intern_static","intern_trait","lookup_intern_trait","intern_type_alias","lookup_intern_type_alias","intern_impl","lookup_intern_impl","intern_block","lookup_intern_block","file_text","set_file_text","set_file_text_with_durability","file_source_root","set_file_source_root","set_file_source_root_with_durability","source_root","set_source_root","set_source_root_with_durability","source_root_crates","check_canceled","parse","crate_graph","set_crate_graph","set_crate_graph_with_durability","file_symbols","library_symbols","local_roots","set_local_roots","set_local_roots_with_durability","library_roots","set_library_roots","set_library_roots_with_durability","line_index","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","fmt","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","hash","hash","hash","hash","from_str","index","fmt","fmt","clone","clone","clone","clone","clone","clone","clone","clone","default","default","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","add_assign","add","add","add","add","sub","sub","sub","sub","hash","hash","from","add_assign","add_assign","eq","ne","eq","ne","cmp","start_bound","end_bound","default","default","sum","clone","clone","try_from","sub_assign","sub_assign","partial_cmp","fmt","fmt","into_iter","default","fmt","fmt","clone","clone","cmp","clone","hash","partial_cmp","eq","ne","fmt","from","hash","fmt","eq","ne","clone","upcast","upcast","upcast","extend","into_iter","hash","hash","hash","from","from","file_text","resolve_path","relevant_crates","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","cmp","fmt","snapshot","on_propagated_panic","salsa_event","clone","clone","clone","clone","clone","clone","clone","clone","default","default","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from_str","clone","clone","clone","clone","eq","ne","eq","ne","eq","fmt","fmt","fmt","fmt","fmt","fmt","default","clone","clone","clone","clone","clone","clone","from","eq","ne","eq","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","ne","fmt","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","bitor","bitor","bitor_assign","bitor_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","as_str","fenced_block","focus_or_full_range","NO_ACTIONS","any","none","runnable","label","action","is_empty","contains","iter","as_str","new","parse","expand","speculative_expand","descend_into_macros","descend_node_at_offset","original_range","diagnostics_display_range","token_ancestors_with_macros","ancestors_with_macros","ancestors_at_offset_with_macros","find_node_at_offset_with_macros","find_node_at_offset_with_descend","resolve_lifetime_param","resolve_label","resolve_type","type_of_expr","type_of_pat","type_of_self","resolve_method_call","resolve_method_call_as_callable","resolve_field","resolve_record_field","resolve_record_pat_field","resolve_macro_call","resolve_path","resolve_extern_crate","resolve_variant","resolve_bind_pat_to_const","record_literal_missing_fields","record_pattern_missing_fields","to_def","to_module_def","to_module_defs","scope","scope_at_offset","scope_for_def","assert_contains_node","is_unsafe_method_call","is_unsafe_ref_expr","is_unsafe_ident_pat","get","contains","name","should_resolve","label","source_range","insert_text_format","text_edit","detail","documentation","lookup","kind","deprecated","relevance","trigger_call_info","ref_match","import_to_add","score","is_relevant","to_text_edit","throw","new","set_roots","change_file","set_crate_graph","apply","add_crate_root","add_dep","is_empty","iter","transitive_deps","transitive_rev_deps","crates_in_topological_order","crate_id_for_crate_root","extend","patch_cfg_if","shift","new_local","new_library","path_for_file","file_for_path","iter","parameter_labels","parameter_ranges","new","new","line_col","offset","to_utf16","to_utf8","lines","empty","single_file","file_range","files","intersection","from_edits","from_text_edit","insert_source_edit","push_file_system_edit","get_source_edit","new","only_types","libs","exact","case_sensitive","limit","request_cancellation","apply_change","collect_garbage","per_query_memory_usage","new","update_lru_capacity","new","at","empty","up_to","start","end","len","is_empty","contains","contains_inclusive","contains_range","intersect","cover","cover_offset","checked_add","checked_sub","ordering","of","checked_add","checked_sub","insert","delete","replace","apply","builder","insert","delete","replace","len","is_empty","iter","apply","union","apply_to_offset"],"q":["ide","","","","","","","","","","","","","ide::AnnotationKind","","ide","ide::AnnotationKind","","ide","ide::AnnotationKind","","ide","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide::PrimeCachesProgress","","","ide","","","","","","","","","","","ide::RunnableKind","","ide","ide::RunnableKind","ide","ide::RunnableKind","ide","ide::RunnableKind","ide","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide::FileSystemEdit","","ide","ide::FileSystemEdit","","ided":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>NavigationTarget</code> represents an element in the editor’s …","","Range which encompasses the whole element.","A “most interesting” range within the <code>full_range</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the results when hovering over an item","","","","","","","","","","","","","","","","","","","","","","We started indexing a crate.","","","","We finished indexing all crates.","","","","","","","","","","","","","","","","","","","","","","","","","","","Used for items in traits and impls.","Used to differentiate individual elements within …","Callable item or value.","Value that is being consumed in a function call","Used with keywords like <code>if</code> and <code>break</code>.","<code>foo</code> in <code>fn foo(x: i32)</code> is a definition, <code>foo</code> in <code>foo(90 + 2)</code> …","Doc-strings like this one.","Highlighting injection like rust code in doc strings or …","Used for intra doc links in doc injection.","Mutable binding.","Used for associated functions.","Used for items in traits and trait impls.","Used for unsafe functions, mutable statics, union …","","","|, &, !, ^, |=, &=, ^=","+, -, *, /, +=, -=, *=, /=","&&, ||, !",", <, ==, >=, <=, !=","","","[]","{}","()","<>",",",".",":",";","","","","","","","","","","","","","","","","","","","","","","","Holds documentation","Primary API to get semantic information, like types, from …","","","","Short description of the assist, as shown in the UI.","","Target ranges are used to sort assists: the smaller the …","Computing source change sometimes is much more costly …","","","","","Unique identifier of the assist, should not be shown to …","","","","","","","","","","","A way to control how many asssist to resolve during the …","No assists should be resolved.","All assists should be resolved.","Only a certain assist should be resolved.","Hold the [<code>AssistId</code>] data of a certain assist to resolve. …","The id of the assist.","","","","","","","","","<code>CompletionItem</code> describes a single completion variant in …","","","","","","","","","","","This is set in cases like these:","See CompletionRelevanceTypeMatch doc comments for cases …","This is set in cases like these:","An extra import to add after the completion is applied.","","","","","","An “error” signifying that the operation was canceled.","Encapsulate a bunch of raw <code>.set</code> calls on the database.","","","","<code>CrateGraph</code> is a bit of information which turns a set of …","","","","","","","Handle to a file in [<code>Vfs</code>]","","","","","","","","","Sysroot or crates.io library.","Files are grouped into source roots. A source root is a …","","Contains information about a call site. Specifically the …","","","","A type to specify UI label, like an entry in the list of …","","Zero-based","Zero-based utf8 offset","","Zero-based","Zero-based","","","","","Generally, <code>search_scope</code> returns files that might contain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A range in text, represented as a pair of [<code>TextSize</code>][…","A measure of text length. Also, equivalently, an index …","<code>InsertDelete</code> – a single “atomic” change to text","","Refers to offsets in the original text","","","Info associated with a text range.","","","","<code>AnalysisHost</code> stores the current state of the world.","","","Returns a snapshot of the current state, which you can …","Applies changes to the current state of the world. If …","","NB: this clears the database","","","","Analysis is a snapshot of a world state at a moment in …","","Debug info about the current state of the analysis.","","Gets the text of the source file.","Gets the syntax tree of the file.","Returns true if this file belongs to an immutable library.","Gets the file’s <code>LineIndex</code>: data structure to convert …","Selects the next syntactic nodes encompassing the range.","Returns position of the matching brace (all types of …","Returns a syntax tree represented as <code>String</code>, for debug …","","Renders the crate graph to GraphViz “dot” syntax.","","Returns an edit to remove all newlines in the range, …","Returns an edit which should be applied when opening a …","Returns an edit which should be applied after a character …","Returns a tree representation of symbols in the file. …","Returns a list of the places in the file where type hints …","Returns the set of folding ranges.","Fuzzy searches for a symbol.","Returns the definitions from the symbol at <code>position</code>.","Returns the impls from the symbol at <code>position</code>.","Returns the type definitions for the symbol at <code>position</code>.","Finds all usages of the reference at point.","Finds all methods and free functions for the file. Does …","Returns a short text describing element at position.","Return URL(s) for the documentation of the symbol under …","Computes parameter information for the given call …","Computes call hierarchy candidates for the given file …","Computes incoming calls for the given file position.","Computes incoming calls for the given file position.","Returns a <code>mod name;</code> declaration which created the current …","Returns crates this file belongs too.","Returns the edition of the given crate.","Returns the root file of the given crate.","Returns the set of possible targets to run for the …","Returns the set of tests for the given file position.","Computes syntax highlighting for the given file","Computes syntax highlighting for the given file range.","Computes syntax highlighting for the given file.","Computes completions at the given position.","Resolves additional completion data at the position given.","Computes assists (aka code actions aka intentions) for …","Computes the set of diagnostics for the given file.","Convenience function to return assists + quick fixes for …","Returns the edit required to rename reference at the …ind a AstNode by offset inside SyntaxNode, if it is …","Find a AstNode by offset inside SyntaxNode, if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return all the assists applicable at the given position.","","","","What user sees in pop-up in the UI.","","","","Short one-line additional information, like a type","A doc-comment","What string is used for filtering.","","","","","","","Provides a relevance score. Higher values are more …","Returns true when the score for this threshold is above …","Attempts to insert the import to the given scope, …","","","","","","","","","","","Returns an iterator over all transitive dependencies of …","Returns all transitive reverse dependencies of the given …","Returns all crates in the graph, sorted in topological …","","Extends this crate graph by adding a complete disjoint …","","","","","","","","","","","","","","","","","","","","","","Creates a new SourceChange with the given label from the …","","Inserts a [<code>TextEdit</code>] for the given [<code>FileId</code>]. This …","","","","","","","","","","","","","","","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","Create a zero-length range at the specified offset (…","Create a range up to the given end (<code>..end</code>).","The start point of this range.","The end point of this range.","The size of this range.","Check if this range is empty.","Check if this range contains an offset.","Check if this range contains an offset.","Check if this range completely contains another range.","The range covered by both ranges, if it exists. If the …","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","Add an offset to this range.","Subtract an offset from this range.","Relative order of the two ranges (overlapping ranges are …","The text size of some primitive text-like object.","Checked addition. Returns <code>None</code> if overflow occurred.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","",""],"i":[0,1,1,0,2,2,2,2,2,2,2,0,3,4,4,3,5,5,3,6,6,0,7,7,0,8,8,8,8,8,8,0,9,9,0,10,10,0,11,11,11,11,11,11,11,11,0,12,12,0,13,13,13,13,13,13,13,0,14,14,0,15,15,0,16,16,16,16,16,16,16,16,16,16,0,17,17,17,0,18,18,18,18,18,18,0,19,19,0,20,20,0,21,21,21,0,22,22,22,22,0,23,23,23,0,0,24,24,0,25,25,26,26,26,25,0,0,27,27,0,28,28,28,0,29,30,30,29,31,29,32,29,33,29,0,34,34,0,35,35,0,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,37,37,37,37,37,0,38,38,38,38,38,38,38,38,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,40,40,40,0,0,41,0,42,42,42,42,42,0,43,43,43,0,44,44,0,45,45,45,45,45,45,45,0,46,46,46,0,47,47,0,48,48,48,48,48,48,0,0,49,49,49,49,49,49,49,49,0,50,50,50,0,51,51,0,52,52,0,0,53,53,53,0,0,54,0,55,55,55,0,56,0,57,57,0,58,58,0,59,0,60,0,61,61,61,0,0,62,62,0,63,63,0,0,64,64,0,0,65,66,66,65,67,67,0,68,68,68,0,0,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,0,0,70,70,0,0,0,71,71,71,0,72,72,72,72,72,72,72,72,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,74,74,25,25,25,25,25,25,25,25,25,25,25,11,11,11,11,11,11,11,11,11,11,11,11,11,11,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,16,16,16,16,16,16,16,16,16,16,16,16,15,15,15,15,15,15,15,15,15,15,15,18,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,17,17,17,17,17,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,21,21,21,21,21,21,21,21,21,21,21,24,24,24,24,24,24,24,24,24,24,24,24,24,75,75,75,75,75,75,75,75,75,75,75,75,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,29,29,29,29,29,29,29,29,29,29,29,29,29,29,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,76,76,76,76,76,76,76,76,76,76,76,76,76,76,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,38,38,38,38,38,38,38,38,38,38,38,38,38,38,37,37,37,37,37,37,37,37,37,37,37,37,37,37,40,40,40,40,40,40,40,40,40,40,40,40,40,77,77,77,77,77,77,77,77,77,77,77,77,77,77,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,78,78,78,78,78,78,78,78,78,78,78,78,78,49,49,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,53,53,53,53,53,53,53,53,53,53,53,80,80,80,80,80,80,80,80,80,80,80,80,80,80,54,54,54,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,81,81,81,81,81,81,81,81,81,81,81,81,81,81,62,62,62,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,63,63,63,82,82,82,82,82,82,82,82,82,82,82,82,82,82,64,64,64,64,64,64,64,64,64,64,64,64,64,83,83,83,83,83,83,83,83,83,83,83,65,65,65,65,65,65,65,65,65,65,65,65,65,68,68,68,68,68,68,68,68,68,68,68,68,68,84,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,69,69,69,69,69,69,69,69,69,69,69,69,69,69,86,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,88,88,88,88,70,70,70,70,70,70,70,70,70,70,70,70,70,89,89,89,89,89,89,89,89,89,89,89,89,89,71,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,54,41,55,60,54,79,79,80,80,59,59,55,58,58,54,54,60,60,54,79,55,60,55,80,79,55,57,80,79,58,55,54,60,59,53,80,55,54,60,80,60,54,57,59,58,53,79,55,88,88,87,87,88,87,88,87,88,87,88,88,88,87,87,87,88,88,88,87,87,88,87,88,88,87,88,88,87,88,87,88,89,89,89,70,89,70,56,56,56,56,56,56,56,87,77,77,77,77,77,85,85,85,68,83,69,63,62,68,68,85,85,85,64,81,81,82,82,62,62,63,63,69,69,81,85,85,85,81,82,69,64,62,65,68,63,85,68,69,68,84,81,85,82,63,61,69,62,65,64,45,44,45,43,42,44,44,43,43,45,45,47,44,42,43,46,50,78,51,50,48,49,52,49,49,49,52,50,50,48,48,49,48,50,78,51,52,86,86,86,86,74,35,35,35,35,11,7,10,9,13,14,18,17,19,22,23,24,27,28,34,29,35,76,39,36,38,37,40,74,9,20,76,72,14,35,76,39,36,38,37,11,11,14,14,16,18,18,19,19,22,22,23,28,28,34,34,29,29,35,35,76,76,39,39,36,38,37,14,35,76,39,36,38,37,74,25,11,1,3,7,8,10,9,13,14,16,15,18,17,19,20,22,23,21,24,75,27,28,34,29,35,76,39,36,38,37,40,71,72,73,74,75,34,39,36,35,39,35,76,35,11,14,28,34,29,35,76,39,36,38,37,74,74,11,18,18,18,18,28,28,35,76,76,77,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,45,45,46,78,78,78,78,78,78,78,78,78,78,78,78,78,50,50,51,79,53,53,53,53,53,80,80,80,80,80,80,80,80,80,80,54,59,59,59,59,59,61,61,81,82,82,82,82,82,82,83,83,83,83,83,68,68,68,68,68,84,84,84,84,84,84,85,85,85,85,85,85,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,88,88,70,70,70,70,89,89,89,89,89,89,89,89,89,89],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["textrange",3]],["rangeinfo",3]],null,[[["usize",15],["option",4]],["analysishost",3]],[[["usize",15],["option",4]]],[[],["analysis",3]],[[["change",3]]],[[]],[[],["vec",3]],[[]],[[],["rootdatabase",3]],[[],["rootdatabase",3]],null,[[["string",3]]],[[["option",4],["fileid",3]],[["string",3],["cancelable",6]]],[[],["cancelable",6]],[[["fileid",3]],[["arc",3],["cancelable",6]]],[[["fileid",3]],[["cancelable",6],["sourcefile",3]]],[[["fileid",3]],[["bool",15],["cancelable",6]]],[[["fileid",3]],[["cancelable",6],["arc",3]]],[[["filerange",3]],[["textrange",3],["cancelable",6]]],[[["fileposition",3]],[["cancelable",6],["option",4]]],[[["option",4],["textrange",3],["fileid",3]],[["string",3],["cancelable",6]]],[[["fileposition",3]],[["string",3],["cancelable",6]]],[[],[["result",4],["cancelable",6]]],[[["fileposition",3]],[["option",4],["cancelable",6]]],[[["filerange",3]],[["cancelable",6],["textedit",3]]],[[["fileposition",3]],[["cancelable",6],["option",4]]],[[["char",15],["fileposition",3]],[["cancelable",6],["option",4]]],[[["fileid",3]],[["cancelable",6],["vec",3]]],[[["inlayhintsconfig",3],["fileid",3]],[["cancelable",6],["vec",3]]],[[["fileid",3]],[["cancelable",6],["vec",3]]],[[["query",3]],[["vec",3],["cancelable",6]]],[[["fileposition",3]],[["option",4],["cancelable",6]]],[[["fileposition",3]],[["option",4],["cancelable",6]]],[[["fileposition",3]],[["option",4],["cancelable",6]]],[[["searchscope",3],["option",4],["fileposition",3]],[["option",4],["cancelable",6]]],[[["fileid",3]],[["cancelable",6],["vec",3]]],[[["bool",15],["fileposition",3]],[["cancelable",6],["option",4]]],[[["fileposition",3]],[["option",4],["cancelable",6]]],[[["fileposition",3]],[["cancelable",6],["option",4]]],[[["fileposition",3]],[["option",4],["cancelable",6]]],[[["fileposition",3]],[["cancelable",6],["option",4]]],[[["fileposition",3]],[["cancelable",6],["option",4]]],[[["fileposition",3]],[["vec",3],["cancelable",6]]],[[["fileid",3]],[["cancelable",6],["vec",3]]],[[["crateid",3]],[["cancelable",6],["edition",4]]],[[["crateid",3]],[["cancelable",6],["fileid",3]]],[[["fileid",3]],[["cancelable",6],["vec",3]]],[[["searchscope",3],["option",4],["fileposition",3]],[["cancelable",6],["vec",3]]],[[["fileid",3]],[["cancelable",6],["vec",3]]],[[["filerange",3]],[["cancelable",6],["vec",3]]],[[["bool",15],["fileid",3]],[["string",3],["cancelable",6]]],[[["completionconfig",3],["fileposition",3]],[["cancelable",6],["option",4]]],[[["fileposition",3],["string",3],["completionconfig",3],["str",15]],[["vec",3],["cancelable",6]]],[[["assistresolvestrategy",4],["filerange",3],["assistconfig",3]],[["cancelable",6],["vec",3]]],[[["assistresolvestrategy",4],["fileid",3],["diagnosticsconfig",3]],[["vec",3],["cancelable",6]]],[[["assistconfig",3],["assistresolvestrategy",4],["filerange",3],["diagnosticsconfig",3]],[["cancelable",6],["vec",3]]],[[["str",15],["fileposition",3]],[["result",4],["cancelable",6]]],[[["fileposition",3]],[["cancelable",6],["result",4]]],[[["str",15],["fileid",3]],[["cancelable",6],["option",4]]],[[["str",15],["vec",3],["bool",15],["filerange",3],["fileposition",3]],[["cancelable",6],["result",4]]],[[["annotationconfig",3],["fileid",3]],[["vec",3],["cancelable",6]]],[[["annotation",3]],[["annotation",3],["cancelable",6]]],[[["filerange",3],["direction",4]],[["cancelable",6],["option",4]]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["defwithbodyid",4]],[["inferenceresult",3],["arc",3]]],[[["defwithbodyid",4]],[["inferenceresult",3],["arc",3]]],[[["tydefid",4]],[["binders",3],["ty",3]]],[[["valuetydefid",4]],[["binders",3],["ty",3]]],[[["implid",3]],[["binders",3],["ty",3]]],[[["constparamid",3]],[["ty",3],["interner",3]]],[[["implid",3]],[["option",4],["binders",3]]],[[["variantid",4]],[["arenamap",3],["arc",3]]],[[["callabledefid",4]],[["callablesig",3],["binders",3]]],[[["functionid",3]],[["option",4],["arc",3]]],[[["typeparamid",3]],["arc",3]],[[["genericdefid",4]],["arc",3]],[[["genericdefid",4]],[["traitenvironment",3],["arc",3]]],[[["genericdefid",4]],["arc",3]],[[["crateid",3]],[["arc",3],["inherentimpls",3]]],[[["crateid",3]],[["arc",3],["traitimpls",3]]],[[["crateid",3]],[["arc",3],["traitimpls",3]]],[[["callabledefid",4]],["internedcallabledefid",3]],[[["internedcallabledefid",3]],["callabledefid",4]],[[["typeparamid",3]],["internedtypeparamid",3]],[[["internedtypeparamid",3]],["typeparamid",3]],[[["lifetimeparamid",3]],["internedlifetimeparamid",3]],[[["internedlifetimeparamid",3]],["lifetimeparamid",3]],[[["constparamid",3]],["internedconstparamid",3]],[[["internedconstparamid",3]],["constparamid",3]],[[["impltraitid",4]],["internedopaquetyid",3]],[[["internedopaquetyid",3]],["impltraitid",4]],[[],["internedclosureid",3]],[[["internedclosureid",3]]],[[["interner",3],["assoctypeid",3]],[["associatedtydatum",3],["arc",3]]],[[["crateid",3],["traitid",3],["interner",3]],[["arc",3],["traitdatum",3]]],[[["crateid",3],["interner",3],["adtid",3]],[["arc",3],["adtdatum",3]]],[[["crateid",3],["interner",3],["implid",3]],[["arc",3],["impldatum",3]]],[[["crateid",3],["interner",3],["fndefid",3]],[["arc",3],["fndefdatum",3]]],[[["crateid",3],["interner",3],["fndefid",3]],[["variances",3],["interner",3]]],[[["crateid",3],["interner",3],["adtid",3]],[["variances",3],["interner",3]]],[[["crateid",3],["associatedtyvalueid",3],["interner",3]],[["arc",3],["associatedtyvalue",3]]],[[["inenvironment",3],["crateid",3],["canonical",3]],[["option",4],["solution",4]]],[[["inenvironment",3],["crateid",3],["canonical",3]],[["option",4],["solution",4]]],[[["crateid",3],["interner",3],["environment",3]],[["interner",3],["programclauses",3]]],[[["hirfileid",3]],[["itemtree",3],["arc",3]]],[[["crateid",3]],[["arc",3],["defmap",3]]],[[["crateid",3]],[["arc",3],["defmap",3]]],[[["blockid",3]],[["arc",3],["option",4]]],[[["structid",3]],[["arc",3],["structdata",3]]],[[["unionid",3]],[["arc",3],["structdata",3]]],[[["enumid",3]],[["arc",3],["enumdata",3]]],[[["implid",3]],[["arc",3],["impldata",3]]],[[["traitid",3]],[["traitdata",3],["arc",3]]],[[["typealiasid",3]],[["typealiasdata",3],["arc",3]]],[[["functionid",3]],[["arc",3],["functiondata",3]]],[[["constid",3]],[["arc",3],["constdata",3]]],[[["staticid",3]],[["arc",3],["staticdata",3]]],[[["defwithbodyid",4]]],[[["defwithbodyid",4]],[["body",3],["arc",3]]],[[["defwithbodyid",4]],[["exprscopes",3],["arc",3]]],[[["genericdefid",4]],[["interned",3],["genericparams",3]]],[[["enumid",3]],[["arenamap",3],["arc",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["enumid",3]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arenamap",3],["arc",3]]],[[["attrdefid",4]],["attrswithowner",3]],[[["crateid",3]],[["langitems",3],["arc",3]]],[[["smolstr",3],["crateid",3]],[["langitemtarget",4],["option",4]]],[[["crateid",3]],[["importmap",3],["arc",3]]],[[["variantid",4]],[["arenamap",3],["arc",3]]],[[["functionid",3]],["visibility",4]],[[["hirfileid",3]],[["astidmap",3],["arc",3]]],[[["hirfileid",3]],[["option",4],["syntaxnode",3]]],[[["macrofile",3]],[["option",4],["expandresult",3]]],[[["macrocallloc",3]],["lazymacroid",3]],[[["lazymacroid",3]],["macrocallloc",3]],[[["eagercallloc",3]],["eagermacroid",3]],[[["eagermacroid",3]],["eagercallloc",3]],[[["macrocallid",4]],[["arc",3],["option",4]]],[[["macrocallid",4]],[["greennode",3],["option",4]]],[[["macrodefid",3]],[["arc",3],["option",4]]],[[["macrocallid",4]],[["expandresult",3],["option",4]]],[[["macrocallid",4]],[["result",4],["expanderror",4],["subtree",3]]],[[["macrocallid",4]],[["option",4],["expanderror",4]]],[[["hirfileid",3]],[["hygieneframe",3],["arc",3]]],[[["function",3],["associtemloc",3]],["functionid",3]],[[["functionid",3]],[["function",3],["associtemloc",3]]],[[["itemloc",3],["struct",3]],["structid",3]],[[["structid",3]],[["itemloc",3],["struct",3]]],[[["itemloc",3],["union",3]],["unionid",3]],[[["unionid",3]],[["itemloc",3],["union",3]]],[[["enum",3],["itemloc",3]],["enumid",3]],[[["enumid",3]],[["enum",3],["itemloc",3]]],[[["associtemloc",3],["const",3]],["constid",3]],[[["constid",3]],[["associtemloc",3],["const",3]]],[[["static",3],["itemloc",3]],["staticid",3]],[[["staticid",3]],[["static",3],["itemloc",3]]],[[["itemloc",3],["trait",3]],["traitid",3]],[[["traitid",3]],[["itemloc",3],["trait",3]]],[[["associtemloc",3],["typealias",3]],["typealiasid",3]],[[["typealiasid",3]],[["associtemloc",3],["typealias",3]]],[[["impl",3],["itemloc",3]],["implid",3]],[[["implid",3]],[["impl",3],["itemloc",3]]],[[["blockloc",3]],["blockid",3]],[[["blockid",3]],["blockloc",3]],[[["fileid",3]],[["arc",3],["string",3]]],[[["arc",3],["string",3],["fileid",3]]],[[["string",3],["arc",3],["durability",3],["fileid",3]]],[[["fileid",3]],["sourcerootid",3]],[[["sourcerootid",3],["fileid",3]]],[[["sourcerootid",3],["durability",3],["fileid",3]]],[[["sourcerootid",3]],[["arc",3],["sourceroot",3]]],[[["arc",3],["sourcerootid",3],["sourceroot",3]]],[[["arc",3],["sourceroot",3],["sourcerootid",3],["durability",3]]],[[["sourcerootid",3]],[["arc",3],["hashset",3]]],[[]],[[["fileid",3]],[["parse",3],["sourcefile",3]]],[[],[["arc",3],["crategraph",3]]],[[["arc",3],["crategraph",3]]],[[["arc",3],["crategraph",3],["durability",3]]],[[["fileid",3]],[["arc",3],["symbolindex",3]]],[[],[["arc",3],["hashmap",3]]],[[],[["arc",3],["hashset",3]]],[[["arc",3],["hashset",3]]],[[["arc",3],["durability",3],["hashset",3]]],[[],[["arc",3],["hashset",3]]],[[["arc",3],["hashset",3]]],[[["arc",3],["durability",3],["hashset",3]]],[[["fileid",3]],[["arc",3],["lineindex",3]]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["crate",3]],["crateid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["edition",4]],["ordering",4]],[[["sourcerootid",3]],["ordering",4]],[[["crateid",3]],["ordering",4]],[[["canceled",3]],["bool",15]],[[["canceled",3]],["bool",15]],[[["crategraph",3]],["bool",15]],[[["crategraph",3]],["bool",15]],[[["sourceroot",3]],["bool",15]],[[["sourceroot",3]],["bool",15]],[[["edition",4]],["bool",15]],[[["filerange",3]],["bool",15]],[[["filerange",3]],["bool",15]],[[["crateid",3]],["bool",15]],[[["crateid",3]],["bool",15]],[[["sourcerootid",3]],["bool",15]],[[["sourcerootid",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4],["edition",4]]],[[["crateid",3]],["cratedata",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["fileposition",3]],[[],["crategraph",3]],[[],["canceled",3]],[[],["filerange",3]],[[],["edition",4]],[[],["crateid",3]],[[],["sourcerootid",3]],[[],["sourceroot",3]],[[],["change",3]],[[],["crategraph",3]],[[["edition",4]],[["ordering",4],["option",4]]],[[["crateid",3]],[["ordering",4],["option",4]]],[[["sourcerootid",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["delta",4],["textsize",3]]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[]],[[]],[[["u32",15]],["textsize",3]],[[]],[[]],[[["textrange",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["ordering",4]],[[],[["textsize",3],["bound",4]]],[[],[["textsize",3],["bound",4]]],[[],["textsize",3]],[[],["textrange",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["textrange",3]],[[["usize",15]],[["tryfrominterror",3],["textsize",3],["result",4]]],[[]],[[]],[[["textsize",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[],["textedit",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["textedit",3]],[[],["indel",3]],[[["fileid",3]],["ordering",4]],[[],["fileid",3]],[[]],[[["fileid",3]],[["ordering",4],["option",4]]],[[["fileid",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["rangeoroffset",4]],["textrange",3]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[["documentation",3]],["bool",15]],[[["documentation",3]],["bool",15]],[[],["documentation",3]],[[],["defdatabase",8]],[[],["hirdatabase",8]],[[],["astdatabase",8]],[[]],[[]],[[]],[[]],[[]],[[["filesystemedit",4]],["sourcechange",3]],[[["textedit",3],["fileid",3],["hashmap",3],["buildhasherdefault",3]],["sourcechange",3]],[[["fileid",3]],[["arc",3],["string",3]]],[[["anchoredpath",3]],[["option",4],["fileid",3]]],[[["fileid",3]],[["arc",3],["hashset",3]]],[[["referenceaccess",4]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["lineindex",3]],["bool",15]],[[["lineindex",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["symbolkind",4]],["bool",15]],[[["symbolkind",4]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[],[["rootdatabase",3],["snapshot",3]]],[[]],[[["event",3]]],[[],["label",3]],[[],["lineindex",3]],[[],["symbolkind",4]],[[],["referenceaccess",4]],[[],["linecol",3]],[[],["filesystemedit",4]],[[],["sourcechange",3]],[[],["linecolutf16",3]],[[],["rootdatabase",3]],[[],["sourcechange",3]],[[["symbolkind",4]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["str",15]],[["assistkind",4],["result",4]]],[[],["assistid",3]],[[],["assistkind",4]],[[],["assistconfig",3]],[[],["assist",3]],[[["assistid",3]],["bool",15]],[[["assistid",3]],["bool",15]],[[["assistconfig",3]],["bool",15]],[[["assistconfig",3]],["bool",15]],[[["assistkind",4]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["completionrelevance",3]],[[],["completionitem",3]],[[],["importedit",3]],[[],["completionrelevance",3]],[[],["completionconfig",3]],[[],["completionitemkind",4]],[[],["inserttextformat",4]],[[["symbolkind",4]],["completionitemkind",4]],[[["completionitemkind",4]],["bool",15]],[[["completionitemkind",4]],["bool",15]],[[["inserttextformat",4]],["bool",15]],[[["completionrelevance",3]],["bool",15]],[[["completionrelevance",3]],["bool",15]],[[["completionconfig",3]],["bool",15]],[[["completionconfig",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["ssrerror",3]],["bool",15]],[[["ssrerror",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["string",3]]],[[["hltag",4]],["highlight",3]],[[["hloperator",4]],["highlight",3]],[[["hlpunct",4]],["highlight",3]],[[["symbolkind",4]],["highlight",3]],[[],["navigationtarget",3]],[[],["callitem",3]],[[],["severity",4]],[[],["diagnosticsconfig",3]],[[],["structurenode",3]],[[],["structurenodekind",4]],[[],["hoverconfig",3]],[[],["hoveraction",4]],[[],["hovergototypedata",3]],[[],["inlayhintsconfig",3]],[[],["inlaykind",4]],[[],["direction",4]],[[],["referencesearchresult",3]],[[],["runnable",3]],[[],["testid",4]],[[],["runnablekind",4]],[[],["highlight",3]],[[],["hlmods",3]],[[],["hltag",4]],[[],["hlmod",4]],[[],["hlpunct",4]],[[],["hloperator",4]],[[],["hlrange",3]],[[],["markup",3]],[[],["diagnosticsconfig",3]],[[],["hoverresult",3]],[[],["hlmods",3]],[[],["analysishost",3]],[[["structurenodekind",4]],["ordering",4]],[[["highlight",3]],["ordering",4]],[[["hlmods",3]],["ordering",4]],[[["hltag",4]],["ordering",4]],[[["hlmod",4]],["ordering",4]],[[["hlpunct",4]],["ordering",4]],[[["hloperator",4]],["ordering",4]],[[["navigationtarget",3]],["bool",15]],[[["navigationtarget",3]],["bool",15]],[[["structurenodekind",4]],["bool",15]],[[["structurenodekind",4]],["bool",15]],[[["foldkind",4]],["bool",15]],[[["hoverconfig",3]],["bool",15]],[[["hoverconfig",3]],["bool",15]],[[["hovergototypedata",3]],["bool",15]],[[["hovergototypedata",3]],["bool",15]],[[["inlayhintsconfig",3]],["bool",15]],[[["inlayhintsconfig",3]],["bool",15]],[[["inlaykind",4]],["bool",15]],[[["runnable",3]],["bool",15]],[[["runnable",3]],["bool",15]],[[["testid",4]],["bool",15]],[[["testid",4]],["bool",15]],[[["runnablekind",4]],["bool",15]],[[["runnablekind",4]],["bool",15]],[[["highlight",3]],["bool",15]],[[["highlight",3]],["bool",15]],[[["hlmods",3]],["bool",15]],[[["hlmods",3]],["bool",15]],[[["hltag",4]],["bool",15]],[[["hltag",4]],["bool",15]],[[["hlmod",4]],["bool",15]],[[["hlpunct",4]],["bool",15]],[[["hloperator",4]],["bool",15]],[[["structurenodekind",4]],[["ordering",4],["option",4]]],[[["highlight",3]],[["ordering",4],["option",4]]],[[["hlmods",3]],[["ordering",4],["option",4]]],[[["hltag",4]],[["ordering",4],["option",4]]],[[["hlmod",4]],[["ordering",4],["option",4]]],[[["hlpunct",4]],[["ordering",4],["option",4]]],[[["hloperator",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["hlmod",4]],["highlight",3]],[[["hlmod",4]],["highlight",3]],[[["hlmod",4]]],[[["hlmod",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["markup",3]],[[],["textrange",3]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["string",3],["option",4]],["string",3]],[[],["runnableaction",3]],[[],["bool",15]],[[["hlmod",4]],["bool",15]],[[]],[[],["str",15]],[[],["semantics",3]],[[["fileid",3]],["sourcefile",3]],[[["macrocall",3]],[["option",4],["syntaxnode",3]]],[[["rustlanguage",4],["tokentree",3],["macrocall",3],["syntaxtoken",3]],["option",4]],[[["rustlanguage",4],["syntaxtoken",3]],[["rustlanguage",4],["syntaxtoken",3]]],[[["syntaxnode",3],["textsize",3]],["option",4]],[[["syntaxnode",3]],["filerange",3]],[[["infile",3],["syntaxnodeptr",3]],["filerange",3]],[[["rustlanguage",4],["syntaxtoken",3]]],[[["rustlanguage",4],["syntaxnode",3]]],[[["syntaxnode",3],["textsize",3]]],[[["syntaxnode",3],["textsize",3]],["option",4]],[[["syntaxnode",3],["textsize",3]],["option",4]],[[["lifetime",3]],[["option",4],["lifetimeparam",3]]],[[["lifetime",3]],[["option",4],["label",3]]],[[["type",4]],[["type",3],["option",4]]],[[["expr",4]],[["type",3],["option",4]]],[[["pat",4]],[["type",3],["option",4]]],[[["selfparam",3]],[["type",3],["option",4]]],[[["methodcallexpr",3]],[["function",3],["option",4]]],[[["methodcallexpr",3]],[["option",4],["callable",3]]],[[["fieldexpr",3]],[["field",3],["option",4]]],[[["recordexprfield",3]],["option",4]],[[["recordpatfield",3]],[["field",3],["option",4]]],[[["macrocall",3]],[["option",4],["macrodef",3]]],[[["path",3]],[["option",4],["pathresolution",4]]],[[["externcrate",3]],[["option",4],["crate",3]]],[[["recordexpr",3]],[["option",4],["variantdef",4]]],[[["identpat",3]],[["option",4],["moduledef",4]]],[[["recordexpr",3]],[["global",3],["vec",3]]],[[["recordpat",3]],[["global",3],["vec",3]]],[[],["option",4]],[[["fileid",3]],[["module",3],["option",4]]],[[["fileid",3]]],[[["syntaxnode",3]],["semanticsscope",3]],[[["syntaxtoken",3],["textsize",3]],["semanticsscope",3]],[[["trait",3]],["semanticsscope",3]],[[["syntaxnode",3]]],[[["methodcallexpr",3]],["bool",15]],[[["refexpr",3]],["bool",15]],[[["identpat",3]],["bool",15]],[[["rootdatabase",3],["assistresolvestrategy",4],["filerange",3],["assistconfig",3]],[["global",3],["vec",3],["assist",3]]],[[["assistkind",4]],["bool",15]],[[],["str",15]],[[["assistid",3]],["bool",15]],[[],["str",15]],[[],["textrange",3]],[[],["inserttextformat",4]],[[],["textedit",3]],[[],[["option",4],["str",15]]],[[],[["documentation",3],["option",4]]],[[],["str",15]],[[],[["completionitemkind",4],["option",4]]],[[],["bool",15]],[[],["completionrelevance",3]],[[],["bool",15]],[[],["option",4]],[[],[["option",4],["importedit",3]]],[[],["u32",15]],[[],["bool",15]],[[["insertuseconfig",3]],[["option",4],["textedit",3]]],[[]],[[],["change",3]],[[["sourceroot",3],["global",3],["vec",3]]],[[["arc",3],["option",4],["fileid",3]]],[[["crategraph",3]]],[[["sourcedatabaseext",8]]],[[["global",3],["cfgoptions",3],["edition",4],["fileid",3],["env",3],["procmacro",3],["cratedisplayname",3],["vec",3],["option",4]],["crateid",3]],[[["crateid",3],["cratename",3]],[["cyclicdependencieserror",3],["result",4]]],[[],["bool",15]],[[]],[[["crateid",3]]],[[["crateid",3]]],[[],[["global",3],["vec",3],["crateid",3]]],[[["fileid",3]],[["crateid",3],["option",4]]],[[["crategraph",3]],["u32",15]],[[],["bool",15]],[[["u32",15]],["crateid",3]],[[["fileset",3]],["sourceroot",3]],[[["fileset",3]],["sourceroot",3]],[[["fileid",3]],[["option",4],["vfspath",3]]],[[["vfspath",3]],[["option",4],["fileid",3]]],[[]],[[]],[[]],[[],["label",3]],[[["str",15]],["lineindex",3]],[[["textsize",3]],["linecol",3]],[[["linecol",3]],["textsize",3]],[[["linecol",3]],["linecolutf16",3]],[[["linecolutf16",3]],["linecol",3]],[[["textrange",3]]],[[],["searchscope",3]],[[["fileid",3]],["searchscope",3]],[[["filerange",3]],["searchscope",3]],[[],["searchscope",3]],[[["searchscope",3]],["searchscope",3]],[[["textedit",3],["fileid",3],["global",3],["vec",3],["filesystemedit",4],["hashmap",3],["buildhasherdefault",3]],["sourcechange",3]],[[["textedit",3],["fileid",3]],["sourcechange",3]],[[["textedit",3],["fileid",3]]],[[["filesystemedit",4]]],[[["fileid",3]],[["textedit",3],["option",4]]],[[["string",3]],["query",3]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[["change",3]]],[[]],[[],[["global",3],["vec",3]]],[[["option",4],["usize",15]],["rootdatabase",3]],[[["option",4],["usize",15]]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textrange",3]],[["option",4],["textrange",3]]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],[["option",4],["textrange",3]]],[[["textsize",3]],[["option",4],["textrange",3]]],[[["textrange",3]],["ordering",4]],[[],["textsize",3]],[[["textsize",3]],[["option",4],["textsize",3]]],[[["textsize",3]],[["option",4],["textsize",3]]],[[["textsize",3],["string",3]],["indel",3]],[[["textrange",3]],["indel",3]],[[["textrange",3],["string",3]],["indel",3]],[[["string",3]]],[[],["texteditbuilder",3]],[[["textsize",3],["string",3]],["textedit",3]],[[["textrange",3]],["textedit",3]],[[["textrange",3],["string",3]],["textedit",3]],[[],["usize",15]],[[],["bool",15]],[[],[["iter",3],["indel",3]]],[[["string",3]]],[[["textedit",3]],[["textedit",3],["result",4]]],[[["textsize",3]],[["option",4],["textsize",3]]]],"p":[[3,"Annotation"],[3,"AnnotationConfig"],[4,"AnnotationKind"],[13,"Runnable"],[13,"HasImpls"],[13,"HasReferences"],[3,"CallItem"],[3,"Diagnostic"],[3,"DiagnosticsConfig"],[4,"Severity"],[3,"NavigationTarget"],[3,"ExpandedMacro"],[3,"StructureNode"],[4,"StructureNodeKind"],[3,"Fold"],[4,"FoldKind"],[4,"HoverAction"],[3,"HoverConfig"],[3,"HoverGotoTypeData"],[3,"HoverResult"],[3,"InlayHint"],[3,"InlayHintsConfig"],[4,"InlayKind"],[4,"Direction"],[4,"PrimeCachesProgress"],[13,"StartedOnCrate"],[3,"ReferenceSearchResult"],[3,"Runnable"],[4,"RunnableKind"],[13,"Test"],[13,"TestMod"],[13,"Bench"],[13,"DocTest"],[4,"TestId"],[3,"Highlight"],[4,"HlMod"],[4,"HlOperator"],[4,"HlPunct"],[4,"HlTag"],[3,"HlRange"],[3,"Semantics"],[3,"Assist"],[3,"AssistConfig"],[3,"AssistId"],[4,"AssistKind"],[4,"AssistResolveStrategy"],[3,"SingleResolve"],[3,"CompletionConfig"],[4,"CompletionItemKind"],[3,"CompletionRelevance"],[3,"ImportEdit"],[4,"InsertTextFormat"],[3,"Change"],[3,"CrateId"],[4,"Edition"],[3,"FileId"],[3,"FilePosition"],[3,"FileRange"],[3,"SourceRoot"],[3,"SourceRootId"],[3,"CallInfo"],[3,"LineCol"],[3,"LineColUtf16"],[4,"ReferenceAccess"],[4,"FileSystemEdit"],[13,"CreateFile"],[13,"MoveFile"],[3,"SourceChange"],[4,"SymbolKind"],[3,"Indel"],[3,"RangeInfo"],[3,"AnalysisHost"],[3,"Analysis"],[3,"Markup"],[3,"RenameError"],[3,"HlMods"],[3,"Documentation"],[3,"CompletionItem"],[3,"Canceled"],[3,"CrateGraph"],[3,"Label"],[3,"LineIndex"],[3,"SearchScope"],[3,"Query"],[3,"RootDatabase"],[3,"SsrError"],[3,"TextRange"],[3,"TextSize"],[3,"TextEdit"]]},\
"ide_assists":{"doc":"<code>assists</code> crate provides a bunch of code assists, also …","t":[0,5,5,4,13,13,5,5,0,5,8,10,11,3,11,3,11,3,12,12,12,4,13,13,13,13,13,13,13,11,11,3,12,12,4,13,13,13,3,12,12,11,3,12,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["utils","extract_trivial_expression","test_related_attribute","DefaultMethods","Only","No","filter_assoc_items","add_trait_assoc_items_to_impl","ast_transform","apply","AstTransform","get_substitution","or","SubstituteTypeParams","for_trait_impl","QualifyPaths","new","AssistConfig","snippet_cap","allowed","insert_use","AssistKind","None","QuickFix","Generate","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","contains","name","AssistId","0","1","AssistResolveStrategy","None","All","Single","SingleResolve","assist_id","assist_kind","should_resolve","GroupLabel","0","Assist","id","label","group","target","source_change","get","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","get_substitution","get_substitution","clone","clone","clone","clone","clone","clone","eq","ne","eq","eq","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from_str"],"q":["ide_assists","ide_assists::utils","","","","","","","ide_assists","ide_assists::ast_transform","","","","","","","","ide_assists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_assists::utils","","","","","","","","","","","","","ide_assists::ast_transform","","","","","","","","","","","","","","","","","","","","","","ide_assists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_assists::ast_transform","","ide_assists","ide_assists::utils","ide_assists","","","","","","ide_assists::utils","ide_assists","","","","","","","","","",""],"d":["Assorted functions shared by several assists.","","This is a method with a heuristics to support test …","","","","","","<code>AstTransformer</code>s are functions that replace nodes in an …","","<code>AstTransform</code> helps with applying bulk transformations to …","","","","","","","","","","","","","","","","","","","","","Unique identifier of the assist, should not be shown to …","","","A way to control how many asssist to resolve during the …","No assists should be resolved.","All assists should be resolved.","Only a certain assist should be resolved.","Hold the [<code>AssistId</code>] data of a certain assist to resolve. …","The id of the assist.","","","","","","","Short description of the assist, as shown in the UI.","","Target ranges are used to sort assists: the smaller the …","Computing source change sometimes is much more costly …","Return all the assists applicable at the given position.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,0,0,0,0,0,2,2,0,3,0,4,0,5,5,5,0,6,6,6,6,6,6,6,6,6,0,7,7,0,8,8,8,0,9,9,8,0,10,0,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,5,1,6,7,10,11,5,5,1,6,7,7,5,6,7,8,9,10,11,6],"f":[null,[[["blockexpr",3]],[["option",4],["expr",4]]],[[["fn",3]],[["option",4],["attr",3]]],null,null,null,[[["defaultmethods",4],["rootdatabase",3]],[["associtem",4],["vec",3]]],[[["associtem",4],["semantics",3],["vec",3],["semanticsscope",3],["trait",3],["impl",3]]],null,[[["asttransform",8]]],null,[[["asttransform",8],["syntaxnode",6]],[["option",4],["syntaxnode",6]]],[[["asttransform",8]],[["asttransform",8],["box",3]]],null,[[["semanticsscope",3],["trait",3],["impl",3]],["substitutetypeparams",3]],null,[[["semanticsscope",3]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["assistkind",4]],["bool",15]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,[[["assistid",3]],["bool",15]],null,null,null,null,null,null,null,null,[[["assistresolvestrategy",4],["filerange",3],["rootdatabase",3],["assistconfig",3]],[["vec",3],["assist",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["asttransform",8],["syntaxnode",6]],[["option",4],["syntaxnode",6]]],[[["asttransform",8],["syntaxnode",6]],[["option",4],["syntaxnode",6]]],[[],["assistconfig",3]],[[],["defaultmethods",4]],[[],["assistkind",4]],[[],["assistid",3]],[[],["grouplabel",3]],[[],["assist",3]],[[["assistconfig",3]],["bool",15]],[[["assistconfig",3]],["bool",15]],[[["defaultmethods",4]],["bool",15]],[[["assistkind",4]],["bool",15]],[[["assistid",3]],["bool",15]],[[["assistid",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]],["result",4]]],"p":[[4,"DefaultMethods"],[8,"AstTransform"],[3,"SubstituteTypeParams"],[3,"QualifyPaths"],[3,"AssistConfig"],[4,"AssistKind"],[3,"AssistId"],[4,"AssistResolveStrategy"],[3,"SingleResolve"],[3,"GroupLabel"],[3,"Assist"]]},\
"ide_completion":{"doc":"<code>completions</code> crate provides utilities for generating …","t":[3,12,12,12,12,12,12,3,4,13,13,13,13,13,13,13,13,3,12,12,12,3,12,12,4,13,13,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CompletionConfig","enable_postfix_completions","enable_imports_on_the_fly","add_call_parenthesis","add_call_argument_snippets","snippet_cap","insert_use","CompletionItem","CompletionItemKind","SymbolKind","Attribute","Binding","BuiltinType","Keyword","Method","Snippet","UnresolvedReference","CompletionRelevance","exact_name_match","type_match","is_local","ImportEdit","import","scope","InsertTextFormat","PlainText","Snippet","completions","resolve_completion_edits","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","clone","clone","clone","clone","clone","clone","default","eq","ne","eq","ne","eq","ne","eq","fmt","fmt","fmt","fmt","fmt","fmt","score","is_relevant","label","source_range","insert_text_format","text_edit","detail","documentation","lookup","kind","deprecated","relevance","trigger_call_info","ref_match","import_to_add","to_text_edit"],"q":["ide_completion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","<code>CompletionItem</code> describes a single completion variant in …","","","","","","","","","","","This is set in cases like these:","See CompletionRelevanceTypeMatch doc comments for cases …","This is set in cases like these:","An extra import to add after the completion is applied.","","","","","","Main entry point for completion. We run completion as a …","Resolves additional completion data at the position given.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides a relevance score. Higher values are more …","Returns true when the score for this threshold is above …","What user sees in pop-up in the UI.","","","","Short one-line additional information, like a type","A doc-comment","What string is used for filtering.","","","","","","","Attempts to insert the import to the given scope, …"],"i":[0,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,2,0,3,3,3,0,4,4,0,5,5,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,6,6,6,6,6,6,6,6,6,6,6,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,2,1,6,3,2,5,4,3,1,1,3,3,2,2,5,1,6,3,2,5,4,3,3,6,6,6,6,6,6,6,6,6,6,6,6,6,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["rootdatabase",3],["completionconfig",3],["fileposition",3]],[["option",4],["completions",3]]],[[["fileposition",3],["string",3],["rootdatabase",3],["completionconfig",3],["str",15]],[["vec",3],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["symbolkind",4]],["completionitemkind",4]],[[],["completionconfig",3]],[[],["completionitem",3]],[[],["completionrelevance",3]],[[],["completionitemkind",4]],[[],["inserttextformat",4]],[[],["importedit",3]],[[],["completionrelevance",3]],[[["completionconfig",3]],["bool",15]],[[["completionconfig",3]],["bool",15]],[[["completionrelevance",3]],["bool",15]],[[["completionrelevance",3]],["bool",15]],[[["completionitemkind",4]],["bool",15]],[[["completionitemkind",4]],["bool",15]],[[["inserttextformat",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["u32",15]],[[],["bool",15]],[[],["str",15]],[[],["textrange",3]],[[],["inserttextformat",4]],[[],["textedit",3]],[[],[["option",4],["str",15]]],[[],[["documentation",3],["option",4]]],[[],["str",15]],[[],[["completionitemkind",4],["option",4]]],[[],["bool",15]],[[],["completionrelevance",3]],[[],["bool",15]],[[],["option",4]],[[],[["importedit",3],["option",4]]],[[["insertuseconfig",3]],[["textedit",3],["option",4]]]],"p":[[3,"CompletionConfig"],[4,"CompletionItemKind"],[3,"CompletionRelevance"],[3,"ImportEdit"],[4,"InsertTextFormat"],[3,"CompletionItem"]]},\
"ide_db":{"doc":"This crate defines the core datastructure representing …","t":[0,3,11,0,3,3,12,12,3,12,12,11,11,11,11,11,11,0,3,11,11,11,11,11,11,8,10,10,10,10,10,10,10,10,3,3,11,11,3,11,11,3,11,11,3,11,11,3,12,12,12,12,11,11,11,11,5,5,5,3,11,11,3,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,13,0,4,13,13,13,13,13,13,13,11,11,11,4,13,13,13,13,12,12,11,11,11,11,4,13,13,13,12,12,11,11,11,0,3,12,11,11,11,11,3,12,12,12,4,13,13,3,11,11,11,11,11,11,3,11,11,11,11,11,0,17,4,13,13,13,5,0,3,12,12,12,11,11,11,11,11,4,13,12,12,13,12,12,0,4,13,13,11,11,11,11,0,5,5,0,3,12,12,12,11,11,5,3,12,12,11,11,11,4,13,13,11,11,0,0,4,13,13,13,3,12,12,3,12,12,3,4,13,13,11,3,11,11,11,11,3,12,12,12,12,11,11,11,11,0,4,13,13,13,3,12,12,12,4,13,13,11,11,11,11,11,5,0,4,13,13,5,5,0,5,5,5,5,3,12,12,18,11,11,11,11,11,11,11,11,11,11,3,11,3,11,11,8,10,3,3,11,11,3,12,11,11,11,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["label","Label","new","line_index","LineIndex","LineColUtf16","line","col","LineCol","line","col","new","line_col","offset","to_utf16","to_utf8","lines","symbol_index","Query","new","only_types","libs","exact","case_sensitive","limit","SymbolsDatabase","file_symbols","library_symbols","local_roots","set_local_roots","set_local_roots_with_durability","library_roots","set_library_roots","set_library_roots_with_durability","SymbolsDatabaseStorage","FileSymbolsQuery","in_db","in_db_mut","LibrarySymbolsQuery","in_db","in_db_mut","LocalRootsQuery","in_db","in_db_mut","LibraryRootsQuery","in_db","in_db_mut","SymbolsDatabaseGroupStorage__","file_symbols","library_symbols","local_roots","library_roots","new","fmt_index","maybe_changed_since","for_each_query","world_symbols","crate_symbols","index_resolve","SymbolIndex","len","memory_size","FileSymbol","file_id","name","kind","range","ptr","name_range","container_name","FileSymbolKind","Const","Enum","Function","Macro","Module","Static","Struct","Trait","TypeAlias","Union","defs","Definition","Macro","Field","ModuleDef","SelfType","Local","GenericParam","Label","module","visibility","name","NameClass","ExternCrate","Definition","ConstReference","PatFieldShorthand","local_def","field_ref","defined","referenced_or_defined","classify","classify_lifetime","NameRefClass","ExternCrate","Definition","FieldShorthand","local_ref","field_ref","referenced","classify","classify_lifetime","search","UsageSearchResult","references","is_empty","len","iter","file_ranges","FileReference","range","name","access","ReferenceAccess","Read","Write","SearchScope","empty","single_file","file_range","files","intersection","usages","FindUsages","include_self_refs","in_scope","set_scope","at_least_one","all","items_locator","DEFAULT_QUERY_SEARCH_LIMIT","AssocItemSearch","Include","Exclude","AssocItemsOnly","items_with_name","source_change","SourceChange","source_file_edits","file_system_edits","is_snippet","from_edits","from_text_edit","insert_source_edit","push_file_system_edit","get_source_edit","FileSystemEdit","CreateFile","dst","initial_contents","MoveFile","src","dst","ty_filter","TryEnum","Result","Option","from_ty","happy_case","sad_pattern","happy_pattern","traits","resolve_target_trait","get_missing_assoc_items","call_info","CallInfo","doc","signature","active_parameter","parameter_labels","parameter_ranges","call_info","ActiveParameter","ty","pat","at","at_token","ident","FnCallNode","CallExpr","MethodCallExpr","with_node_exact","name_ref","helpers","import_assets","ImportCandidate","Path","TraitAssocItem","TraitMethod","TraitImportCandidate","receiver_ty","assoc_item_name","PathImportCandidate","qualifier","name","FirstSegmentUnresolved","NameToImport","Exact","Fuzzy","text","ImportAssets","for_method_call","for_exact_path","for_fuzzy_path","for_fuzzy_method_call","LocatedImport","import_path","item_to_import","original_item","original_path","new","import_candidate","search_for_imports","search_for_relative_paths","insert_use","PrefixKind","BySelf","Plain","ByCrate","InsertUseConfig","merge","prefix_kind","group","ImportScope","File","Module","from","find_insert_use_container_with_macros","find_insert_use_container","as_syntax_node","clone_for_update","insert_use","merge_imports","MergeBehavior","Crate","Module","try_merge_imports","try_merge_trees","rust_doc","is_rust_fence","item_name","mod_path_to_ast","visit_file_defs","FamousDefs","0","1","FIXTURE","std","core","core_cmp_Ord","core_convert_From","core_convert_Into","core_option_Option","core_default_Default","core_iter_Iterator","core_iter","core_ops_Deref","SnippetCap","new","RootDatabase","new","update_lru_capacity","LineIndexDatabase","line_index","LineIndexDatabaseStorage","LineIndexQuery","in_db","in_db_mut","LineIndexDatabaseGroupStorage__","line_index","new","fmt_index","maybe_changed_since","for_each_query","SymbolKind","Const","ConstParam","Enum","Field","Function","Impl","Label","LifetimeParam","Local","Macro","Module","SelfParam","Static","Struct","Trait","TypeAlias","TypeParam","Union","ValueParam","Variant","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","file_symbols","library_symbols","local_roots","set_local_roots","set_local_roots_with_durability","library_roots","set_library_roots","set_library_roots_with_durability","line_index","from","into","borrow","borrow_mut","try_from","try_into","type_id","file_text","set_file_text","set_file_text_with_durability","file_source_root","set_file_source_root","set_file_source_root_with_durability","source_root","set_source_root","set_source_root_with_durability","source_root_crates","check_canceled","parse","crate_graph","set_crate_graph","set_crate_graph_with_durability","infer","infer_query","ty","value_ty","impl_self_ty","const_param_ty","impl_trait","field_types","callable_item_signature","return_type_impl_traits","generic_predicates_for_param","generic_predicates","trait_environment","generic_defaults","inherent_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","intern_callable_def","lookup_intern_callable_def","intern_type_param_id","lookup_intern_type_param_id","intern_lifetime_param_id","lookup_intern_lifetime_param_id","intern_const_param_id","lookup_intern_const_param_id","intern_impl_trait_id","lookup_intern_impl_trait_id","intern_closure","lookup_intern_closure","associated_ty_data","trait_datum","struct_datum","impl_datum","fn_def_datum","fn_def_variance","adt_variance","associated_ty_value","trait_solve","trait_solve_query","program_clauses_for_chalk_env","file_item_tree","crate_def_map","crate_def_map_query","block_def_map","struct_data","union_data","enum_data","impl_data","trait_data","type_alias_data","function_data","const_data","static_data","body_with_source_map","body","expr_scopes","generic_params","variants_attrs","fields_attrs","variants_attrs_source_map","fields_attrs_source_map","attrs","crate_lang_items","lang_item","import_map","field_visibilities","function_visibility","ast_id_map","parse_or_expand","parse_macro_expansion","intern_macro","lookup_intern_macro","intern_eager_expansion","lookup_intern_eager_expansion","macro_arg","macro_arg_text","macro_def","macro_expand","expand_proc_macro","macro_expand_error","hygiene_frame","intern_function","lookup_intern_function","intern_struct","lookup_intern_struct","intern_union","lookup_intern_union","intern_enum","lookup_intern_enum","intern_const","lookup_intern_const","intern_static","lookup_intern_static","intern_trait","lookup_intern_trait","intern_type_alias","lookup_intern_type_alias","intern_impl","lookup_intern_impl","intern_block","lookup_intern_block","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","fmt","eq","clone","from","from","from","extend","into_iter","into_iter","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","cmp","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","upcast","upcast","upcast","file_text","resolve_path","relevant_crates","ops_database","ops_salsa_runtime","ops_salsa_runtime_mut","fmt_index","maybe_changed_since","for_each_query","execute","execute","execute","on_propagated_panic","salsa_event","query_storage","query_storage","query_storage","query_storage","query_storage","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","snapshot","request_cancellation","apply_change","collect_garbage","per_query_memory_usage"],"q":["ide_db","ide_db::label","","ide_db","ide_db::line_index","","","","","","","","","","","","","ide_db","ide_db::symbol_index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db","ide_db::defs","","","","","","","","","","","","","","","","ide_db::defs::NameClass","","ide_db::defs","","","","","","","","ide_db::defs::NameRefClass","","ide_db::defs","","","ide_db","ide_db::search","","","","","","","","","","","","","","","","","","","ide_db::defs","ide_db::search","","","","","","ide_db","ide_db::items_locator","","","","","","ide_db","ide_db::source_change","","","","","","","","","","","ide_db::source_change::FileSystemEdit","","ide_db::source_change","ide_db::source_change::FileSystemEdit","","ide_db","ide_db::ty_filter","","","","","","","ide_db","ide_db::traits","","ide_db","ide_db::call_info","","","","","","","","","","","","","","","","","","ide_db","ide_db::helpers","ide_db::helpers::import_assets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::helpers","ide_db::helpers::insert_use","","","","","","","","","","","","","","","","","ide_db::helpers","ide_db::helpers::merge_imports","","","","","ide_db::helpers","ide_db::helpers::rust_doc","ide_db::helpers","","","","","","","","","","","","","","","","","","","ide_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::label","","","","","","","","","","","","","","ide_db::line_index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::symbol_index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::defs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::search","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::items_locator","","","","","","","","","","","","","ide_db::source_change","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::ty_filter","","","","","","","","","","","","","ide_db::call_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::helpers::import_assets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::helpers::insert_use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::helpers::merge_imports","","","","","","","","","","","","","","ide_db::helpers","","","","","","","","","","","","","","","","","","","","","","","","","ide_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::helpers::insert_use","","","ide_db::defs","ide_db::source_change","","","ide_db::search","","ide_db::label","ide_db::line_index","","","ide_db::symbol_index","","ide_db::defs","ide_db::search","","","ide_db::items_locator","ide_db::source_change","","ide_db::ty_filter","ide_db::helpers::import_assets","","ide_db::helpers::insert_use","","ide_db::helpers::merge_imports","ide_db::helpers","ide_db","ide_db::symbol_index","","","","","ide_db::search","ide_db::source_change","ide_db","","","ide_db::label","","ide_db::line_index","","","","","","ide_db::symbol_index","","","","ide_db::defs","","ide_db::search","ide_db::helpers::import_assets","","ide_db::helpers::insert_use","","ide_db::helpers::merge_imports","ide_db::helpers","","ide_db","","ide_db::label","ide_db::line_index","","","ide_db::symbol_index","","","","","","","","ide_db::defs","","","ide_db::search","","","ide_db::items_locator","ide_db::source_change","","ide_db::call_info","","","ide_db::helpers::import_assets","","","","","","","ide_db::helpers::insert_use","","ide_db::helpers::merge_imports","ide_db::helpers","ide_db","","","ide_db::label","ide_db::line_index","","ide_db::symbol_index","","","ide_db::helpers::import_assets","ide_db","","","","","","","","","","","","","ide_db::symbol_index","","ide_db","","","ide_db::symbol_index","","","","ide_db","","","","","","","","","","","","",""],"d":["See [<code>Label</code>]","A type to specify UI label, like an entry in the list of …","","<code>LineIndex</code> maps flat <code>TextSize</code> offsets into <code>(Line, Column)</code> …","","","Zero-based","Zero-based","","Zero-based","Zero-based utf8 offset","","","","","","","This module handles fuzzy-searching of functions, structs …","","","","","","","","","","","The set of “local” (that is, from the current …","Set the value of the <code>local_roots</code> input.","Set the value of the <code>local_roots</code> input and promise that …","The set of roots for crates.io libraries. Files in …","Set the value of the <code>library_roots</code> input.","Set the value of the <code>library_roots</code> input and promise that …","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","The actual data that is stored in the index. It should be …","","","","","","","","","","","","","","","","","","","<code>NameDefinition</code> keeps information about the element we …","","","","","","","","","","","","","","","<code>None</code> in <code>if let None = Some(82) {}</code>.","<code>field</code> in <code>if let Foo { field } = foo</code>.","","","<code>Definition</code> defined by this name.","<code>Definition</code> referenced or defined by this name.","","","","","","","","","<code>Definition</code>, which this name refers to.","","","Implementation of find-usages functionality.","","","","","","","","","","","","","","Generally, <code>search_scope</code> returns files that might contain …","","","","","","","","Enable searching for <code>Self</code> when the definition is a type.","","","","","This module has the functionality to search the project …","A value to use, when uncertain which limit to pick.","Three possible ways to search for the name in associated …","Search for the name in both associated and other items.","Search for the name in other items only.","Search for the name in the associated items only.","Searches for importable items with the given name in the …","This modules defines type to represent changes to the …","","","","","Creates a new SourceChange with the given label from the …","","Inserts a [<code>TextEdit</code>] for the given [<code>FileId</code>]. This …","","","","","","","","","","This module contains structures for filtering the …","Enum types that implement <code>std::ops::Try</code> trait.","","","Returns <code>Some(..)</code> if the provided type is an enum that …","","","","Functionality for obtaining data related to traits from …","Given the <code>impl</code> block, attempts to find the trait this <code>impl</code>…","Given the <code>impl</code> block, returns the list of associated …","This crate provides primitives for tracking the …","Contains information about a call site. Specifically the …","","","","","","Computes parameter information for the given call …","","","","","","","","","","","","A module with ide helpers for high-level ide features.","Look up accessible paths for items.","A candidate for import, derived during various IDE …","A path, qualified (<code>std::collections::HashMap</code>) or not (…","A trait associated function (with no self parameter) or …","A trait method with self parameter. For ‘…","A trait import needed for a given associated item access. …","A type of the item that has the associated item accessed …","The associated item name that the trait to import should …","Path import for a given name, qualified or not.","Optional qualifier before name.","The name the item (struct, trait, enum, etc.) should have.","A qualifier that has a first segment and it’s …","A name that will be used during item lookups.","Requires items with names that exactly match the given …","Requires items with names that case-insensitively contain …","","A struct to find imports in the project, given a certain …","","","","","An import (not necessary the only one) that corresponds a …","The path to use in the <code>use</code> statement for a given …","An item that will be imported with the import path given.","The path import candidate, resolved.","A path of the original item.","","","","This may return non-absolute paths if a part of the …","Handle syntactic aspects of inserting a new <code>use</code>.","","Causes paths to always start with either <code>self</code>, <code>super</code>, …","Causes paths to ignore imports in the local module.","Causes paths to start with <code>crate</code> where applicable, …","","","","","","","","","Determines the containing syntax node in which to insert …","Determines the containing syntax node in which to insert …","","","Insert an import path into the given file/node. A <code>merge</code> …","Handle syntactic aspects of merging UseTrees.","What type of merges are allowed.","Merge imports from the same crate into a single use …","Merge imports from the same module into a single use …","","","Rustdoc specific doc comment handling","","","Converts the mod path struct into its ast representation.","Iterates all <code>ModuleDef</code>s and <code>Impl</code> blocks of the given file.","Helps with finding well-know things inside the standard …","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …i":[0,0,1,0,0,0,2,2,0,3,3,4,4,4,4,4,4,0,0,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,0,0,7,7,0,8,8,0,9,9,0,10,10,0,11,11,11,11,11,11,11,11,0,0,0,0,12,12,0,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,14,14,0,0,15,15,15,15,15,15,15,15,15,15,0,16,16,16,16,17,17,16,16,16,16,0,18,18,18,19,19,18,18,18,0,0,20,20,20,20,20,0,21,21,21,0,22,22,0,23,23,23,23,23,15,0,24,24,24,24,24,0,0,0,25,25,25,0,0,0,26,26,26,26,26,26,26,26,0,27,28,28,27,29,29,0,0,30,30,30,30,30,30,0,0,0,0,0,31,31,31,31,31,0,0,32,32,32,32,32,0,33,33,33,33,0,0,0,34,34,34,0,35,35,0,36,36,0,0,37,37,37,0,38,38,38,38,0,39,39,39,39,39,38,38,38,0,0,40,40,40,0,41,41,41,0,42,42,42,42,42,42,42,0,0,0,43,43,0,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,0,45,0,46,46,0,47,0,0,48,48,0,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,51,51,51,51,51,51,51,51,51,51,51,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,18,18,18,18,18,18,18,18,18,18,18,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,52,52,52,52,52,52,52,52,52,52,52,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,53,53,53,53,53,53,53,53,53,53,53,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,40,40,40,15,26,26,26,20,23,1,4,2,3,13,14,15,20,21,22,25,26,27,30,37,39,41,42,43,45,50,7,8,9,10,12,20,26,46,48,50,1,1,4,4,2,2,3,3,12,13,13,14,15,15,22,39,39,41,41,43,45,45,50,50,1,4,2,3,5,7,8,9,10,12,13,14,15,16,18,20,21,22,25,26,27,31,32,33,34,35,36,52,37,38,39,41,42,43,45,46,48,50,1,2,3,12,13,14,39,50,46,46,46,46,46,46,46,46,46,46,46,46,7,8,48,46,46,7,8,9,10,48,46,46,46,46,46,46,46,46,46,46,46,46,46],"f":[null,null,[[],["label",3]],null,null,null,null,null,null,null,null,[[["str",15]],["lineindex",3]],[[["textsize",3]],["linecol",3]],[[["linecol",3]],["textsize",3]],[[["linecol",3]],["linecolutf16",3]],[[["linecolutf16",3]],["linecol",3]],[[["textrange",3]]],null,null,[[["string",3]],["query",3]],[[]],[[]],[[]],[[]],[[["usize",15]]],null,[[["fileid",3]],[["arc",3],["symbolindex",3]]],[[],[["fxhashmap",6],["arc",3]]],[[],[["arc",3],["fxhashset",6]]],[[["arc",3],["fxhashset",6]]],[[["durability",3],["arc",3],["fxhashset",6]]],[[],[["arc",3],["fxhashset",6]]],[[["arc",3],["fxhashset",6]]],[[["durability",3],["arc",3],["fxhashset",6]]],null,null,[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytablemut",3]],null,[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytablemut",3]],null,[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytablemut",3]],null,[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytablemut",3]],null,null,null,null,null,[[["u16",15]]],[[["databasekeyindex",3],["symbolsdatabase",8],["formatter",3]],["result",6]],[[["databasekeyindex",3],["symbolsdatabase",8],["revision",3]],["bool",15]],[[["fnmut",8],["runtime",3]]],[[["query",3],["rootdatabase",3]],[["vec",3],["filesymbol",3]]],[[["query",3],["crateid",3],["rootdatabase",3]],[["vec",3],["filesymbol",3]]],[[["str",15],["rootdatabase",3]],[["vec",3],["filesymbol",3]]],null,[[],["usize",15]],[[],["usize",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["rootdatabase",3]],[["module",3],["option",4]]],[[["rootdatabase",3]],[["visibility",4],["option",4]]],[[["rootdatabase",3]],[["name",3],["option",4]]],null,null,null,null,null,null,null,[[["hirdatabase",8]],[["option",4],["definition",4]]],[[["hirdatabase",8]],["definition",4]],[[["name",3],["semantics",3]],[["option",4],["nameclass",4]]],[[["lifetime",3],["semantics",3]],[["option",4],["nameclass",4]]],null,null,null,null,null,null,[[["hirdatabase",8]],["definition",4]],[[["nameref",3],["semantics",3]],[["option",4],["namerefclass",4]]],[[["lifetime",3],["semantics",3]],[["option",4],["namerefclass",4]]],null,null,null,[[],["bool",15]],[[],["usize",15]],[[]],[[]],null,null,null,null,null,null,null,null,[[],["searchscope",3]],[[["fileid",3]],["searchscope",3]],[[["filerange",3]],["searchscope",3]],[[],["searchscope",3]],[[["searchscope",3]],["searchscope",3]],[[["semantics",3]],["findusages",3]],null,[[],["findusages",3]],[[["searchscope",3]],["findusages",3]],[[["option",4],["searchscope",3]],["findusages",3]],[[],["bool",15]],[[],["usagesearchresult",3]],null,null,null,null,null,null,[[["usize",15],["nametoimport",4],["option",4],["semantics",3],["crate",3],["associtemsearch",4]]],null,null,null,null,null,[[["fxhashmap",6],["fileid",3],["filesystemedit",4],["vec",3],["textedit",3]]],[[["textedit",3],["fileid",3]]],[[["textedit",3],["fileid",3]]],[[["filesystemedit",4]]],[[["fileid",3]],[["option",4],["textedit",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["type",3],["semantics",3]],[["tryenum",4],["option",4]]],[[],["str",15]],[[],["pat",4]],[[],["pat",4]],null,[[["semantics",3],["impl",3]],[["option",4],["trait",3]]],[[["semantics",3],["impl",3]],[["associtem",4],["vec",3]]],null,null,null,null,null,[[]],[[]],[[["fileposition",3],["rootdatabase",3]],[["callinfo",3],["option",4]]],null,null,null,[[["fileposition",3],["rootdatabase",3]],["option",4]],[[["semantics",3],["syntaxtoken",6]],["option",4]],[[],[["option",4],["name",3]]],null,null,null,[[["syntaxnode",6]],[["option",4],["fncallnode",4]]],[[],[["option",4],["nameref",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],null,[[["semantics",3],["methodcallexpr",3]],["option",4]],[[["path",3],["semantics",3]],["option",4]],[[["path",3],["option",4],["string",3],["module",3],["syntaxnode",6],["semantics",3]],["option",4]],[[["string",3],["module",3],["type",3],["syntaxnode",6]],["option",4]],null,null,null,null,null,[[["iteminns",4],["modpath",3],["option",4]]],[[],["importcandidate",4]],[[["semantics",3],["prefixkind",4]],[["vec",3],["locatedimport",3]]],[[["semantics",3]],[["vec",3],["locatedimport",3]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6],["semantics",3]],["option",4]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[]],[[["importscope",4],["path",3],["insertuseconfig",3]]],null,null,null,null,[[["use",3],["mergebehavior",4]],[["option",4],["use",3]]],[[["usetree",3],["mergebehavior",4]],[["usetree",3],["option",4]]],null,[[["str",15]],["bool",15]],[[["iteminns",4],["rootdatabase",3]],[["name",3],["option",4]]],[[["modpath",3]],["path",3]],[[["fnmut",8],["semantics",3],["fileid",3]]],null,null,null,null,[[],[["option",4],["crate",3]]],[[],[["option",4],["crate",3]]],[[],[["trait",3],["option",4]]],[[],[["trait",3],["option",4]]],[[],[["trait",3],["option",4]]],[[],[["enum",3],["option",4]]],[[],[["trait",3],["option",4]]],[[],[["trait",3],["option",4]]],[[],[["module",3],["option",4]]],[[],[["trait",3],["option",4]]],null,[[["bool",15]],[["option",4],["snippetcap",3]]],null,[[["usize",15],["option",4]],["rootdatabase",3]],[[["usize",15],["option",4]]],null,[[["fileid",3]],[["arc",3],["lineindex",3]]],null,null,[[["lineindexdatabase",8]],["querytable",3]],[[["lineindexdatabase",8]],["querytablemut",3]],null,null,[[["u16",15]]],[[["databasekeyindex",3],["lineindexdatabase",8],["formatter",3]],["result",6]],[[["databasekeyindex",3],["lineindexdatabase",8],["revision",3]],["bool",15]],[[["fnmut",8],["runtime",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["fileid",3]],[["arc",3],["symbolindex",3]]],[[],[["hashmap",3],["arc",3]]],[[],[["hashset",3],["arc",3]]],[[["hashset",3],["arc",3]]],[[["hashset",3],["durability",3],["arc",3]]],[[],[["hashset",3],["arc",3]]],[[["hashset",3],["arc",3]]],[[["hashset",3],["durability",3],["arc",3]]],[[["fileid",3]],[["arc",3],["lineindex",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["fileid",3]],[["string",3],["arc",3]]],[[["fileid",3],["string",3],["arc",3]]],[[["fileid",3],["string",3],["durability",3],["arc",3]]],[[["fileid",3]],["sourcerootid",3]],[[["fileid",3],["sourcerootid",3]]],[[["fileid",3],["sourcerootid",3],["durability",3]]],[[["sourcerootid",3]],[["arc",3],["sourceroot",3]]],[[["arc",3],["sourcerootid",3],["sourceroot",3]]],[[["arc",3],["sourcerootid",3],["sourceroot",3],["durability",3]]],[[["sourcerootid",3]],[["hashset",3],["arc",3]]],[[]],[[["fileid",3]],[["parse",3],["sourcefile",3]]],[[],[["crategraph",3],["arc",3]]],[[["arc",3],["crategraph",3]]],[[["arc",3],["durability",3],["crategraph",3]]],[[["defwithbodyid",4]],[["inferenceresult",3],["arc",3]]],[[["defwithbodyid",4]],[["inferenceresult",3],["arc",3]]],[[["tydefid",4]],[["binders",3],["ty",3]]],[[["valuetydefid",4]],[["binders",3],["ty",3]]],[[["implid",3]],[["binders",3],["ty",3]]],[[["constparamid",3]],[["interner",3],["ty",3]]],[[["implid",3]],[["option",4],["binders",3]]],[[["variantid",4]],[["arenamap",3],["arc",3]]],[[["callabledefid",4]],[["binders",3],["callablesig",3]]],[[["functionid",3]],[["option",4],["arc",3]]],[[["typeparamid",3]],["arc",3]],[[["genericdefid",4]],["arc",3]],[[["genericdefid",4]],[["traitenvironment",3],["arc",3]]],[[["genericdefid",4]],["arc",3]],[[["crateid",3]],[["arc",3],["inherentimpls",3]]],[[["crateid",3]],[["arc",3],["traitimpls",3]]],[[["crateid",3]],[["arc",3],["traitimpls",3]]],[[["callabledefid",4]],["internedcallabledefid",3]],[[["internedcallabledefid",3]],["callabledefid",4]],[[["typeparamid",3]],["internedtypeparamid",3]],[[["internedtypeparamid",3]],["typeparamid",3]],[[["lifetimeparamid",3]],["internedlifetimeparamid",3]],[[["internedlifetimeparamid",3]],["lifetimeparamid",3]],[[["constparamid",3]],["internedconstparamid",3]],[[["internedconstparamid",3]],["constparamid",3]],[[["impltraitid",4]],["internedopaquetyid",3]],[[["internedopaquetyid",3]],["impltraitid",4]],[[],["internedclosureid",3]],[[["internedclosureid",3]]],[[["assoctypeid",3],["interner",3]],[["arc",3],["associatedtydatum",3]]],[[["crateid",3],["traitid",3],["interner",3]],[["traitdatum",3],["arc",3]]],[[["crateid",3],["adtid",3],["interner",3]],[["arc",3],["adtdatum",3]]],[[["crateid",3],["implid",3],["interner",3]],[["arc",3],["impldatum",3]]],[[["crateid",3],["fndefid",3],["interner",3]],[["arc",3],["fndefdatum",3]]],[[["crateid",3],["fndefid",3],["interner",3]],[["variances",3],["interner",3]]],[[["crateid",3],["adtid",3],["interner",3]],[["variances",3],["interner",3]]],[[["crateid",3],["associatedtyvalueid",3],["interner",3]],[["arc",3],["associatedtyvalue",3]]],[[["crateid",3],["canonical",3],["inenvironment",3]],[["solution",4],["option",4]]],[[["crateid",3],["canonical",3],["inenvironment",3]],[["solution",4],["option",4]]],[[["crateid",3],["environment",3],["interner",3]],[["programclauses",3],["interner",3]]],[[["hirfileid",3]],[["arc",3],["itemtree",3]]],[[["crateid",3]],[["defmap",3],["arc",3]]],[[["crateid",3]],[["defmap",3],["arc",3]]],[[["blockid",3]],[["option",4],["arc",3]]],[[["structid",3]],[["structdata",3],["arc",3]]],[[["unionid",3]],[["structdata",3],["arc",3]]],[[["enumid",3]],[["arc",3],["enumdata",3]]],[[["implid",3]],[["arc",3],["impldata",3]]],[[["traitid",3]],[["traitdata",3],["arc",3]]],[[["typealiasid",3]],[["arc",3],["typealiasdata",3]]],[[["functionid",3]],[["arc",3],["functiondata",3]]],[[["constid",3]],[["constdata",3],["arc",3]]],[[["staticid",3]],[["arc",3],["staticdata",3]]],[[["defwithbodyid",4]]],[[["defwithbodyid",4]],[["body",3],["arc",3]]],[[["defwithbodyid",4]],[["exprscopes",3],["arc",3]]],[[["genericdefid",4]],[["interned",3],["genericparams",3]]],[[["enumid",3]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arenamap",3],["arc",3]]],[[["enumid",3]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["attrdefid",4]],["attrswithowner",3]],[[["crateid",3]],[["arc",3],["langitems",3]]],[[["crateid",3],["smolstr",3]],[["langitemtarget",4],["option",4]]],[[["crateid",3]],[["importmap",3],["arc",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["functionid",3]],["visibility",4]],[[["hirfileid",3]],[["astidmap",3],["arc",3]]],[[["hirfileid",3]],[["syntaxnode",3],["option",4]]],[[["macrofile",3]],[["option",4],["expandresult",3]]],[[["macrocallloc",3]],["lazymacroid",3]],[[["lazymacroid",3]],["macrocallloc",3]],[[["eagercallloc",3]],["eagermacroid",3]],[[["eagermacroid",3]],["eagercallloc",3]],[[["macrocallid",4]],[["option",4],["arc",3]]],[[["macrocallid",4]],[["option",4],["greennode",3]]],[[["macrodefid",3]],[["option",4],["arc",3]]],[[["macrocallid",4]],[["option",4],["expandresult",3]]],[[["macrocallid",4]],[["result",4],["subtree",3],["expanderror",4]]],[[["macrocallid",4]],[["option",4],["expanderror",4]]],[[["hirfileid",3]],[["hygieneframe",3],["arc",3]]],[[["associtemloc",3],["function",3]],["functionid",3]],[[["functionid",3]],[["associtemloc",3],["function",3]]],[[["itemloc",3],["struct",3]],["structid",3]],[[["structid",3]],[["itemloc",3],["struct",3]]],[[["itemloc",3],["union",3]],["unionid",3]],[[["unionid",3]],[["union",3],["itemloc",3]]],[[["itemloc",3],["enum",3]],["enumid",3]],[[["enumid",3]],[["itemloc",3],["enum",3]]],[[["const",3],["associtemloc",3]],["constid",3]],[[["constid",3]],[["const",3],["associtemloc",3]]],[[["static",3],["itemloc",3]],["staticid",3]],[[["staticid",3]],[["static",3],["itemloc",3]]],[[["itemloc",3],["trait",3]],["traitid",3]],[[["traitid",3]],[["itemloc",3],["trait",3]]],[[["typealias",3],["associtemloc",3]],["typealiasid",3]],[[["typealiasid",3]],[["typealias",3],["associtemloc",3]]],[[["itemloc",3],["impl",3]],["implid",3]],[[["implid",3]],[["itemloc",3],["impl",3]]],[[["blockloc",3]],["blockid",3]],[[["blockid",3]],["blockloc",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],[["result",4],["error",3]]],[[["prefixkind",4]],["bool",15]],[[],["prefixkind",4]],[[["pathresolution",4]]],[[["textedit",3],["fxhashmap",6],["fileid",3]],["sourcechange",3]],[[["filesystemedit",4]],["sourcechange",3]],[[["intoiterator",8]]],[[]],[[]],[[],["label",3]],[[],["lineindex",3]],[[],["linecolutf16",3]],[[],["linecol",3]],[[],["filesymbol",3]],[[],["filesymbolkind",4]],[[],["definition",4]],[[],["usagesearchresult",3]],[[],["filereference",3]],[[],["referenceaccess",4]],[[],["associtemsearch",4]],[[],["sourcechange",3]],[[],["filesystemedit",4]],[[],["tryenum",4]],[[],["nametoimport",4]],[[],["locatedimport",3]],[[],["insertuseconfig",3]],[[],["importscope",4]],[[],["mergebehavior",4]],[[],["snippetcap",3]],[[],["symbolkind",4]],[[],["filesymbolsquery",3]],[[],["librarysymbolsquery",3]],[[],["localrootsquery",3]],[[],["libraryrootsquery",3]],[[],["symbolindex",3]],[[],["usagesearchresult",3]],[[],["sourcechange",3]],[[],["rootdatabase",3]],[[],["lineindexquery",3]],[[["symbolkind",4]],["ordering",4]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["lineindex",3]],["bool",15]],[[["lineindex",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[["symbolindex",3]],["bool",15]],[[["filesymbol",3]],["bool",15]],[[["filesymbol",3]],["bool",15]],[[["filesymbolkind",4]],["bool",15]],[[["definition",4]],["bool",15]],[[["definition",4]],["bool",15]],[[["referenceaccess",4]],["bool",15]],[[["locatedimport",3]],["bool",15]],[[["locatedimport",3]],["bool",15]],[[["insertuseconfig",3]],["bool",15]],[[["insertuseconfig",3]],["bool",15]],[[["mergebehavior",4]],["bool",15]],[[["snippetcap",3]],["bool",15]],[[["snippetcap",3]],["bool",15]],[[["symbolkind",4]],["bool",15]],[[["symbolkind",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["astdatabase",8]],[[],["defdatabase",8]],[[],["hirdatabase",8]],[[["fileid",3]],[["arc",3],["string",3]]],[[["anchoredpath",3]],[["option",4],["fileid",3]]],[[["fileid",3]],[["fxhashset",6],["arc",3]]],[[],["database",8]],[[],["runtime",3]],[[],["runtime",3]],[[["databasekeyindex",3],["formatter",3]],["result",6]],[[["databasekeyindex",3],["revision",3]],["bool",15]],[[["fnmut",8]]],[[]],[[]],[[]],[[]],[[["event",3]]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["snapshot",3],["rootdatabase",3]]],[[]],[[["change",3]]],[[]],[[],["vec",3]]],"p":[[3,"Label"],[3,"LineColUtf16"],[3,"LineCol"],[3,"LineIndex"],[3,"Query"],[8,"SymbolsDatabase"],[3,"FileSymbolsQuery"],[3,"LibrarySymbolsQuery"],[3,"LocalRootsQuery"],[3,"LibraryRootsQuery"],[3,"SymbolsDatabaseGroupStorage__"],[3,"SymbolIndex"],[3,"FileSymbol"],[4,"FileSymbolKind"],[4,"Definition"],[4,"NameClass"],[13,"PatFieldShorthand"],[4,"NameRefClass"],[13,"FieldShorthand"],[3,"UsageSearchResult"],[3,"FileReference"],[4,"ReferenceAccess"],[3,"SearchScope"],[3,"FindUsages"],[4,"AssocItemSearch"],[3,"SourceChange"],[4,"FileSystemEdit"],[13,"CreateFile"],[13,"MoveFile"],[4,"TryEnum"],[3,"CallInfo"],[3,"ActiveParameter"],[4,"FnCallNode"],[4,"ImportCandidate"],[3,"TraitImportCandidate"],[3,"PathImportCandidate"],[4,"NameToImport"],[3,"ImportAssets"],[3,"LocatedImport"],[4,"PrefixKind"],[3,"InsertUseConfig"],[4,"ImportScope"],[4,"MergeBehavior"],[3,"FamousDefs"],[3,"SnippetCap"],[3,"RootDatabase"],[8,"LineIndexDatabase"],[3,"LineIndexQuery"],[3,"LineIndexDatabaseGroupStorage__"],[4,"SymbolKind"],[3,"SymbolsDatabaseStorage"],[3,"FirstSegmentUnresolved"],[3,"LineIndexDatabaseStorage"]]},\
"ide_ssr":{"doc":"Structural Search Replace","t":[3,5,3,3,3,3,12,3,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["SsrError","ssr_from_comment","Match","SsrRule","SsrPattern","SsrMatches","matches","MatchFinder","in_context","at_first_file","add_rule","edits","add_search_pattern","matches","debug_where_text_equal","MatchDebugInfo","flattened","matched_text","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","default","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from_str","from_str"],"q":["ide_ssr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Attempts to build an SSR MatchFinder from a comment at …","Information about a match that was found.","","","","","Searches a crate for pattern matches and possibly …","Constructs a new instance where names will be looked up …","Constructs an instance using the start of the first file …","Adds a rule to be applied. The order in which rules are …","Finds matches for all added rules and returns edits for …","Adds a search pattern. For use if you intend to only call …","Returns matches for all added rules.","Finds all nodes in <code>file_id</code> whose text is exactly equal to …","","Returns <code>self</code> with any nested matches removed and made …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,2,2,2,2,2,2,2,0,1,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,7,7,7,7,7,7,7,7,7,7,7,1,4,4,3,4,5,6,1,7,4,5,6],"f":[null,[[["filerange",3],["rootdatabase",3]],["option",4]],null,null,null,null,null,null,[[["fileposition",3],["filerange",3],["rootdatabase",3],["vec",3]],["matchfinder",3]],[[["rootdatabase",3]],[["result",4],["ssrerror",3],["matchfinder",3]]],[[["ssrrule",3]],[["ssrerror",3],["result",4]]],[[],[["fxhashmap",6],["fileid",3],["textedit",3]]],[[["ssrpattern",3]],[["ssrerror",3],["result",4]]],[[],["ssrmatches",3]],[[["fileid",3],["str",15]],[["matchdebuginfo",3],["vec",3]]],null,[[],["ssrmatches",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["ssrmatches",3]],[[["ssrerror",3]],["bool",15]],[[["ssrerror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]],[["ssrerror",3],["ssrrule",3],["result",4]]],[[["str",15]],[["ssrpattern",3],["ssrerror",3],["result",4]]]],"p":[[3,"SsrMatches"],[3,"MatchFinder"],[3,"Match"],[3,"SsrError"],[3,"SsrRule"],[3,"SsrPattern"],[3,"MatchDebugInfo"]]},\
"la_arena":{"doc":"Yet another index-based arena.","t":[3,3,3,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ArenaMap","RawIdx","Idx","from_raw","into_raw","Arena","new","clear","len","is_empty","alloc","iter","iter_mut","shrink_to_fit","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","clone","clone","clone","clone","default","default","cmp","cmp","eq","ne","eq","ne","eq","eq","ne","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","index","index","index_mut","hash","hash","hash","hash","from_iter","insert","get","get_mut","values","values_mut","iter"],"q":["la_arena","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A map from arena indexes to some other type. Space …","The raw index of a value in an arena.","The index of a value allocated in an arena that holds <code>T</code>s.","Creates a new index from a [<code>RawIdx</code>].","Converts this index into the underlying [<code>RawIdx</code>].","Yet another index-based arena.","Creates a new empty arena.","Empties the arena, removing all contained values.","Returns the length of the arena.","Returns whether the arena contains no elements.","Allocates a new value on the arena, returning the …","Returns an iterator over the arena’s elements.","Returns an iterator over the arena’s mutable elements.","Reallocates the arena to make it take up as little space …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts a value associated with a given arena index into …","Returns a reference to the value associated with the …","Returns a mutable reference to the value associated with …","Returns an iterator over the values in the map.","Returns an iterator over mutable references to the values …","Returns an iterator over the arena indexes and values in …"],"i":[0,0,0,1,1,0,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,4,3,4,1,2,3,2,3,4,3,3,4,4,1,2,2,3,4,3,4,1,2,4,3,2,2,3,4,1,2,2,3,3,3,3,3,3],"f":[null,null,null,[[["rawidx",3]]],[[],["rawidx",3]],null,[[],["arena",3]],[[]],[[],["usize",15]],[[],["bool",15]],[[],["idx",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u32",15]],["rawidx",3]],[[],["arenamap",3]],[[],["rawidx",3]],[[]],[[],["arena",3]],[[]],[[],["arena",3]],[[["arenamap",3]],["ordering",4]],[[["rawidx",3]],["ordering",4]],[[["arenamap",3]],["bool",15]],[[["arenamap",3]],["bool",15]],[[["rawidx",3]],["bool",15]],[[["rawidx",3]],["bool",15]],[[["idx",3]],["bool",15]],[[["arena",3]],["bool",15]],[[["arena",3]],["bool",15]],[[["arenamap",3]],[["ordering",4],["option",4]]],[[["rawidx",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["idx",3]]],[[["idx",3]]],[[["idx",3]]],[[]],[[]],[[]],[[]],[[]],[[["idx",3]]],[[["idx",3]],["option",4]],[[["idx",3]],["option",4]],[[]],[[]],[[]]],"p":[[3,"Idx"],[3,"Arena"],[3,"ArenaMap"],[3,"RawIdx"]]},\
"mbe":{"doc":"<code>mbe</code> (short for Macro By Example) crate contains code for …","t":[3,12,12,4,13,13,13,3,12,12,12,4,13,13,13,13,4,13,13,13,13,13,13,13,5,5,5,5,5,3,3,3,4,13,13,11,11,11,11,11,11,11,11,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Delimiter","id","kind","DelimiterKind","Parenthesis","Brace","Bracket","Punct","char","spacing","id","ParseError","UnexpectedToken","Expected","InvalidRepeat","RepetitionEmptyTokenTree","ExpandError","NoMatchingRule","UnexpectedToken","BindingError","ConversionError","ProcMacroError","UnresolvedProcMacro","Other","ast_to_token_tree","parse_exprs_with_sep","parse_to_token_tree","syntax_node_to_token_tree","token_tree_to_syntax_node","TokenMap","MacroRules","MacroDef","Origin","Def","Call","parse","expand","map_id_down","map_id_up","parse","expand","map_id_down","map_id_up","ExpandResult","value","err","ok","only_err","str_err","map","result","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","fmt","clone","clone","clone","hash","hash","hash","eq","ne","eq","ne","eq","fmt","fmt","fmt","from","from","clone","clone","clone","clone","clone","default","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","token_by_range","range_by_token"],"q":["mbed":["","","","","","","","","","","","","","","","","","","","","","","","","Convert the syntax tree (what user has written) to a …","Split token tree with seperate expr: $($e:expr)SEP*","Convert a string to a <code>TokenTree</code>","Convert the syntax node to a <code>TokenTree</code> (what macro will …","","Maps <code>tt::TokenId</code> to the relative range of the original …","This struct contains AST for a single <code>macro_rules</code> …","For Macro 2.0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,2,2,2,0,3,3,3,0,4,4,4,4,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,6,6,7,7,7,7,8,8,8,8,0,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,3,1,3,2,1,2,3,1,1,3,3,2,1,3,2,5,9,10,5,7,8,9,10,10,10,4,4,5,5,7,7,8,8,6,9,9,10,4,5,7,8,6,9,5,10,10],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["subtree",3],["char",15]],[["subtree",3],["vec",3]]],[[["str",15]],["option",4]],[[["syntaxnode",6]]],[[["subtree",3],["fragmentkind",4]],[["result",4],["expanderror",4]]],null,null,null,null,null,null,[[["subtree",3]],[["parseerror",4],["result",4],["macrorules",3]]],[[["subtree",3]],[["expandresult",3],["subtree",3]]],[[["tokenid",3]],["tokenid",3]],[[["tokenid",3]]],[[["subtree",3]],[["parseerror",4],["result",4],["macrodef",3]]],[[["subtree",3]],[["expandresult",3],["subtree",3]]],[[["tokenid",3]],["tokenid",3]],[[["tokenid",3]]],null,null,null,[[]],[[["expanderror",4]]],[[["string",3]]],[[],["expandresult",3]],[[],[["expanderror",4],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[],["delimiter",3]],[[],["punct",3]],[[],["delimiterkind",4]],[[]],[[]],[[]],[[["delimiter",3]],["bool",15]],[[["delimiter",3]],["bool",15]],[[["punct",3]],["bool",15]],[[["punct",3]],["bool",15]],[[["delimiterkind",4]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["expansionerror",4]]],[[["result",4],["expanderror",4]]],[[],["tokenmap",3]],[[],["expanderror",4]],[[],["macrorules",3]],[[],["macrodef",3]],[[],["expandresult",3]],[[],["tokenmap",3]],[[["tokenmap",3]],["bool",15]],[[["tokenmap",3]],["bool",15]],[[["parseerror",4]],["bool",15]],[[["parseerror",4]],["bool",15]],[[["expanderror",4]],["bool",15]],[[["expanderror",4]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["origin",4]],["bool",15]],[[["expandresult",3]],["bool",15]],[[["expandresult",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["textrange",3]],[["option",4],["tokenid",3]]],[[["tokenid",3]],[["option",4],["tokentextrange",4]]]],"p":[[3,"Delimiter"],[4,"DelimiterKind"],[3,"Punct"],[4,"ParseError"],[4,"ExpandError"],[4,"Origin"],[3,"MacroRules"],[3,"MacroDef"],[3,"ExpandResult"],[3,"TokenMap"]]},\
"parser":{"doc":"The Rust parser.","tn":["SyntaxKind","SEMICOLON","COMMA","L_PAREN","R_PAREN","L_CURLY","R_CURLY","L_BRACK","R_BRACK","L_ANGLE","R_ANGLE","AT","POUND","TILDE","QUESTION","DOLLAR","AMP","PIPE","PLUS","STAR","SLASH","CARET","PERCENT","UNDERSCORE","DOT","DOT2","DOT3","DOT2EQ","COLON","COLON2","EQ","EQ2","FAT_ARROW","BANG","NEQ","MINUS","THIN_ARROW","LTEQ","GTEQ","PLUSEQ","MINUSEQ","PIPEEQ","AMPEQ","CARETEQ","SLASHEQ","STAREQ","PERCENTEQ","AMP2","PIPE2","SHL","SHR","SHLEQ","SHREQ","AS_KW","ASYNC_KW","AWAIT_KW","BOX_KW","BREAK_KW","CONST_KW","CONTINUE_KW","CRATE_KW","DYN_KW","ELSE_KW","ENUM_KW","EXTERN_KW","FALSE_KW","FN_KW","FOR_KW","IF_KW","IMPL_KW","IN_KW","LET_KW","LOOP_KW","MACRO_KW","MATCH_KW","MOD_KW","MOVE_KW","MUT_KW","PUB_KW","REF_KW","RETURN_KW","SELF_KW","STATIC_KW","STRUCT_KW","SUPER_KW","TRAIT_KW","TRUE_KW","TRY_KW","TYPE_KW","UNSAFE_KW","USE_KW","WHERE_KW","WHILE_KW","YIELD_KW","AUTO_KW","DEFAULT_KW","EXISTENTIAL_KW","UNION_KW","RAW_KW","MACRO_RULES_KW","INT_NUMBER","FLOAT_NUMBER","CHAR","BYTE","STRING","BYTE_STRING","ERROR","IDENT","WHITESPACE","LIFETIME_IDENT","COMMENT","SHEBANG","L_DOLLAR","R_DOLLAR","SOURCE_FILE","STRUCT","UNION","ENUM","FN","RET_TYPE","EXTERN_CRATE","MODULE","USE","STATIC","CONST","TRAIT","IMPL","TYPE_ALIAS","MACRO_CALL","MACRO_RULES","MACRO_ARM","TOKEN_TREE","MACRO_DEF","PAREN_TYPE","TUPLE_TYPE","MACRO_TYPE","NEVER_TYPE","PATH_TYPE","PTR_TYPE","ARRAY_TYPE","SLICE_TYPE","REF_TYPE","INFER_TYPE","FN_PTR_TYPE","FOR_TYPE","IMPL_TRAIT_TYPE","DYN_TRAIT_TYPE","OR_PAT","PAREN_PAT","REF_PAT","BOX_PAT","IDENT_PAT","WILDCARD_PAT","REST_PAT","PATH_PAT","RECORD_PAT","RECORD_PAT_FIELD_LIST","RECORD_PAT_FIELD","TUPLE_STRUCT_PAT","TUPLE_PAT","SLICE_PAT","RANGE_PAT","LITERAL_PAT","MACRO_PAT","CONST_BLOCK_PAT","TUPLE_EXPR","ARRAY_EXPR","PAREN_EXPR","PATH_EXPR","CLOSURE_EXPR","IF_EXPR","WHILE_EXPR","CONDITION","LOOP_EXPR","FOR_EXPR","CONTINUE_EXPR","BREAK_EXPR","LABEL","BLOCK_EXPR","RETURN_EXPR","YIELD_EXPR","MATCH_EXPR","MATCH_ARM_LIST","MATCH_ARM","MATCH_GUARD","RECORD_EXPR","RECORD_EXPR_FIELD_LIST","RECORD_EXPR_FIELD","EFFECT_EXPR","BOX_EXPR","CALL_EXPR","INDEX_EXPR","METHOD_CALL_EXPR","FIELD_EXPR","AWAIT_EXPR","TRY_EXPR","CAST_EXPR","REF_EXPR","PREFIX_EXPR","RANGE_EXPR","BIN_EXPR","EXTERN_BLOCK","EXTERN_ITEM_LIST","VARIANT","RECORD_FIELD_LIST","RECORD_FIELD","TUPLE_FIELD_LIST","TUPLE_FIELD","VARIANT_LIST","ITEM_LIST","ASSOC_ITEM_LIST","ATTR","META_ITEM","USE_TREE","USE_TREE_LIST","PATH","PATH_SEGMENT","LITERAL","RENAME","VISIBILITY","WHERE_CLAUSE","WHERE_PRED","ABI","NAME","NAME_REF","LET_STMT","EXPR_STMT","GENERIC_PARAM_LIST","GENERIC_PARAM","LIFETIME_PARAM","TYPE_PARAM","CONST_PARAM","GENERIC_ARG_LIST","LIFETIME","LIFETIME_ARG","TYPE_ARG","ASSOC_TYPE_ARG","CONST_ARG","PARAM_LIST","PARAM","SELF_PARAM","ARG_LIST","TYPE_BOUND","TYPE_BOUND_LIST","MACRO_ITEMS","MACRO_STMTS","ParseError","0","TokenSource","current","lookahead_nth","bump","is_keyword","Token","kind","is_jointed_to_next","TreeSink","token","start_node","finish_node","error","parse","FragmentKind","Path","Expr","Statement","StatementOptionalSemi","Type","Pattern","Item","Block","Visibility","MetaItem","Items","Statements","Attr","parse_fragment","Reparser","for_node","parse","T","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","clone","clone","clone","clone","cmp","eq","eq","ne","eq","ne","eq","partial_cmp","fmt","fmt","fmt","fmt","hash","hash","hash","is_keyword","is_punct","is_literal","from_keyword","from_char","is_trivia"],"q":["parserd":["The kind of syntax node, e.g. <code>IDENT</code>, <code>USE_KW</code>, or <code>STRUCT</codecode>TokenSource</code> abstracts the source of the tokens parser …","","Lookahead n token","bump cursor to next token","Is the current token a specified keyword?","<code>Token</code> abstracts the cursor of <code>TokenSource</code> operates on.","What is the current token?","Is the current token joined to the next one (<code>> ></code> vs <code>>></code>).","<code>TreeSink</code> abstracts details of a particular syntax tree …","Adds new token to the current branch.","Start new branch and make it current.","Finish current branch and restore previous branch as …","","Parse given tokens into the given sink as a rust file.","","","","","","","","","","","","","","","","A parsing function for a specific braced-block.","If the node is a braced block, return the corresponding …","Re-parse given tokens using this <code>Reparser</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,0,3,3,3,3,0,4,4,0,5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,7,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,1,1,2,4,6,1,1,2,2,4,4,6,1,1,2,4,6,1,2,6,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["token",3]],[[["usize",15]],["token",3]],[[]],[[["str",15]],["bool",15]],null,null,null,null,[[["syntaxkind",4],["u8",15]]],[[["syntaxkind",4]]],[[]],[[["parseerror",3]]],[[["tokensource",8],["treesink",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokensource",8],["fragmentkind",4],["treesink",8]]],null,[[["syntaxkind",4],["option",4]],[["reparser",3],["option",4]]],[[["tokensource",8],["treesink",8]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u16",15]],["syntaxkind",4]],[[],["syntaxkind",4]],[[],["parseerror",3]],[[],["token",3]],[[],["fragmentkind",4]],[[["syntaxkind",4]],["ordering",4]],[[["syntaxkind",4]],["bool",15]],[[["parseerror",3]],["bool",15]],[[["parseerror",3]],["bool",15]],[[["token",3]],["bool",15]],[[["token",3]],["bool",15]],[[["fragmentkind",4]],["bool",15]],[[["syntaxkind",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],[["syntaxkind",4],["option",4]]],[[["char",15]],[["syntaxkind",4],["option",4]]],[[],["bool",15]]],"p":[[4,"SyntaxKind"],[3,"ParseError"],[8,"TokenSource"],[3,"Token"],[8,"TreeSink"],[4,"FragmentKind"],[3,"Reparser"]]},\
"paths":{"doc":"Thin wrappers around <code>std::path</code>, distinguishing between …","t":[3,11,11,11,3,11,11,11,11,11,11,3,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AbsPathBuf","assert","as_path","pop","AbsPath","assert","parent","join","normalize","to_path_buf","strip_prefix","RelPathBuf","as_path","RelPath","new_unchecked","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow","borrow_mut","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow","borrow_mut","type_id","as_ref","as_ref","as_ref","as_ref","as_ref","clone","clone","cmp","cmp","cmp","cmp","eq","ne","eq","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","deref","deref","deref","deref","fmt","fmt","fmt","fmt","hash","hash","hash","hash","borrow","try_from","try_from","try_from","try_from"],"q":["paths","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Wrapper around an absolute [<code>PathBuf</code>].","Wrap the given absolute path in <code>AbsPathBuf</code>","Coerces to a <code>AbsPath</code> slice.","Equivalent of [<code>PathBuf::pop</code>] for <code>AbsPathBuf</code>.","Wrapper around an absolute [<code>Path</code>].","Wrap the given absolute path in <code>AbsPath</code>","Equivalent of [<code>Path::parent</code>] for <code>AbsPath</code>.","Equivalent of [<code>Path::join</code>] for <code>AbsPath</code>.","Normalize the given path:","Equivalent of [<code>Path::to_path_buf</code>] for <code>AbsPath</code>.","Equivalent of [<code>Path::strip_prefix</code>] for <code>AbsPath</code>.","Wrapper around a relative [<code>PathBuf</code>].","Coerces to a <code>RelPath</code> slice.","Wrapper around a relative [<code>Path</code>].","Creates a new <code>RelPath</code> from <code>path</code>, without checking if it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,2,2,2,2,2,2,0,3,0,4,1,1,1,1,1,1,1,1,1,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,1,1,2,3,4,1,3,1,2,3,4,1,1,1,2,2,3,3,4,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,1,1,3,3],"f":[null,[[["pathbuf",3]],["abspathbuf",3]],[[],["abspath",3]],[[],["bool",15]],null,[[["path",3]],["abspath",3]],[[],[["option",4],["abspath",3]]],[[],["abspathbuf",3]],[[],["abspathbuf",3]],[[],["abspathbuf",3]],[[["abspath",3]],[["relpath",3],["option",4]]],null,[[],["relpath",3]],null,[[["path",3]],["relpath",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["typeid",3]],[[],["path",3]],[[],["abspath",3]],[[],["path",3]],[[],["path",3]],[[],["path",3]],[[],["abspathbuf",3]],[[],["relpathbuf",3]],[[["abspathbuf",3]],["ordering",4]],[[["abspath",3]],["ordering",4]],[[["relpathbuf",3]],["ordering",4]],[[["relpath",3]],["ordering",4]],[[["abspathbuf",3]],["bool",15]],[[["abspathbuf",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["relpathbuf",3]],["bool",15]],[[["relpathbuf",3]],["bool",15]],[[["relpath",3]],["bool",15]],[[["relpath",3]],["bool",15]],[[["abspathbuf",3]],[["ordering",4],["option",4]]],[[["abspath",3]],[["ordering",4],["option",4]]],[[["relpathbuf",3]],[["ordering",4],["option",4]]],[[["relpath",3]],[["ordering",4],["option",4]]],[[],["abspath",3]],[[],["path",3]],[[],["relpath",3]],[[],["path",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["abspath",3]],[[["pathbuf",3]],[["abspathbuf",3],["pathbuf",3],["result",4]]],[[["str",15]],[["abspathbuf",3],["pathbuf",3],["result",4]]],[[["pathbuf",3]],[["pathbuf",3],["relpathbuf",3],["result",4]]],[[["str",15]],[["pathbuf",3],["relpathbuf",3],["result",4]]]],"p":[[3,"AbsPathBuf"],[3,"AbsPath"],[3,"RelPathBuf"],[3,"RelPath"]]},\
"proc_macro_api":{"doc":"Client-side Proc-Macro crate","t":[0,4,13,13,4,13,13,13,3,12,12,4,13,13,8,11,11,3,12,3,12,12,12,12,12,3,12,3,12,4,13,13,13,5,3,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["msg","Request","ListMacro","ExpansionMacro","Response","Error","ListMacro","ExpansionMacro","ResponseError","code","message","ErrorCode","ServerErrorEnd","ExpansionError","Message","read","write","ExpansionResult","expansion","ExpansionTask","macro_body","macro_name","attributes","lib","env","ListMacrosResult","macros","ListMacrosTask","lib","ProcMacroKind","CustomDerive","FuncLike","Attr","read_dylib_info","RustCInfo","version","channel","commit","date","ProcMacroClient","extern_process","by_dylib_path","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","eq","ne","eq","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","try_from","try_from","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize"],"q":["proc_macro_api","proc_macro_api::msg","","","","","","","","","","","","","","","","proc_macro_api","","","","","","","","","","","","","","","","","","","","","","","","","proc_macro_api::msg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proc_macro_api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proc_macro_api::msg","","","","proc_macro_api","","","","","","","","","","","","","","","","proc_macro_api::msg","","","","proc_macro_api","","","","","","","","","proc_macro_api::msg","","","","proc_macro_api","","","","","proc_macro_api::msg","","","","proc_macro_api","","","",""],"d":["Defines messages for cross-process message passing based …","","","","","","","","","","","","","","","","","","","","Argument of macro call.","Name of macro to expand.","Possible attributes for the attribute-like macros.","","Environment variables to set during macro expansion.","","","","","","","","","Read rustc dylib information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,2,2,2,0,3,3,0,4,4,0,5,5,0,6,0,7,7,7,7,7,0,8,0,9,0,10,10,10,0,0,11,11,11,11,0,12,12,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,11,11,11,11,11,11,11,12,12,12,12,12,12,12,1,2,3,4,9,10,8,7,6,8,6,9,9,10,8,8,7,7,6,6,1,2,3,4,9,10,8,7,6,11,12,8,6,1,2,3,4,9,10,8,7,6,1,2,3,4,9,10,8,7,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3]],[["option",4],["result",6]]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["path",3]],[["result",6],["rustcinfo",3]]],null,null,null,null,null,null,[[["pathbuf",3]],[["result",6],["procmacroclient",3]]],[[["path",3]],[["vec",3],["procmacro",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["request",4]],[[],["response",4]],[[],["responseerror",3]],[[],["errorcode",4]],[[],["listmacrostask",3]],[[],["procmacrokind",4]],[[],["listmacrosresult",3]],[[],["expansiontask",3]],[[],["expansionresult",3]],[[],["listmacrosresult",3]],[[],["expansionresult",3]],[[["listmacrostask",3]],["bool",15]],[[["listmacrostask",3]],["bool",15]],[[["procmacrokind",4]],["bool",15]],[[["listmacrosresult",3]],["bool",15]],[[["listmacrosresult",3]],["bool",15]],[[["expansiontask",3]],["bool",15]],[[["expansiontask",3]],["bool",15]],[[["expansionresult",3]],["bool",15]],[[["expansionresult",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["response",4]],["result",4]],[[["response",4]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[4,"Request"],[4,"Response"],[3,"ResponseError"],[4,"ErrorCode"],[8,"Message"],[3,"ExpansionResult"],[3,"ExpansionTask"],[3,"ListMacrosResult"],[3,"ListMacrosTask"],[4,"ProcMacroKind"],[3,"RustCInfo"],[3,"ProcMacroClient"]]},\
"proc_macro_srv":{"doc":"RA Proc Macro Server","t":[0,5],"n":["cli","run"],"q":["proc_macro_srv","proc_macro_srv::cli"],"d":["Driver for proc macro server",""],"i":[0,0],"f":[null,[[],["result",6]]],"p":[]},\
"proc_macro_test":{"doc":"Exports a few trivial procedural macros for testing.","t":[14,23,24],"n":["function_like_macro","attribute_macro","DummyTrait"],"q":["proc_macro_test","",""],"d":["","",""],"i":[0,0,0],"f":[null,null,null],"p":[]},\
"profile":{"doc":"A collection of tools for profiling rust-analyzer.","t":[5,5,5,5,5,3,3,12,3,3,12,12,12,3,3,11,11,3,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["heartbeat","heartbeat_span","init","init_from","span","Bytes","MemoryUsage","allocated","StopWatch","StopWatchSpan","time","instructions","memory","Count","Scope","enter","is_active","CpuSpan","cpu_span","memory_usage","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","cmp","default","drop","clone","hash","partial_cmp","eq","ne","fmt","drop","drop","clone","clone","default","cmp","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","sub","sub","add_assign","hash","start","memory","elapsed","current","megabytes","new"],"q":["profile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Filtering syntax env RA_PROFILE=*             // dump …","","This function starts a profiling scope in the current …","","","","","","","","","Include <code>_c: Count<Self></code> field in important structs to …","Allows to check if the current code is withing some …","","","A wrapper around google_cpu_profiler.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create new <code>Count</code>, incrementing the corresponding count."],"i":[0,0,0,0,0,0,0,1,0,0,2,2,2,0,0,3,3,0,0,0,4,4,4,4,4,4,4,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,3,3,3,3,3,3,3,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,3,7,1,5,5,5,5,5,5,7,2,1,5,1,5,5,5,4,4,4,1,5,6],"f":[[[]],[[],["heartbeatspan",3]],[[]],[[["str",15]]],[[["str",15]],["profilespan",3]],null,null,null,null,null,null,null,null,null,null,[[],["scope",3]],[[],["bool",15]],null,[[],["cpuspan",3]],[[],["memoryusage",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["count",3]],["ordering",4]],[[],["count",3]],[[]],[[],["count",3]],[[]],[[["count",3]],[["ordering",4],["option",4]]],[[["count",3]],["bool",15]],[[["count",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[],["memoryusage",3]],[[],["bytes",3]],[[],["bytes",3]],[[["bytes",3]],["ordering",4]],[[["bytes",3]],["bool",15]],[[["bytes",3]],["bool",15]],[[["bytes",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["memoryusage",3]],["memoryusage",3]],[[["bytes",3]],["bytes",3]],[[["usize",15]]],[[]],[[],["stopwatch",3]],[[["bool",15]],["stopwatch",3]],[[],["stopwatchspan",3]],[[],["memoryusage",3]],[[],["isize",15]],[[],["count",3]]],"p":[[3,"MemoryUsage"],[3,"StopWatchSpan"],[3,"Scope"],[3,"StopWatch"],[3,"Bytes"],[3,"Count"],[3,"CpuSpan"]]},\
"project_model":{"doc":"FIXME: write short doc here","t":[3,3,3,12,12,12,12,12,12,3,6,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,4,13,13,6,3,12,12,12,12,12,4,13,13,13,13,13,13,3,3,3,3,12,12,12,4,13,12,12,12,12,13,12,12,12,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BuildDataCollector","BuildDataResult","CargoConfig","no_default_features","all_features","features","target","no_sysroot","rustc_source","CargoWorkspace","Package","PackageData","version","name","manifest","targets","is_member","dependencies","edition","features","active_features","id","metadata","PackageDependency","pkg","name","RustcSource","Path","Discover","Target","TargetData","package","name","root","kind","is_proc_macro","TargetKind","Bin","Lib","Example","Test","Bench","Other","ProjectJson","ProjectJsonData","Sysroot","PackageRoot","is_member","include","exclude","ProjectWorkspace","Cargo","cargo","sysroot","rustc","rustc_cfg","Json","project","sysroot","rustc_cfg","ProcMacroClient","ProjectManifest","ProjectJson","CargoToml","from_manifest_file","discover_single","discover","discover_all","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","fmt","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","index","index","index","hash","hash","deserialize","root","from_cargo_metadata","packages","target_by_root","workspace_root","package_flag","new","n_crates","crates","path","public_deps","proc_macro","crates","discover","discover_rustc","load","load","load_inline","to_roots","n_packages","to_crate_graph","collect_build_data_configs","new","collect","error","extern_process","by_dylib_path"],"q":["project_model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","project_model::ProjectWorkspace","","","","project_model","project_model::ProjectWorkspace","","","project_modeld":["","","","Do not activate the <code>default</code> feature.","Activate all available features","List of features to activate. This will be ignored if …","rustc target","Don’t load sysroot crates (<code>std</code>, <code>core</code> & friends). Might …","rustc private crate source","<code>CargoWorkspace</code> represents the logical structure of, well, …","","Information associated with a cargo crate","Version given in the <code>Cargo.toml</code>","Name as given in the <code>Cargo.toml</code>","Path containing the <code>Cargo.toml</code>","Targets provided by the crate (lib, bin, example, test, …","Is this package a member of the current workspace","List of packages this package depends on","Rust edition for this package","Features provided by the crate, mapped to the features …","List of features enabled on this package","","","","","","Describes how to set the rustc source directory.","Explicit path for the rustc source directory.","Try to automatically detect where the rustc source …","","Information associated with a package’s target","Package that provided this target","Name as given in the <code>Cargo.toml</code> or generated from the …","Path to the main source file of the target","Kind of target","Is this target a proc-macro","","","Any kind of Cargo lib crate-type (dylib, rlib, …","","","","","Roots and crates that compose this Rust project.","","","<code>PackageRoot</code> describes a package root folder. Which may be …","Is a member of the current workspace","","","","Project workspace was discovered by running <code>cargo metadata</code>…","","","","Holds cfg flags for the current target. We get those by …","Project workspace was manually specified using a …reate a new ProjectJson instance.","Returns the number of crates in the project.","Returns an iterator over the crates in the project.","Returns the path to the project’s root folder.","","","","","","","","","Returns the roots for the current <code>ProjectWorkspace</code> The …","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,3,3,0,4,4,0,0,5,5,5,5,5,0,6,6,6,6,6,6,0,0,0,0,7,7,7,0,8,9,9,9,9,8,10,10,10,0,0,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,4,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,18,12,4,1,2,3,5,6,13,14,15,7,8,16,11,1,15,16,11,12,12,4,4,1,1,2,2,3,3,5,5,6,13,13,15,15,7,7,8,8,16,16,11,11,11,12,4,1,2,3,5,6,13,14,15,7,8,16,17,11,12,12,15,7,11,14,2,12,12,12,12,12,13,13,13,13,15,15,15,15,15,15,8,8,8,8,8,8,17,17,16,18,18],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["abspathbuf",3]],[["projectmanifest",4],["result",6]]],[[["abspath",3]],[["projectmanifest",4],["result",6]]],[[["abspath",3]],[["result",6],["vec",3]]],[[],[["vec",3],["projectmanifest",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[],["cargoworkspace",3]],[[],["rustcsource",4]],[[],["cargoconfig",3]],[[],["packagedata",3]],[[],["packagedependency",3]],[[],["targetdata",3]],[[],["targetkind",4]],[[],["projectjson",3]],[[],["projectjsondata",3]],[[],["sysroot",3]],[[],["packageroot",3]],[[],["projectworkspace",4]],[[],["builddataresult",3]],[[],["projectmanifest",4]],[[],["cargoconfig",3]],[[],["sysroot",3]],[[],["builddataresult",3]],[[["projectmanifest",4]],["ordering",4]],[[["cargoworkspace",3]],["bool",15]],[[["cargoworkspace",3]],["bool",15]],[[["rustcsource",4]],["bool",15]],[[["rustcsource",4]],["bool",15]],[[["cargoconfig",3]],["bool",15]],[[["cargoconfig",3]],["bool",15]],[[["packagedata",3]],["bool",15]],[[["packagedata",3]],["bool",15]],[[["packagedependency",3]],["bool",15]],[[["packagedependency",3]],["bool",15]],[[["targetdata",3]],["bool",15]],[[["targetdata",3]],["bool",15]],[[["targetkind",4]],["bool",15]],[[["projectjson",3]],["bool",15]],[[["projectjson",3]],["bool",15]],[[["sysroot",3]],["bool",15]],[[["sysroot",3]],["bool",15]],[[["packageroot",3]],["bool",15]],[[["packageroot",3]],["bool",15]],[[["projectworkspace",4]],["bool",15]],[[["projectworkspace",4]],["bool",15]],[[["builddataresult",3]],["bool",15]],[[["builddataresult",3]],["bool",15]],[[["projectmanifest",4]],["bool",15]],[[["projectmanifest",4]],["bool",15]],[[["projectmanifest",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["package",6]],["packagedata",3]],[[["target",6]],["targetdata",3]],[[["idx",3],["sysrootcratedata",3]],["sysrootcratedata",3]],[[]],[[]],[[],["result",4]],[[],["abspath",3]],[[["cargoconfig",3],["fn",8],["abspath",3]],[["cargoworkspace",3],["result",6]]],[[]],[[["abspath",3]],[["target",6],["option",4]]],[[],["abspath",3]],[[["packagedata",3]],["string",3]],[[["projectjsondata",3],["abspath",3]],["projectjson",3]],[[],["usize",15]],[[]],[[],["abspath",3]],[[]],[[],[["idx",3],["option",4]]],[[]],[[["abspath",3]],[["sysroot",3],["result",6]]],[[["abspath",3]],[["option",4],["abspathbuf",3]]],[[["abspath",3]],[["sysroot",3],["result",6]]],[[["cargoconfig",3],["fn",8],["projectmanifest",4]],[["result",6],["projectworkspace",4]]],[[["projectjson",3],["option",4],["str",15]],[["result",6],["projectworkspace",4]]],[[["option",4],["builddataresult",3]],[["vec",3],["packageroot",3]]],[[],["usize",15]],[[["option",4],["option",4],["procmacroclient",3],["fnmut",8],["builddataresult",3]],["crategraph",3]],[[["builddatacollector",3]]],[[["bool",15]]],[[["fn",8]],[["result",6],["builddataresult",3]]],[[],[["option",4],["string",3]]],[[["pathbuf",3]],[["procmacroclient",3],["error",3],["result",4]]],[[["path",3]],[["procmacro",3],["global",3],["vec",3]]]],"p":[[3,"CargoConfig"],[3,"PackageData"],[3,"PackageDependency"],[4,"RustcSource"],[3,"TargetData"],[4,"TargetKind"],[3,"PackageRoot"],[4,"ProjectWorkspace"],[13,"Cargo"],[13,"Json"],[4,"ProjectManifest"],[3,"CargoWorkspace"],[3,"ProjectJson"],[3,"ProjectJsonData"],[3,"Sysroot"],[3,"BuildDataResult"],[3,"BuildDataCollector"],[3,"ProcMacroClient"]]},\
"rust_analyzer":{"doc":"Implementation of the LSP for rust-analyzer.","t":[0,3,12,12,12,12,12,12,12,12,12,12,5,5,5,3,12,12,12,5,5,4,13,13,13,13,11,11,5,5,5,0,4,3,12,4,4,4,3,12,12,4,4,4,3,12,12,3,12,12,4,3,12,12,4,4,3,12,12,4,4,3,12,12,3,12,12,12,12,4,13,3,12,12,12,12,12,12,4,3,12,4,3,12,4,13,13,13,3,12,12,12,4,3,12,12,12,12,4,3,12,12,12,4,13,13,13,4,4,3,12,12,12,12,12,12,3,12,12,3,12,12,12,4,13,13,3,12,12,3,12,12,12,12,4,3,12,12,3,12,12,3,12,12,4,4,3,12,5,4,3,12,12,12,4,13,13,0,3,12,12,4,13,13,3,12,12,12,12,12,11,11,11,11,3,12,12,4,13,13,3,12,4,13,12,13,12,12,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,6,6,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["cli","AnalysisStatsCmd","randomize","parallel","memory_usage","only","with_deps","no_sysroot","path","load_output_dirs","with_proc_macro","skip_inference","diagnostics","load_workspace","load_workspace_at","LoadCargoConfig","load_out_dirs_from_check","wrap_rustc","with_proc_macro","apply_ssr_rules","search_for_patterns","Verbosity","Spammy","Verbose","Normal","Quiet","is_verbose","is_spammy","parse","symbols","highlight","lsp_ext","AnalyzerStatus","AnalyzerStatusParams","text_document","MemoryUsage","ReloadWorkspace","SyntaxTree","SyntaxTreeParams","text_document","range","ViewHir","ViewCrateGraph","ExpandMacro","ExpandMacroParams","text_document","position","ExpandedMacro","name","expansion","MatchingBrace","MatchingBraceParams","text_document","positions","ParentModule","JoinLines","JoinLinesParams","text_document","ranges","OnEnter","Runnables","RunnablesParams","text_document","position","Runnable","label","location","kind","args","RunnableKind","Cargo","CargoRunnable","override_cargo","workspace_root","cargo_args","cargo_extra_args","executable_args","expect_test","RelatedTests","TestInfo","runnable","InlayHints","InlayHintsParams","text_document","InlayKind","TypeHint","ParameterHint","ChainingHint","InlayHint","range","kind","label","Ssr","SsrParams","query","parse_only","position","selections","ServerStatusNotification","ServerStatusParams","health","quiescent","message","Health","Ok","Warning","Error","CodeActionRequest","CodeActionResolveRequest","CodeAction","title","group","kind","edit","is_preferred","data","CodeActionData","code_action_params","id","SnippetWorkspaceEdit","changes","document_changes","change_annotations","SnippetDocumentChangeOperation","Op","Edit","SnippetTextDocumentEdit","text_document","edits","SnippetTextEdit","range","new_text","insert_text_format","annotation_id","HoverRequest","Hover","hover","actions","CommandLinkGroup","title","commands","CommandLink","command","tooltip","ExternalDocs","OpenCargoToml","OpenCargoTomlParams","text_document","supports_utf8","MoveItem","MoveItemParams","direction","text_document","range","MoveItemDirection","Up","Down","config","Config","discovered_projects","root_path","LinkedProject","ProjectManifest","InlineJsonProject","LensConfig","run","debug","implementations","method_refs","refs","any","none","runnable","references","FilesConfig","watcher","exclude","FilesWatcher","Client","Notify","NotificationsConfig","cargo_toml_not_found","RustfmtConfig","Rustfmt","extra_args","CustomCommand","command","args","RunnablesConfig","override_cargo","cargo_extra_args","new","update","json_schema","linked_projects","did_save_text_document_dynamic_registration","did_change_watched_files_dynamic_registration","location_link","line_folding_only","hierarchical_symbols","code_action_literals","work_done_progress","will_rename","change_annotation_support","code_action_resolve","signature_help_label_offsets","offset_encoding","code_action_group","hover_actions","server_status_notification","publish_diagnostics","diagnostics","diagnostics_map","lru_capacity","proc_macro_srv","files","notifications","cargo_autoreload","run_build_scripts","wrap_rustc","cargo","rustfmt","flycheck","runnables","inlay_hints","completion","assist","call_info_full","lens","hover","semantic_tokens_refresh","code_lens_refresh","insert_replace_support","server_capabilities","main_loop","Error","Result","from_json","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","init","deref","deref_mut","drop","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","run"],"q":["rust_analyzer","rust_analyzer::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer","rust_analyzer::lsp_ext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer","rust_analyzer::config","","","","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer::config::RustfmtConfig","rust_analyzer::config","rust_analyzer::config::RustfmtConfig","","rust_analyzer::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer","","","","","rust_analyzer::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer::lsp_extrust_analyzer::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer::cli","rust_analyzer::lsp_ext","","","","","","","","","","","rust_analyzer::config","","","","","","","","rust_analyzer::lsp_ext","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer::config","","","","rust_analyzer::lsp_ext","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer::config","","","","","","","","rust_analyzer::lsp_ext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer::cli"],"d":["Various batch processing tasks, intended primarily for …","","","","","","","","","","","","","","","","","","","","Searches for <code>patterns</code>, printing debug information for any …","","","","","","","","","","","rust-analyzer extensions to the LSP.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","File position where SSR was invoked. Paths in <code>query</code> will …","Current selections. Search/replace will be restricted to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The annotation id if this is an annotated","","","","","","","","","","","","","","","","","","","","","","","","Config used by the language server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for runnable items, such as <code>main</code> function …","Custom command to be executed instead of <code>cargo</code> for …","Additional arguments for the <code>cargo</code>, e.g. <code>--release</codei":[0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2,2,2,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,4,0,0,0,0,5,5,0,0,0,0,6,6,0,7,7,0,0,8,8,0,0,0,9,9,0,0,0,10,10,0,11,11,11,11,0,12,0,13,13,13,13,13,13,0,0,14,0,0,15,0,16,16,16,0,17,17,17,0,0,18,18,18,18,0,0,19,19,19,0,20,20,20,0,0,0,21,21,21,21,21,21,0,22,22,0,23,23,23,0,24,24,0,25,25,0,26,26,26,26,0,0,27,27,0,28,28,0,29,29,0,0,0,30,0,0,0,31,31,31,0,32,32,0,0,33,33,0,34,34,0,35,35,35,35,35,35,35,35,35,0,36,36,0,37,37,0,38,0,39,40,39,41,41,0,42,42,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,43,43,43,43,43,43,43,43,43,43,43,4,4,4,4,4,4,4,4,4,4,4,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,5,5,5,5,5,5,5,5,5,5,5,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,50,50,50,50,50,50,50,50,50,50,50,8,8,8,8,8,8,8,8,8,8,8,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,9,9,9,9,9,9,9,9,9,9,9,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,55,55,55,55,55,55,55,55,55,55,55,14,14,14,14,14,14,14,14,14,14,14,56,56,56,56,56,56,56,56,56,56,56,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,57,57,57,57,57,57,57,57,57,57,57,18,18,18,18,18,18,18,18,18,18,18,58,58,58,58,58,58,58,58,58,58,58,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,61,61,61,61,61,61,61,61,61,61,61,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,30,30,30,30,30,30,30,30,30,30,30,64,64,64,64,64,64,64,64,64,64,64,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,42,42,42,42,42,42,42,42,42,42,42,42,42,34,34,3,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,42,21,23,26,28,29,16,19,19,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,34,34,35,35,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15],["path",3]],["result",6]],[[["fn",8],["projectworkspace",4],["loadcargoconfig",3]],["result",6]],[[["fn",8],["cargoconfig",3],["path",3],["loadcargoconfig",3]],["result",6]],null,null,null,null,[[["ssrrule",3],["vec",3]],["result",6]],[[["ssrpattern",3],["option",4],["vec",3],["string",3]],["result",6]],null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[["bool",15]],["result",6]],[[],["result",6]],[[["bool",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["clientcapabilities",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["abspathbuf",3],["clientcapabilities",3]]],[[["value",4]]],[[],["value",4]],[[],[["vec",3],["linkedproject",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["offsetencoding",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["diagnosticsconfig",3]],[[],["diagnosticsmapconfig",3]],[[],[["usize",15],["option",4]]],[[],["option",4]],[[],["filesconfig",3]],[[],["notificationsconfig",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["cargoconfig",3]],[[],["rustfmtconfig",4]],[[],[["option",4],["flycheckconfig",4]]],[[],["runnablesconfig",3]],[[],["inlayhintsconfig",3]],[[],["completionconfig",3]],[[],["assistconfig",3]],[[],["bool",15]],[[],["lensconfig",3]],[[],["hoverconfig",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["clientcapabilities",3]],["servercapabilities",3]],[[["config",3],["connection",3]],["result",6]],null,null,[[["str",15],["value",4]],[["result",6],["deserializeowned",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["projectmanifest",4]]],[[["projectjson",3]]],[[],["verbosity",4]],[[],["serverstatusparams",3]],[[],["health",4]],[[],["codeaction",3]],[[],["codeactiondata",3]],[[],["snippetworkspaceedit",3]],[[],["snippetdocumentchangeoperation",4]],[[],["snippettextdocumentedit",3]],[[],["snippettextedit",3]],[[],["hover",3]],[[],["commandlinkgroup",3]],[[],["commandlink",3]],[[],["config",3]],[[],["linkedproject",4]],[[],["lensconfig",3]],[[],["filesconfig",3]],[[],["fileswatcher",4]],[[],["notificationsconfig",3]],[[],["rustfmtconfig",4]],[[],["runnablesconfig",3]],[[],["codeaction",3]],[[],["snippetworkspaceedit",3]],[[],["snippettextedit",3]],[[],["commandlinkgroup",3]],[[],["commandlink",3]],[[["inlaykind",4]],["bool",15]],[[["serverstatusparams",3]],["bool",15]],[[["serverstatusparams",3]],["bool",15]],[[["health",4]],["bool",15]],[[["codeaction",3]],["bool",15]],[[["codeaction",3]],["bool",15]],[[["codeactiondata",3]],["bool",15]],[[["codeactiondata",3]],["bool",15]],[[["snippetworkspaceedit",3]],["bool",15]],[[["snippetworkspaceedit",3]],["bool",15]],[[["snippetdocumentchangeoperation",4]],["bool",15]],[[["snippetdocumentchangeoperation",4]],["bool",15]],[[["snippettextdocumentedit",3]],["bool",15]],[[["snippettextdocumentedit",3]],["bool",15]],[[["snippettextedit",3]],["bool",15]],[[["snippettextedit",3]],["bool",15]],[[["hover",3]],["bool",15]],[[["hover",3]],["bool",15]],[[["commandlinkgroup",3]],["bool",15]],[[["commandlinkgroup",3]],["bool",15]],[[["commandlink",3]],["bool",15]],[[["commandlink",3]],["bool",15]],[[["linkedproject",4]],["bool",15]],[[["linkedproject",4]],["bool",15]],[[["lensconfig",3]],["bool",15]],[[["lensconfig",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["verbosity",4]],["result",6]]],"p":[[3,"AnalysisStatsCmd"],[3,"LoadCargoConfig"],[4,"Verbosity"],[3,"AnalyzerStatusParams"],[3,"SyntaxTreeParams"],[3,"ExpandMacroParams"],[3,"ExpandedMacro"],[3,"MatchingBraceParams"],[3,"JoinLinesParams"],[3,"RunnablesParams"],[3,"Runnable"],[4,"RunnableKind"],[3,"CargoRunnable"],[3,"TestInfo"],[3,"InlayHintsParams"],[4,"InlayKind"],[3,"InlayHint"],[3,"SsrParams"],[3,"ServerStatusParams"],[4,"Health"],[3,"CodeAction"],[3,"CodeActionData"],[3,"SnippetWorkspaceEdit"],[4,"SnippetDocumentChangeOperation"],[3,"SnippetTextDocumentEdit"],[3,"SnippetTextEdit"],[3,"Hover"],[3,"CommandLinkGroup"],[3,"CommandLink"],[3,"OpenCargoTomlParams"],[3,"MoveItemParams"],[4,"MoveItemDirection"],[3,"Config"],[4,"LinkedProject"],[3,"LensConfig"],[3,"FilesConfig"],[4,"FilesWatcher"],[3,"NotificationsConfig"],[4,"RustfmtConfig"],[13,"Rustfmt"],[13,"CustomCommand"],[3,"RunnablesConfig"],[4,"AnalyzerStatus"],[4,"MemoryUsage"],[4,"ReloadWorkspace"],[4,"SyntaxTree"],[4,"ViewHir"],[4,"ViewCrateGraph"],[4,"ExpandMacro"],[4,"MatchingBrace"],[4,"ParentModule"],[4,"JoinLines"],[4,"OnEnter"],[4,"Runnables"],[4,"RelatedTests"],[4,"InlayHints"],[4,"Ssr"],[4,"ServerStatusNotification"],[4,"CodeActionRequest"],[4,"CodeActionResolveRequest"],[4,"HoverRequest"],[4,"ExternalDocs"],[4,"OpenCargoToml"],[4,"MoveItem"]]},\
"stdx":{"doc":"Missing batteries for standard libraries.","t":[0,5,0,5,3,14,14,5,5,5,5,5,5,5,5,5,3,12,11,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["process","streaming_output","panic_context","enter","PanicContext","always","never","is_ci","timeit","print_backtrace","to_lower_snake_case","to_upper_snake_case","replace","trim_indent","equal_range_by","defer","JodChild","0","into_inner","eprintln","format_to","impl_from","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","drop","drop","deref","deref_mut"],"q":["stdx","stdx::process","stdx","stdx::panic_context","","stdx","","","","","","","","","","","","","","","","","stdx::panic_context","","","","","","","stdx","","","","","","","stdx::panic_context","stdx","",""],"d":["Read both stdout and stderr of child without deadlocks.","","A micro-crate to enhance panic messages with context info.","","","Asserts that the condition is always true and returns its …","Asserts that the condition is never true and returns its …","","","","","","","","","","","","","","Appends formatted string to a <code>String</code>.","Generates <code>From</code> impls for <code>Enum E { Foo(Foo), Bar(Bar) }</code> …","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,1,1,1],"f":[null,[[["command",3],["fnmut",8]],[["result",6],["output",3]]],null,[[["string",3]],["paniccontext",3]],null,null,null,[[],["bool",15]],[[["str",15]]],[[]],[[["str",15]],["string",3]],[[["str",15]],["string",3]],[[["string",3],["char",15],["str",15]]],[[["str",15]],["string",3]],[[],[["usize",15],["range",3]]],[[["fnonce",8]]],null,null,[[],["child",3]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["child",3]],[[],["child",3]]],"p":[[3,"JodChild"],[3,"PanicContext"]]},\
"syntax":{"doc":"Syntax Tree library used throughout the rust analyzer.","tn":["display","function_declaration","const_label","type_label","macro_label","algo","ancestors_at_offset","find_node_at_offset","find_node_at_range","skip_trivia_token","non_trivia_sibling","least_common_ancestor","neighbor","has_errors","InsertPosition","First","Last","Before","After","TreeDiff","into_text_edit","is_empty","diff","insert_children","replace_children","SyntaxRewriter","replace","rewrite","rewrite_ast","rewrite_root","ast","edit","remove_attrs_and_docs","IndentLevel","0","from_element","from_node","from_token","AstNodeEdit","insert_children","replace_children","replace_descendant","indent_level","indent","dedent","reset_indent","edit_in_place","GenericParamsOwnerEdit","get_or_create_generic_param_list","get_or_create_where_clause","make","ext","ident_path","expr_unreachable","expr_todo","empty_block_expr","ty_bool","ty_option","ty_result","tokens","single_space","whitespace","doc_comment","literal","single_newline","blank_line","WsBuilder","new","ws","name","name_ref","lifetime","ty","ty_unit","ty_tuple","ty_ref","ty_path","assoc_item_list","impl_trait","path_segment","path_segment_self","path_segment_super","path_segment_crate","path_unqualified","path_qualified","path_concat","path_from_segments","path_from_text","use_tree_glob","use_tree","use_tree_list","use_","record_expr","record_expr_field_list","record_expr_field","record_field","block_expr","expr_unit","expr_literal","expr_empty_block","expr_path","expr_continue","expr_break","expr_return","expr_try","expr_match","expr_if","expr_for_loop","expr_prefix","expr_call","expr_method_call","expr_ref","expr_paren","expr_tuple","expr_assignment","condition","arg_list","ident_pat","ident_mut_pat","wildcard_pat","literal_pat","tuple_pat","tuple_struct_pat","record_pat","record_pat_with_fields","record_pat_field_list","record_pat_field","path_pat","match_arm","match_arm_list","where_pred","where_clause","let_stmt","expr_stmt","param","ret_type","param_list","type_param","lifetime_param","generic_param_list","visibility_pub_crate","visibility_pub","tuple_field_list","record_field_list","tuple_field","variant","fn_","struct_","token","ArrayExprKind","Repeat","initializer","repeat","ElementList","BinOp","BooleanOr","BooleanAnd","EqualityTest","NegatedEqualityTest","LesserEqualTest","GreaterEqualTest","LesserTest","GreaterTest","Addition","Multiplication","Subtraction","Division","Remainder","LeftShift","RightShift","BitwiseXor","BitwiseOr","BitwiseAnd","Assignment","AddAssign","DivAssign","MulAssign","RemAssign","ShrAssign","ShlAssign","SubAssign","BitOrAssign","BitAndAssign","BitXorAssign","Effect","Async","Unsafe","Try","Const","Label","ElseBranch","Block","IfExpr","LiteralKind","String","ByteString","IntNumber","FloatNumber","Char","Byte","Bool","PrefixOp","Deref","Not","Neg","RangeOp","Exclusive","Inclusive","Name","NameRef","Lifetime","Path","PathSegment","GenericArgList","ParamList","RetType","PathType","TypeArg","AssocTypeArg","LifetimeArg","ConstArg","TypeBoundList","MacroCall","Attr","TokenTree","MacroItems","MacroStmts","SourceFile","Const","Enum","ExternBlock","ExternCrate","Fn","Impl","MacroRules","MacroDef","Module","Static","Struct","Trait","TypeAlias","Union","Use","Visibility","ItemList","Rename","UseTree","UseTreeList","Abi","GenericParamList","WhereClause","BlockExpr","SelfParam","Param","RecordFieldList","TupleFieldList","RecordField","TupleField","VariantList","Variant","AssocItemList","ExternItemList","ConstParam","LifetimeParam","TypeParam","WherePred","ExprStmt","LetStmt","ArrayExpr","AwaitExpr","BinExpr","BoxExpr","BreakExpr","CallExpr","CastExpr","ClosureExpr","ContinueExpr","EffectExpr","FieldExpr","ForExpr","IfExpr","IndexExpr","Literal","LoopExpr","MatchExpr","MethodCallExpr","ParenExpr","PathExpr","PrefixExpr","RangeExpr","RecordExpr","RefExpr","ReturnExpr","TryExpr","TupleExpr","WhileExpr","YieldExpr","Label","RecordExprFieldList","RecordExprField","ArgList","Condition","MatchArmList","MatchArm","MatchGuard","ArrayType","DynTraitType","FnPtrType","ForType","ImplTraitType","InferType","MacroType","NeverType","ParenType","PtrType","RefType","SliceType","TupleType","TypeBound","IdentPat","BoxPat","RestPat","LiteralPat","MacroPat","OrPat","ParenPat","PathPat","WildcardPat","RangePat","RecordPat","RefPat","SlicePat","TuplePat","TupleStructPat","ConstBlockPat","RecordPatFieldList","RecordPatField","GenericArg","TypeArg","AssocTypeArg","LifetimeArg","ConstArg","Type","ArrayType","DynTraitType","FnPtrType","ForType","ImplTraitType","InferType","MacroType","NeverType","ParenType","PathType","PtrType","RefType","SliceType","TupleType","Expr","ArrayExpr","AwaitExpr","BinExpr","BlockExpr","BoxExpr","BreakExpr","CallExpr","CastExpr","ClosureExpr","ContinueExpr","EffectExpr","FieldExpr","ForExpr","IfExpr","IndexExpr","Literal","LoopExpr","MacroCall","MacroStmts","MatchExpr","MethodCallExpr","ParenExpr","PathExpr","PrefixExpr","RangeExpr","RecordExpr","RefExpr","ReturnExpr","TryExpr","TupleExpr","WhileExpr","YieldExpr","Item","Const","Enum","ExternBlock","ExternCrate","Fn","Impl","MacroCall","MacroRules","MacroDef","Module","Static","Struct","Trait","TypeAlias","Union","Use","Stmt","ExprStmt","Item","LetStmt","Pat","IdentPat","BoxPat","RestPat","LiteralPat","MacroPat","OrPat","ParenPat","PathPat","WildcardPat","RangePat","RecordPat","RefPat","SlicePat","TuplePat","TupleStructPat","ConstBlockPat","FieldList","RecordFieldList","TupleFieldList","Adt","Enum","Struct","Union","AssocItem","Const","Fn","MacroCall","TypeAlias","ExternItem","Fn","MacroCall","Static","TypeAlias","GenericParam","ConstParam","LifetimeParam","TypeParam","Whitespace","Comment","String","ByteString","IntNumber","FloatNumber","AttrKind","Inner","Outer","AttrsOwnerNode","FieldKind","Name","Index","Macro","MacroRules","MacroDef","NameLike","NameRef","Name","Lifetime","NameOrNameRef","Name","NameRef","PathSegmentKind","Name","Type","type_ref","trait_ref","SelfKw","SuperKw","CrateKw","SelfParamKind","Owned","Ref","MutRef","SlicePatComponents","prefix","slice","suffix","StructKind","Record","Tuple","Unit","TypeBoundKind","PathType","ForType","Lifetime","VisibilityKind","In","PubCrate","PubSuper","PubSelf","Pub","CommentKind","shape","doc","CommentShape","Line","Block","CommentPlacement","Inner","Outer","QuoteOffsets","quotes","contents","FormatSpecifier","Open","Close","Integer","Identifier","Colon","Fill","Align","Sign","NumberSign","Zero","DollarSign","Dot","Asterisk","QuestionMark","HasFormatSpecifier","char_ranges","lex_format_specifier","Radix","Binary","Octal","Decimal","Hexadecimal","NameOwner","name","VisibilityOwner","visibility","LoopBodyOwner","loop_body","label","ArgListOwner","arg_list","ModuleItemOwner","items","GenericParamsOwner","generic_param_list","where_clause","TypeBoundsOwner","type_bound_list","colon_token","AttrsOwner","attrs","has_atom_attr","DocCommentsOwner","doc_comments","CommentIter","AstNode","can_cast","cast","syntax","clone_for_update","AstToken","can_cast","cast","syntax","text","AstChildren","utils","path_to_string_stripping_turbo_fish","ted","Element","syntax_element","Position","after","before","first_child_of","last_child_of","insert","insert_raw","insert_all","insert_all_raw","remove","remove_all","remove_all_iter","replace","replace_with_many","replace_all","append_child","append_child_raw","lex_single_syntax_kind","lex_single_valid_syntax_kind","tokenize","Token","kind","len","AstPtr","SyntaxNodePtr","SyntaxError","SyntaxElement","SyntaxElementChildren","SyntaxNode","SyntaxNodeChildren","SyntaxToken","SyntaxTreeBuilder","TokenText","SyntaxKind","SEMICOLON","COMMA","L_PAREN","R_PAREN","L_CURLY","R_CURLY","L_BRACK","R_BRACK","L_ANGLE","R_ANGLE","AT","POUND","TILDE","QUESTION","DOLLAR","AMP","PIPE","PLUS","STAR","SLASH","CARET","PERCENT","UNDERSCORE","DOT","DOT2","DOT3","DOT2EQ","COLON","COLON2","EQ","EQ2","FAT_ARROW","BANG","NEQ","MINUS","THIN_ARROW","LTEQ","GTEQ","PLUSEQ","MINUSEQ","PIPEEQ","AMPEQ","CARETEQ","SLASHEQ","STAREQ","PERCENTEQ","AMP2","PIPE2","SHL","SHR","SHLEQ","SHREQ","AS_KW","ASYNC_KW","AWAIT_KW","BOX_KW","BREAK_KW","CONST_KW","CONTINUE_KW","CRATE_KW","DYN_KW","ELSE_KW","ENUM_KW","EXTERN_KW","FALSE_KW","FN_KW","FOR_KW","IF_KW","IMPL_KW","IN_KW","LET_KW","LOOP_KW","MACRO_KW","MATCH_KW","MOD_KW","MOVE_KW","MUT_KW","PUB_KW","REF_KW","RETURN_KW","SELF_KW","STATIC_KW","STRUCT_KW","SUPER_KW","TRAIT_KW","TRUE_KW","TRY_KW","TYPE_KW","UNSAFE_KW","USE_KW","WHERE_KW","WHILE_KW","YIELD_KW","AUTO_KW","DEFAULT_KW","EXISTENTIAL_KW","UNION_KW","RAW_KW","MACRO_RULES_KW","INT_NUMBER","FLOAT_NUMBER","CHAR","BYTE","STRING","BYTE_STRING","ERROR","IDENT","WHITESPACE","LIFETIME_IDENT","COMMENT","SHEBANG","L_DOLLAR","R_DOLLAR","SOURCE_FILE","STRUCT","UNION","ENUM","FN","RET_TYPE","EXTERN_CRATE","MODULE","USE","STATIC","CONST","TRAIT","IMPL","TYPE_ALIAS","MACRO_CALL","MACRO_RULES","MACRO_ARM","TOKEN_TREE","MACRO_DEF","PAREN_TYPE","TUPLE_TYPE","MACRO_TYPE","NEVER_TYPE","PATH_TYPE","PTR_TYPE","ARRAY_TYPE","SLICE_TYPE","REF_TYPE","INFER_TYPE","FN_PTR_TYPE","FOR_TYPE","IMPL_TRAIT_TYPE","DYN_TRAIT_TYPE","OR_PAT","PAREN_PAT","REF_PAT","BOX_PAT","IDENT_PAT","WILDCARD_PAT","REST_PAT","PATH_PAT","RECORD_PAT","RECORD_PAT_FIELD_LIST","RECORD_PAT_FIELD","TUPLE_STRUCT_PAT","TUPLE_PAT","SLICE_PAT","RANGE_PAT","LITERAL_PAT","MACRO_PAT","CONST_BLOCK_PAT","TUPLE_EXPR","ARRAY_EXPR","PAREN_EXPR","PATH_EXPR","CLOSURE_EXPR","IF_EXPR","WHILE_EXPR","CONDITION","LOOP_EXPR","FOR_EXPR","CONTINUE_EXPR","BREAK_EXPR","LABEL","BLOCK_EXPR","RETURN_EXPR","YIELD_EXPR","MATCH_EXPR","MATCH_ARM_LIST","MATCH_ARM","MATCH_GUARD","RECORD_EXPR","RECORD_EXPR_FIELD_LIST","RECORD_EXPR_FIELD","EFFECT_EXPR","BOX_EXPR","CALL_EXPR","INDEX_EXPR","METHOD_CALL_EXPR","FIELD_EXPR","AWAIT_EXPR","TRY_EXPR","CAST_EXPR","REF_EXPR","PREFIX_EXPR","RANGE_EXPR","BIN_EXPR","EXTERN_BLOCK","EXTERN_ITEM_LIST","VARIANT","RECORD_FIELD_LIST","RECORD_FIELD","TUPLE_FIELD_LIST","TUPLE_FIELD","VARIANT_LIST","ITEM_LIST","ASSOC_ITEM_LIST","ATTR","META_ITEM","USE_TREE","USE_TREE_LIST","PATH","PATH_SEGMENT","LITERAL","RENAME","VISIBILITY","WHERE_CLAUSE","WHERE_PRED","ABI","NAME","NAME_REF","LET_STMT","EXPR_STMT","GENERIC_PARAM_LIST","GENERIC_PARAM","LIFETIME_PARAM","TYPE_PARAM","CONST_PARAM","GENERIC_ARG_LIST","LIFETIME","LIFETIME_ARG","TYPE_ARG","ASSOC_TYPE_ARG","CONST_ARG","PARAM_LIST","PARAM","SELF_PARAM","ARG_LIST","TYPE_BOUND","TYPE_BOUND_LIST","MACRO_ITEMS","MACRO_STMTS","T","Direction","Next","Prev","GreenNode","NodeOrToken","Node","Token","SyntaxText","TextRange","TextSize","TokenAtOffset","None","Single","Between","WalkEvent","Enter","Leave","SmolStr","Parse","syntax_node","to_syntax","tree","errors","ok","cast","debug_dump","reparse","SourceFile","parse","parse","parse","parse","parse","parse","parse","parse","match_ast","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","next","size_hint","hash","hash","hash","from","from","from","from","from","from","from","from","from","from","from","from","add_assign","eq","eq","ne","eq","eq","eq","ne","eq","cmp","cmp","fmt","fmt","fmt","borrow","clone","clone","clone","clone","clone","clone","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","deref","add","add","add","add","sub","sub","sub","sub","hash","hash","from","add_assign","add_assign","eq","ne","eq","ne","cmp","start_bound","end_bound","default","default","sum","clone","clone","try_from","sub_assign","sub_assign","partial_cmp","fmt","fmt","cmp","clone","hash","from","partial_cmp","eq","fmt","from_iter","from_iter","from_iter","from_iter","deserialize","hash","from","eq","eq","eq","eq","eq","cmp","fmt","serialize","borrow","default","clone","partial_cmp","fmt","deref","name","char_ranges","get_or_create_generic_param_list","get_or_create_where_clause","get_or_create_generic_param_list","get_or_create_where_clause","get_or_create_generic_param_list","get_or_create_where_clause","get_or_create_generic_param_list","get_or_create_where_clause","get_or_create_generic_param_list","get_or_create_where_clause","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","can_cast","cast","syntax","syntax_element","syntax_element","syntax_element","as_ref","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","next","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","add","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","finish","token","start_node","finish_node","error","new","new_at_offset","range","with_range","new","to_node","cast","new","to_node","syntax_node_ptr","cast","as_str","ident_token","self_token","ident_token","self_token","super_token","crate_token","lifetime_ident_token","qualifier","coloncolon_token","segment","coloncolon_token","name_ref","generic_arg_list","param_list","ret_type","l_angle_token","path_type","as_token","r_angle_token","coloncolon_token","l_angle_token","generic_args","r_angle_token","l_paren_token","self_param","comma_token","params","r_paren_token","pipe_token","thin_arrow_token","ty","path","ty","name_ref","eq_token","ty","lifetime","expr","bounds","path","excl_token","token_tree","semicolon_token","pound_token","excl_token","l_brack_token","path","eq_token","expr","token_tree","r_brack_token","l_paren_token","r_paren_token","l_curly_token","r_curly_token","l_brack_token","r_brack_token","statements","expr","shebang_token","default_token","const_token","underscore_token","colon_token","ty","eq_token","body","semicolon_token","enum_token","variant_list","abi","extern_item_list","extern_token","crate_token","name_ref","rename","semicolon_token","default_token","const_token","async_token","unsafe_token","abi","fn_token","param_list","ret_type","body","semicolon_token","default_token","unsafe_token","impl_token","const_token","excl_token","for_token","assoc_item_list","macro_rules_token","excl_token","token_tree","macro_token","args","body","mod_token","item_list","semicolon_token","static_token","mut_token","colon_token","ty","eq_token","body","semicolon_token","struct_token","semicolon_token","field_list","unsafe_token","auto_token","trait_token","assoc_item_list","default_token","type_token","eq_token","ty","semicolon_token","union_token","record_field_list","use_token","use_tree","semicolon_token","pub_token","l_paren_token","in_token","path","r_paren_token","l_curly_token","r_curly_token","as_token","underscore_token","path","coloncolon_token","star_token","use_tree_list","rename","l_curly_token","use_trees","r_curly_token","extern_token","l_angle_token","generic_params","r_angle_token","where_token","predicates","l_curly_token","statements","tail_expr","r_curly_token","amp_token","lifetime","mut_token","colon_token","ty","pat","colon_token","ty","dotdotdot_token","l_curly_token","fields","r_curly_token","l_paren_token","fields","r_paren_token","colon_token","ty","ty","l_curly_token","variants","r_curly_token","field_list","eq_token","expr","l_curly_token","assoc_items","r_curly_token","l_curly_token","extern_items","r_curly_token","const_token","colon_token","ty","eq_token","default_val","lifetime","eq_token","default_type","for_token","generic_param_list","lifetime","ty","expr","semicolon_token","let_token","pat","colon_token","ty","eq_token","initializer","semicolon_token","l_brack_token","exprs","expr","semicolon_token","r_brack_token","expr","dot_token","await_token","box_token","expr","break_token","lifetime","expr","expr","expr","as_token","ty","static_token","async_token","move_token","param_list","ret_type","body","continue_token","lifetime","label","try_token","unsafe_token","async_token","const_token","block_expr","expr","dot_token","name_ref","for_token","pat","in_token","iterable","if_token","condition","else_token","l_brack_token","r_brack_token","loop_token","match_token","expr","match_arm_list","receiver","dot_token","name_ref","generic_arg_list","l_paren_token","expr","r_paren_token","path","expr","path","record_expr_field_list","amp_token","raw_token","mut_token","const_token","expr","return_token","expr","expr","question_mark_token","l_paren_token","fields","r_paren_token","while_token","condition","yield_token","expr","lifetime","colon_token","l_curly_token","fields","dotdot_token","spread","r_curly_token","name_ref","colon_token","expr","l_paren_token","args","r_paren_token","let_token","pat","eq_token","expr","l_curly_token","arms","r_curly_token","pat","guard","fat_arrow_token","expr","comma_token","if_token","expr","l_brack_token","ty","semicolon_token","expr","r_brack_token","dyn_token","type_bound_list","const_token","async_token","unsafe_token","abi","fn_token","param_list","ret_type","for_token","generic_param_list","ty","impl_token","type_bound_list","underscore_token","macro_call","excl_token","l_paren_token","ty","r_paren_token","star_token","const_token","mut_token","ty","amp_token","lifetime","mut_token","ty","l_brack_token","ty","r_brack_token","l_paren_token","fields","r_paren_token","lifetime","question_mark_token","ty","ref_token","mut_token","at_token","pat","box_token","pat","dotdot_token","literal","macro_call","pats","l_paren_token","pat","r_paren_token","path","underscore_token","path","record_pat_field_list","amp_token","mut_token","pat","l_brack_token","pats","r_brack_token","l_paren_token","fields","r_paren_token","path","l_paren_token","fields","r_paren_token","const_token","block_expr","l_curly_token","fields","dotdot_token","r_curly_token","name_ref","colon_token","pat","name","visibility","loop_body","label","arg_list","items","generic_param_list","where_clause","type_bound_list","colon_token","attrs","has_atom_attr","doc_comments","from_syntax_node","kind","is_inner","is_outer","prefix","doc_comment","is_line","is_block","prefix","spans_multiple_lines","is_raw","map_range_up","value","quote_offsets","text_range_between_quotes","open_quote_text_range","close_quote_text_range","is_raw","lex_format_specifier","radix","value","suffix","suffix","ALL","text","text","text","as_tuple_field","new","is_inner","is_outer","as_simple_atom","as_simple_call","simple_name","kind","parent_path","crate_token","self_token","super_token","kind","parent_path","as_single_segment","first_qualifier_or_self","first_segment","segments","is_simple_path","parent_use_tree","has_inner_comment","self_ty","trait_","kind","for_field_name","for_name_ref","field_name","as_name_ref","text","for_field_name_ref","for_field_name","field_name","parent_enum","kind","index_token","field_access","components","kind","kind","kind","lifetime_bounds","start","end","left_delimiter_token","right_delimiter_token","lifetime_params","type_params","const_params","is_block_like","name_ref","then_branch","else_branch","blocks","op_kind","op_token","is_assignment","op_details","op_kind","op_token","lhs","rhs","sub_exprs","op_kind","op_token","start","end","base","index","kind","token","kind","effect","is_standalone","parent_record_lit","replace_op","with_body","with_generic_param_list","with_assoc_item_list","append_items","append_item","append_field","insert_field","remove_bounds","remove_bounds","with_segment","with_generic_args","with_turbo_fish","with_use_tree","with_path","with_use_tree_list","split_prefix","append_arms","remove_placeholder","append_arm","append_params","append_param","add_generic_param","add_predicate","remove","remove","remove","is_keyword","is_punct","is_literal","from_keyword","from_char","is_trivia","new","to_owned","kind","text_len","kind","text_len","text_range","index","kind","parent","ancestors","first_token","last_token","next_sibling_or_token","prev_sibling_or_token","detach","text_range","index","kind","parent","ancestors","next_sibling_or_token","prev_sibling_or_token","detach","into_node","into_token","as_node","as_token","len","is_empty","contains_char","find_char","char_at","slice","try_fold_chunks","try_for_each_chunk","for_each_chunk","new","at","empty","up_to","start","end","len","is_empty","contains","contains_inclusive","contains_range","intersect","cover","cover_offset","checked_add","checked_sub","ordering","of","checked_add","checked_sub","map","right_biased","left_biased","map","new_inline_from_ascii","new_inline","new","as_str","to_string","len","is_empty","is_heap_allocated"],"q":["syntax","syntax::display","","","","syntax","syntax::algo","","","","","","","","","","","","","","","","","","","","","","","","syntax","syntax::ast","syntax::ast::edit","","","","","","","","","","","","","","syntax::ast","syntax::ast::edit_in_place","","","syntax::ast","syntax::ast::make","syntax::ast::make::ext","","","","","","","syntax::ast::make","syntax::ast::make::tokens","","","","","","","","","syntax::ast::make","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast","","syntax::ast::ArrayExprKind","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast::PathSegmentKind","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax","syntax::utils","syntax","syntax::ted","","","","","","","","","","","","","","","","","","","syntaxsyntax::ast","","","","","","","","syntax","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::algo","","","","","","","","","","","","","","","","","","","","","","","","syntax::astsyntax::ast::edit","","","","","","","","","","syntax::ast::make::tokens","","","","","","","syntax::ast","","","","","","","","","","syntax::ted","","","","","","","syntaxsyntax::astsyntax","","","","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast::edit","syntax::ast","","syntax","","","","syntax::algo","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast::edit","syntax::ast","syntax","","syntax::algo","syntax","","","","","","","","","","","","syntax::algo","","syntax::astsyntax","","","","","","","","","","syntax::algo","","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast::edit","syntax::ast","syntax::ted","syntax","","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast::edit","","syntax","","","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax","","","","","","","","","","","","","","","","","syntax::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This module contains utilities for turning SyntaxNodes …","","","","","FIXME: write short doc here","Returns ancestors of the node at the offset, sorted by …","Finds a node of specific Ast type at offset. Note that …","","Skip to next non <code>trivia</code> token","Finds the first sibling in the given direction which is …","","","","","","","","","","","","Finds a (potentially minimal) diff, which, applied to <code>from</code>…","Adds specified children (tokens or nodes) to the current …","Replaces all nodes in <code>to_delete</code> with nodes from <code>to_insert</code>","","","","","Returns a node that encompasses all replacements to be …","Abstract Syntax Tree, layered on top of untyped <code>SyntaxNode</code>…","This module contains functions for editing syntax trees. …","","","","","","","","","","","","","","","Structural editing for ast.","","","","This module contains free-standing functions for creating …","While the parent module defines basic atomic “…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a tuple of patterns from an iterator of patterns.","","","","","","Returns a <code>BindPat</code> if the path has just one segment, a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>||</code> operator for boolean OR","The <code>&&</code> operator for boolean AND","The <code>==</code> operator for equality testing","The <code>!=</code> operator for equality testing","The <code><=</code> operator for lesser-equal testing","The <code>>=</code> operator for greater-equal testing","The <code><</code> operator for comparison","The <code>></code> operator for comparison","The <code>+</code> operator for addition","The <code>*</code> operator for multiplication","The <code>-</code> operator for subtraction","The <code>/</code> operator for division","The <code>%</code> operator for remainder after division","The <code><<</code> operator for left shift","The <code>>></code> operator for right shift","The <code>^</code> operator for bitwise XOR","The <code>|</code> operator for bitwise OR","The <code>&</code> operator for bitwise AND","The <code>=</code> operator for assignment","The <code>+=</code> operator for assignment after addition","The <code>/=</code> operator for assignment after division","The <code>*=</code> operator for assignment after multiplication","The <code>%=</code> operator for assignment after remainders","The <code>>>=</code> operator for assignment after shifting right","The <code><<=</code> operator for assignment after shifting left","The <code>-=</code> operator for assignment after subtraction","The <code>|=</code> operator for assignment after bitwise OR","The <code>&=</code> operator for assignment after bitwise AND","The <code>^=</code> operator for assignment after bitwise XOR","","","","","","","","","","","","","","","","","","","The <code>*</code> operator for dereferencing","The <code>!</code> operator for logical inversion","The <code>-</code> operator for negation","","<code>..</code>","<code>..=</codeasically an owned <code>dyn AttrsOwner</code> without extra boxing.","","","","","","","","","","","","","","","","","","","","","","","self","&self","&mut self","","","","","","","","","","Trait","for<’a> …","’a","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The main trait to go from untyped <code>SyntaxNode</code>  to a typed …","","","","","Like <code>AstNode</code>, but wraps tokens rather than interior nodes.","","","","","An iterator over <code>SyntaxNode</code> children of a particular AST …","A set of utils methods to reuse on other abstraction …","","Primitive tree editor, ed for trees.","Utility trait to allow calling <code>ted</code> functions with …","","","","","","","","","","","","","","","","","","","Returns <code>SyntaxKind</code> and <code>Option<SyntaxError></code> if <code>text</code> parses …","The same as <code>lex_single_syntax_kind()</code> but returns only …","Break a string up into its component tokens. Beware that …","A token of Rust source.","The kind of token.","The length of the token.","Like <code>SyntaxNodePtr</code>, but remembers the type of node","A pointer to a syntax node inside a file. It can be used …","Represents the result of unsuccessful tokenization, …","","","","","","","","The kind of syntax node, e.g. <code>IDENT</code>, <code>USE_KW</code>, or <code>STRUCT</codenternal node in the immutable tree. It has other nodes …","","","","","A range in text, represented as a pair of [<code>TextSize</code>][…","A measure of text length. Also, equivalently, an index …","There might be zero, one or two leaves at a given offset.","No leaves at offset – possible for the empty file.","Only a single leaf at offset.","Offset is exactly between two leaves.","<code>WalkEvent</code> describes tree walking process.","Fired before traversing the node.","Fired after the node is traversed.","A <code>SmolStr</code> is a string type that has the following …","<code>Parse</code> is the result of the parsing: a syntax tree and a …","","","","","","","","","","","Returns <code>text</code>, parsed as a path, but only if it has no …","Returns <code>text</code>, parsed as a pattern, but only if it has no …","Returns <code>text</code>, parsed as an expression, but only if it has …","Returns <code>text</code>, parsed as an item, but only if it has no …","Returns <code>text</code>, parsed as an type reference, but only if it …","Returns <code>text</code>, parsed as an attribute, but only if it has …","Returns <code>text</code>, parsed as statement, but only if it has no …","Matches a <code>SyntaxNode</code> against an <code>ast</code> typeeturns the textual content of a doc comment node as a …","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the attr_kind is [<code>Inner</code>].","Returns <code>true</code> if the attr_kind is [<code>Outer</code>].","","","","","","","","","","","","","","","","","","","","","","","Deals with field init shorthand","","","","","Deals with field init shorthand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false if the block is an intrinsic part of the syntax and …","","","","","","","","","","","","","","","","","","Splits off the given prefix, making it the path component …","","","","","","","","","","","","","","","","","Creates new Node.","","Returns kind of this element.","Returns the length of the text covered by this element.","Returns kind of this element.","Returns the length of the text covered by this element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","Create a zero-length range at the specified offset (…","Create a range up to the given end (<code>..end</code>).","The start point of this range.","The end point of this range.","The size of this range.","Check if this range is empty.","Check if this range contains an offset.","Check if this range contains an offset.","Check if this range completely contains another range.","The range covered by both ranges, if it exists. If the …","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","Add an offset to this range.","Subtract an offset from this range.","Relative order of the two ranges (overlapping ranges are …","The text size of some primitive text-like object.","Checked addition. Returns <code>None</code> if overflow occurred.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","Convert to option, preferring the right leaf in case of a …","Convert to option, preferring the left leaf in case of a …","","","Constructs inline variant of <code>SmolStr</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,0,0,0,0,3,3,3,3,0,0,0,0,4,4,4,4,0,5,5,5,5,5,5,5,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,9,8,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,0,12,12,0,13,13,13,13,13,13,13,0,14,14,14,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,22,22,0,23,23,23,0,24,24,24,24,0,25,25,25,25,0,26,26,26,0,0,0,0,0,0,0,27,27,0,0,28,28,0,29,29,0,30,30,30,0,31,31,0,32,32,33,33,32,32,32,0,34,34,34,0,35,35,35,0,36,36,36,0,37,37,37,0,38,38,38,38,38,0,39,39,0,40,40,0,41,41,0,42,42,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,44,44,0,45,45,45,45,0,46,0,47,0,48,48,0,49,0,50,0,51,51,0,52,52,0,53,53,0,54,0,0,55,55,55,55,0,56,56,56,56,0,0,0,0,0,57,0,58,58,58,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,59,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,0,61,61,0,0,62,62,0,0,0,0,63,63,63,0,64,64,0,0,65,65,65,65,65,65,65,65,0,66,67,21,18,19,17,68,20,0,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,59,59,59,59,59,59,59,59,59,59,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,74,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,67,67,67,67,67,67,67,67,67,67,67,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,87,68,68,68,68,68,68,68,68,68,68,68,88,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,66,66,66,66,66,66,66,66,66,66,66,91,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,112,112,113,113,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,117,117,117,117,118,118,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,138,138,138,139,139,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,162,162,163,163,163,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,178,178,179,179,179,179,179,179,179,179,179,179,179,180,180,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,182,182,183,183,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,184,184,185,185,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,194,194,195,195,195,195,195,195,195,195,195,195,195,196,196,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,199,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,200,200,200,200,200,200,200,200,200,200,200,201,201,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,202,202,202,202,203,203,203,203,203,203,203,203,203,203,203,204,204,204,204,204,204,204,204,204,204,204,205,205,205,205,205,205,205,205,205,205,205,206,206,206,206,206,206,206,206,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,43,43,43,43,43,43,43,45,45,45,45,45,45,45,45,45,45,29,29,29,29,29,29,29,29,29,29,207,207,207,207,207,207,207,27,27,27,27,27,27,27,27,27,27,32,32,32,32,32,32,32,32,32,32,36,36,36,36,36,36,36,36,36,36,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,28,28,28,28,28,28,28,28,28,28,35,35,35,35,35,35,35,34,34,34,34,34,34,34,34,34,34,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,12,12,12,12,12,12,12,12,12,12,14,14,14,14,14,14,14,14,14,14,10,10,10,10,10,10,10,10,10,10,15,15,15,15,15,15,15,15,15,15,8,8,8,8,8,8,8,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,4,4,4,4,4,4,4,4,4,4,7,7,7,7,7,7,7,208,208,208,208,208,208,208,208,208,208,58,58,58,58,58,58,58,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,209,209,209,209,209,209,209,209,209,209,209,62,62,62,62,62,62,62,62,62,62,62,210,210,210,210,210,210,210,210,210,210,210,211,211,211,211,211,211,211,211,211,211,212,212,212,212,212,212,212,212,212,212,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,213,213,213,213,213,213,213,213,213,213,213,65,65,65,65,65,65,65,65,65,65,63,63,62,209,61,209,62,62,62,62,62,62,62,62,62,62,62,212,61,209,209,210,210,62,62,210,61,62,209,62,210,209,210,63,209,61,64,62,62,61,64,62,63,210,61,209,209,212,211,211,212,211,212,211,212,211,212,212,212,211,211,211,212,212,212,211,211,212,211,212,212,211,212,212,211,212,211,212,60,60,60,60,60,60,60,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,29,202,95,95,96,96,102,102,101,101,92,92,74,74,74,75,75,75,76,76,76,67,67,67,77,77,77,78,78,78,79,79,79,80,80,80,81,81,81,82,82,82,83,83,83,84,84,84,85,85,85,86,86,86,87,87,87,68,68,68,88,88,88,89,89,89,90,90,90,66,66,66,91,91,91,92,92,92,93,93,93,94,94,94,95,95,95,96,96,96,97,97,97,98,98,98,99,99,99,100,100,100,101,101,101,102,102,102,103,103,103,104,104,104,105,105,105,106,106,106,107,107,107,108,108,108,109,109,109,110,110,110,111,111,111,112,112,112,113,113,113,114,114,114,115,115,115,116,116,116,117,117,117,118,118,118,119,119,119,120,120,120,121,121,121,122,122,122,123,123,123,124,124,124,125,125,125,126,126,126,127,127,127,128,128,128,129,129,129,130,130,130,131,131,131,132,132,132,133,133,133,134,134,134,135,135,135,136,136,136,137,137,137,138,138,138,139,139,139,140,140,140,141,141,141,142,142,142,143,143,143,144,144,144,145,145,145,146,146,146,147,147,147,148,148,148,149,149,149,150,150,150,151,151,151,152,152,152,153,153,153,154,154,154,155,155,155,156,156,156,157,157,157,158,158,158,159,159,159,160,160,160,161,161,161,162,162,162,163,163,163,164,164,164,165,165,165,166,166,166,167,167,167,168,168,168,169,169,169,170,170,170,171,171,171,172,172,172,173,173,173,174,174,174,175,175,175,176,176,176,177,177,177,178,178,178,179,179,179,180,180,180,181,181,181,182,182,182,183,183,183,184,184,184,185,185,185,186,186,186,187,187,187,188,188,188,189,189,189,190,190,190,191,191,191,192,192,192,193,193,193,194,194,194,195,195,195,196,196,196,197,197,197,198,198,198,199,199,199,16,16,16,17,17,17,18,18,18,19,19,19,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,20,20,20,29,29,29,207,207,207,30,30,30,200,200,200,201,201,201,202,202,202,203,203,203,204,204,204,205,205,205,214,215,216,73,71,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,23,23,23,24,24,24,24,25,25,25,25,26,26,26,29,29,30,30,30,4,206,208,70,59,71,72,1,74,75,76,67,77,78,79,80,81,82,83,84,85,86,87,68,88,89,90,66,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,16,17,18,19,20,21,22,23,24,25,26,200,201,202,203,204,205,39,40,41,45,29,27,32,36,30,31,28,34,37,12,14,10,15,13,11,4,208,65,69,3,59,73,70,70,59,59,71,71,72,73,73,73,1,1,74,74,75,75,76,76,67,67,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,68,68,88,88,89,89,90,90,66,66,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,200,200,201,201,202,202,203,203,204,204,205,205,39,39,40,41,45,29,29,27,32,32,36,36,31,31,28,28,34,37,37,12,12,14,10,15,13,13,11,11,65,65,59,73,73,70,59,71,72,73,1,2,3,74,75,76,67,77,78,79,80,81,82,83,84,85,86,87,68,88,89,90,66,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,16,17,18,19,20,21,22,23,24,25,26,200,201,202,203,204,205,39,40,41,43,45,29,27,32,36,30,31,28,34,37,12,14,10,15,13,11,4,208,58,65,70,73,16,17,18,19,20,21,22,23,24,25,26,74,75,76,67,77,78,79,80,81,82,83,84,85,86,87,68,88,89,90,66,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,31,4,4,70,59,71,72,74,75,76,67,77,78,79,80,81,82,83,84,85,86,87,68,88,89,90,66,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,16,17,18,19,20,21,22,23,24,25,26,200,201,202,203,204,205,34,37,14,10,15,13,69,69,69,69,69,70,70,70,70,71,71,71,72,72,72,72,73,74,74,75,75,75,75,76,67,67,67,77,77,77,77,77,77,77,77,77,78,78,78,78,79,79,79,79,79,79,80,80,81,82,83,83,83,84,85,86,87,87,87,87,68,68,68,68,68,68,68,68,88,88,88,88,88,88,90,90,66,91,91,91,91,91,91,91,91,92,92,93,93,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,97,97,97,98,98,98,99,99,99,100,100,100,100,100,100,100,101,101,101,102,102,102,102,103,103,103,103,103,104,104,105,105,105,106,106,106,106,106,107,107,108,108,109,109,109,109,109,110,110,110,111,112,112,112,113,113,114,114,114,114,115,115,115,115,115,116,116,116,116,117,117,117,118,118,118,119,119,120,121,121,121,122,122,122,123,123,123,124,124,124,125,125,125,125,125,126,127,127,128,128,128,128,129,129,130,130,130,130,130,130,130,131,131,131,131,131,132,132,132,134,134,135,135,135,136,137,137,137,138,138,138,138,138,138,139,139,140,140,140,140,140,140,141,141,141,142,142,142,142,143,143,143,144,144,146,147,147,147,148,148,148,148,149,149,149,150,151,153,153,154,154,154,154,154,155,155,156,156,157,157,157,158,158,159,159,160,160,161,161,161,161,161,162,162,162,163,163,163,164,164,164,164,165,165,165,166,166,166,166,166,167,167,168,168,168,168,168,169,169,170,170,170,170,170,170,170,171,171,171,172,172,173,174,175,176,176,176,177,177,177,177,178,178,178,178,179,179,179,180,180,180,181,181,181,182,182,182,182,183,183,184,185,186,187,188,188,188,189,190,192,192,193,193,193,194,194,194,195,195,195,196,196,196,196,197,197,198,198,198,198,199,199,199,46,47,48,48,49,50,51,51,52,52,53,53,54,206,201,201,201,201,201,40,40,39,200,202,202,202,202,202,202,202,203,44,204,204,204,205,45,76,74,75,75,207,27,27,68,68,68,68,77,77,77,77,77,67,67,67,67,67,109,110,110,96,96,101,162,162,162,30,31,199,199,199,122,122,141,141,194,115,181,106,126,191,191,88,88,112,112,112,18,18,143,143,143,151,151,10,133,133,133,133,133,133,152,152,152,152,144,144,131,145,145,140,114,162,133,95,95,96,123,123,161,161,103,127,67,77,77,105,109,109,109,165,165,165,112,112,112,113,86,109,105,60,60,60,60,60,60,209,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,210,210,210,210,210,210,210,210,210,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,212,212,212,63,63,63,64,213,213,213,213,213,213,213,213],"f":[null,[[["fn",3]],["string",3]],[[["const",3]],["string",3]],[[["typealias",3]],["string",3]],[[["macro",4]],["string",3]],null,[[["textsize",3],["syntaxnode",6]]],[[["textsize",3],["syntaxnode",6]],[["option",4],["astnode",8]]],[[["textrange",3],["syntaxnode",6]],[["option",4],["astnode",8]]],[[["syntaxtoken",6],["direction",4]],[["syntaxtoken",6],["option",4]]],[[["syntaxelement",6],["direction",4]],[["syntaxelement",6],["option",4]]],[[["syntaxnode",6]],[["option",4],["syntaxnode",6]]],[[["direction",4]],[["astnode",8],["option",4]]],[[["syntaxnode",6]],["bool",15]],null,null,null,null,null,null,[[["texteditbuilder",3]]],[[],["bool",15]],[[["syntaxnode",6]],["treediff",3]],[[["insertposition",4],["syntaxelement",6],["syntaxnode",6]],["syntaxnode",6]],[[["syntaxelement",6],["rangeinclusive",3],["syntaxnode",6]],["syntaxnode",6]],null,[[]],[[["syntaxnode",6]],["syntaxnode",6]],[[],["astnode",8]],[[],[["option",4],["syntaxnode",6]]],null,null,[[],["attrsowner",8]],null,null,[[["syntaxelement",6]],["indentlevel",3]],[[["syntaxnode",6]],["indentlevel",3]],[[["syntaxtoken",6]],["indentlevel",3]],null,[[["insertposition",4],["syntaxelement",6]]],[[["syntaxelement",6],["rangeinclusive",3]]],[[["astnode",8]]],[[],["indentlevel",3]],[[["indentlevel",3]]],[[["indentlevel",3]]],[[]],null,null,[[],["genericparamlist",3]],[[],["whereclause",3]],null,null,[[["str",15]],["path",3]],[[],["expr",4]],[[],["expr",4]],[[],["blockexpr",3]],[[],["type",4]],[[["type",4]],["type",4]],[[["type",4]],["type",4]],null,[[],["syntaxtoken",6]],[[["str",15]],["syntaxtoken",6]],[[["str",15]],["syntaxtoken",6]],[[["str",15]],["syntaxtoken",6]],[[],["syntaxtoken",6]],[[],["syntaxtoken",6]],null,[[["str",15]],["wsbuilder",3]],[[],["syntaxtoken",6]],[[["str",15]],["name",3]],[[["str",15]],["nameref",3]],[[["str",15]],["lifetime",3]],[[["str",15]],["type",4]],[[],["type",4]],[[],["type",4]],[[["bool",15],["type",4]],["type",4]],[[["path",3]],["type",4]],[[],["associtemlist",3]],[[["path",3]],["impl",3]],[[["nameref",3]],["pathsegment",3]],[[],["pathsegment",3]],[[],["pathsegment",3]],[[],["pathsegment",3]],[[["pathsegment",3]],["path",3]],[[["pathsegment",3],["path",3]],["path",3]],[[["path",3]],["path",3]],[[["bool",15]],["path",3]],[[["str",15]],["path",3]],[[],["usetree",3]],[[["rename",3],["usetreelist",3],["option",4],["bool",15],["path",3],["option",4]],["usetree",3]],[[],["usetreelist",3]],[[["option",4],["visibility",3],["usetree",3]],["use",3]],[[["path",3],["recordexprfieldlist",3]],["recordexpr",3]],[[],["recordexprfieldlist",3]],[[["nameref",3],["expr",4],["option",4]],["recordexprfield",3]],[[["name",3],["option",4],["visibility",3],["type",4]],["recordfield",3]],[[["expr",4],["option",4]],["blockexpr",3]],[[],["expr",4]],[[["str",15]],["literal",3]],[[],["expr",4]],[[["path",3]],["expr",4]],[[],["expr",4]],[[["expr",4],["option",4]],["expr",4]],[[["expr",4],["option",4]],["expr",4]],[[["expr",4]],["expr",4]],[[["expr",4],["matcharmlist",3]],["expr",4]],[[["condition",3],["option",4],["elsebranch",4],["blockexpr",3]],["expr",4]],[[["pat",4],["expr",4],["blockexpr",3]],["expr",4]],[[["expr",4],["syntaxkind",4]],["expr",4]],[[["expr",4],["arglist",3]],["expr",4]],[[["expr",4],["arglist",3],["str",15]],["expr",4]],[[["expr",4],["bool",15]],["expr",4]],[[["expr",4]],["expr",4]],[[],["expr",4]],[[["expr",4]],["expr",4]],[[["expr",4],["option",4],["pat",4]],["condition",3]],[[],["arglist",3]],[[["name",3]],["identpat",3]],[[["name",3]],["identpat",3]],[[],["wildcardpat",3]],[[["str",15]],["literalpat",3]],[[],["tuplepat",3]],[[["path",3]],["tuplestructpat",3]],[[["path",3]],["recordpat",3]],[[["path",3],["recordpatfieldlist",3]],["recordpat",3]],[[],["recordpatfieldlist",3]],[[["nameref",3],["pat",4]],["recordpatfield",3]],[[["path",3]],["pat",4]],[[["expr",4]],["matcharm",3]],[[],["matcharmlist",3]],[[["path",3]],["wherepred",3]],[[],["whereclause",3]],[[["pat",4],["expr",4],["option",4]],["letstmt",3]],[[["expr",4]],["exprstmt",3]],[[["pat",4],["type",4]],["param",3]],[[["type",4]],["rettype",3]],[[["option",4],["selfparam",3]],["paramlist",3]],[[["typeboundlist",3],["name",3],["option",4]],["typeparam",3]],[[["lifetime",3]],["lifetimeparam",3]],[[],["genericparamlist",3]],[[],["visibility",3]],[[],["visibility",3]],[[],["tuplefieldlist",3]],[[],["recordfieldlist",3]],[[["option",4],["visibility",3],["type",4]],["tuplefield",3]],[[["option",4],["name",3],["fieldlist",4]],["variant",3]],[[["name",3],["option",4],["option",4],["option",4],["rettype",3],["blockexpr",3],["genericparamlist",3],["paramlist",3],["visibility",3]],["fn",3]],[[["genericparamlist",3],["name",3],["option",4],["visibility",3],["option",4],["fieldlist",4]],["struct",3]],[[["syntaxkind",4]],["syntaxtoken",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4],["vec",3]]],[[]],null,null,null,null,null,null,[[],[["option",4],["name",3]]],null,[[],[["option",4],["visibility",3]]],null,[[],[["option",4],["blockexpr",3]]],[[],[["option",4],["label",3]]],null,[[],[["option",4],["arglist",3]]],null,[[],[["item",4],["astchildren",3]]],null,[[],[["option",4],["genericparamlist",3]]],[[],[["whereclause",3],["option",4]]],null,[[],[["option",4],["typeboundlist",3]]],[[],[["syntaxtoken",6],["option",4]]],null,[[],[["attr",3],["astchildren",3]]],[[["str",15]],["bool",15]],null,[[],["commentiter",3]],null,null,[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[]],null,[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[],["str",15]],null,null,[[["path",3]],["string",3]],null,null,[[],["syntaxelement",6]],null,[[],["position",3]],[[],["position",3]],[[],["position",3]],[[],["position",3]],[[["position",3]]],[[["position",3]]],[[["vec",3],["position",3],["syntaxelement",6]]],[[["vec",3],["position",3],["syntaxelement",6]]],[[]],[[["syntaxelement",6],["rangeinclusive",3]]],[[]],[[]],[[["vec",3],["syntaxelement",6]]],[[["vec",3],["syntaxelement",6],["rangeinclusive",3]]],[[]],[[]],[[["str",15]],["option",4]],[[["str",15]],[["option",4],["syntaxkind",4]]],[[["str",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["syntaxnode",6]],[[],[["parse",3],["syntaxnode",6]]],[[]],[[]],[[],[["result",4],["arc",3]]],[[],[["option",4],["parse",3]]],[[],["string",3]],[[["indel",3]],[["sourcefile",3],["parse",3]]],null,[[["str",15]],[["sourcefile",3],["parse",3]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["option",4]],[[]],[[]],[[]],[[]],[[["greennodedata",3],["cow",4]],["greennode",3]],[[["greennode",3]],[["nodeortoken",4],["greennodedata",3],["greentokendata",3]]],[[["syntaxnode",3]],[["nodeortoken",4],["syntaxtoken",3],["syntaxnode",3]]],[[["syntaxtoken",3]],[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]]],[[["greennodedata",3],["cow",4]],[["nodeortoken",4],["greennode",3],["greentoken",3]]],[[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]],[["nodeortoken",4],["syntaxtoken",3],["syntaxnode",3]]],[[["nodeortoken",4],["syntaxtoken",3],["syntaxnode",3]],[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]]],[[["greentoken",3]],[["nodeortoken",4],["greennode",3],["greentoken",3]]],[[["greennode",3]],[["nodeortoken",4],["greennode",3],["greentoken",3]]],[[["syntaxnode",3]],[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]]],[[["greentoken",3]],[["nodeortoken",4],["greennodedata",3],["greentokendata",3]]],[[["syntaxtoken",3]],[["nodeortoken",4],["syntaxtoken",3],["syntaxnode",3]]],[[["delta",4],["textsize",3]]],[[["direction",4]],["bool",15]],[[["greennode",3]],["bool",15]],[[["greennode",3]],["bool",15]],[[["str",15]],["bool",15]],[[["syntaxtext",3]],["bool",15]],[[["nodeortoken",4]],["bool",15]],[[["nodeortoken",4]],["bool",15]],[[["str",15]],["bool",15]],[[["direction",4]],["ordering",4]],[[["nodeortoken",4]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["greennodedata",3]],[[],["syntaxtext",3]],[[],["tokenatoffset",4]],[[],["greennode",3]],[[],["direction",4]],[[],["walkevent",4]],[[],["nodeortoken",4]],[[["nodeortoken",4]],[["ordering",4],["option",4]]],[[["direction",4]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["greennodedata",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[]],[[]],[[["u32",15]],["textsize",3]],[[]],[[]],[[["textrange",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["ordering",4]],[[],[["bound",4],["textsize",3]]],[[],[["bound",4],["textsize",3]]],[[],["textsize",3]],[[],["textrange",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["textrange",3]],[[["usize",15]],[["result",4],["textsize",3],["tryfrominterror",3]]],[[]],[[]],[[["textsize",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["syntaxkind",4]],["ordering",4]],[[],["syntaxkind",4]],[[]],[[["u16",15]],["syntaxkind",4]],[[["syntaxkind",4]],[["ordering",4],["option",4]]],[[["syntaxkind",4]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[],[["result",4],["smolstr",3]]],[[]],[[],["smolstr",3]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[["string",3]],["bool",15]],[[["str",15]],["bool",15]],[[["smolstr",3]],["bool",15]],[[["smolstr",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[],["result",4]],[[],["str",15]],[[],["smolstr",3]],[[],["smolstr",3]],[[["smolstr",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["str",15]],[[],[["option",4],["name",3]]],[[],[["option",4],["vec",3]]],[[],["genericparamlist",3]],[[],["whereclause",3]],[[],["genericparamlist",3]],[[],["whereclause",3]],[[],["genericparamlist",3]],[[],["whereclause",3]],[[],["genericparamlist",3]],[[],["whereclause",3]],[[],["genericparamlist",3]],[[],["whereclause",3]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[],["syntaxnode",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[["syntaxkind",4]],["bool",15]],[[["syntaxtoken",6]],["option",4]],[[],["syntaxtoken",6]],[[],["syntaxelement",6]],[[],["syntaxelement",6]],[[],["syntaxelement",6]],[[],["str",15]],[[["astptr",3]],["syntaxnodeptr",3]],[[["typearg",3]],["genericarg",4]],[[["assoctypearg",3]],["genericarg",4]],[[["lifetimearg",3]],["genericarg",4]],[[["constarg",3]],["genericarg",4]],[[["arraytype",3]],["type",4]],[[["dyntraittype",3]],["type",4]],[[["fnptrtype",3]],["type",4]],[[["fortype",3]],["type",4]],[[["impltraittype",3]],["type",4]],[[["infertype",3]],["type",4]],[[["macrotype",3]],["type",4]],[[["nevertype",3]],["type",4]],[[["parentype",3]],["type",4]],[[["pathtype",3]],["type",4]],[[["ptrtype",3]],["type",4]],[[["reftype",3]],["type",4]],[[["slicetype",3]],["type",4]],[[["tupletype",3]],["type",4]],[[["arrayexpr",3]],["expr",4]],[[["awaitexpr",3]],["expr",4]],[[["binexpr",3]],["expr",4]],[[["blockexpr",3]],["expr",4]],[[["boxexpr",3]],["expr",4]],[[["breakexpr",3]],["expr",4]],[[["callexpr",3]],["expr",4]],[[["castexpr",3]],["expr",4]],[[["closureexpr",3]],["expr",4]],[[["continueexpr",3]],["expr",4]],[[["effectexpr",3]],["expr",4]],[[["fieldexpr",3]],["expr",4]],[[["forexpr",3]],["expr",4]],[[["ifexpr",3]],["expr",4]],[[["indexexpr",3]],["expr",4]],[[["literal",3]],["expr",4]],[[["loopexpr",3]],["expr",4]],[[["macrocall",3]],["expr",4]],[[["macrostmts",3]],["expr",4]],[[["matchexpr",3]],["expr",4]],[[["methodcallexpr",3]],["expr",4]],[[["parenexpr",3]],["expr",4]],[[["pathexpr",3]],["expr",4]],[[["prefixexpr",3]],["expr",4]],[[["rangeexpr",3]],["expr",4]],[[["recordexpr",3]],["expr",4]],[[["refexpr",3]],["expr",4]],[[["returnexpr",3]],["expr",4]],[[["tryexpr",3]],["expr",4]],[[["tupleexpr",3]],["expr",4]],[[["whileexpr",3]],["expr",4]],[[["yieldexpr",3]],["expr",4]],[[["const",3]],["item",4]],[[["enum",3]],["item",4]],[[["externblock",3]],["item",4]],[[["externcrate",3]],["item",4]],[[["fn",3]],["item",4]],[[["impl",3]],["item",4]],[[["macrocall",3]],["item",4]],[[["macrorules",3]],["item",4]],[[["macrodef",3]],["item",4]],[[["module",3]],["item",4]],[[["static",3]],["item",4]],[[["struct",3]],["item",4]],[[["trait",3]],["item",4]],[[["typealias",3]],["item",4]],[[["union",3]],["item",4]],[[["use",3]],["item",4]],[[["exprstmt",3]],["stmt",4]],[[["item",4]],["stmt",4]],[[["letstmt",3]],["stmt",4]],[[["identpat",3]],["pat",4]],[[["boxpat",3]],["pat",4]],[[["restpat",3]],["pat",4]],[[["literalpat",3]],["pat",4]],[[["macropat",3]],["pat",4]],[[["orpat",3]],["pat",4]],[[["parenpat",3]],["pat",4]],[[["pathpat",3]],["pat",4]],[[["wildcardpat",3]],["pat",4]],[[["rangepat",3]],["pat",4]],[[["recordpat",3]],["pat",4]],[[["refpat",3]],["pat",4]],[[["slicepat",3]],["pat",4]],[[["tuplepat",3]],["pat",4]],[[["tuplestructpat",3]],["pat",4]],[[["constblockpat",3]],["pat",4]],[[["recordfieldlist",3]],["fieldlist",4]],[[["tuplefieldlist",3]],["fieldlist",4]],[[["enum",3]],["adt",4]],[[["struct",3]],["adt",4]],[[["union",3]],["adt",4]],[[["const",3]],["associtem",4]],[[["fn",3]],["associtem",4]],[[["macrocall",3]],["associtem",4]],[[["typealias",3]],["associtem",4]],[[["fn",3]],["externitem",4]],[[["macrocall",3]],["externitem",4]],[[["static",3]],["externitem",4]],[[["typealias",3]],["externitem",4]],[[["constparam",3]],["genericparam",4]],[[["lifetimeparam",3]],["genericparam",4]],[[["typeparam",3]],["genericparam",4]],[[["macrorules",3]]],[[["macrodef",3]]],[[["nameref",3]],["namelike",4]],[[["name",3]],["namelike",4]],[[["lifetime",3]],["namelike",4]],[[["u8",15]],["indentlevel",3]],[[],[["option",4],["comment",3]]],[[],["option",4]],[[],["syntaxerror",3]],[[],["token",3]],[[],["syntaxnodeptr",3]],[[],["astptr",3]],[[],["insertposition",4]],[[],["name",3]],[[],["nameref",3]],[[],["lifetime",3]],[[],["path",3]],[[],["pathsegment",3]],[[],["genericarglist",3]],[[],["paramlist",3]],[[],["rettype",3]],[[],["pathtype",3]],[[],["typearg",3]],[[],["assoctypearg",3]],[[],["lifetimearg",3]],[[],["constarg",3]],[[],["typeboundlist",3]],[[],["macrocall",3]],[[],["attr",3]],[[],["tokentree",3]],[[],["macroitems",3]],[[],["macrostmts",3]],[[],["sourcefile",3]],[[],["const",3]],[[],["enum",3]],[[],["externblock",3]],[[],["externcrate",3]],[[],["fn",3]],[[],["impl",3]],[[],["macrorules",3]],[[],["macrodef",3]],[[],["module",3]],[[],["static",3]],[[],["struct",3]],[[],["trait",3]],[[],["typealias",3]],[[],["union",3]],[[],["use",3]],[[],["visibility",3]],[[],["itemlist",3]],[[],["rename",3]],[[],["usetree",3]],[[],["usetreelist",3]],[[],["abi",3]],[[],["genericparamlist",3]],[[],["whereclause",3]],[[],["blockexpr",3]],[[],["selfparam",3]],[[],["param",3]],[[],["recordfieldlist",3]],[[],["tuplefieldlist",3]],[[],["recordfield",3]],[[],["tuplefield",3]],[[],["variantlist",3]],[[],["variant",3]],[[],["associtemlist",3]],[[],["externitemlist",3]],[[],["constparam",3]],[[],["lifetimeparam",3]],[[],["typeparam",3]],[[],["wherepred",3]],[[],["exprstmt",3]],[[],["letstmt",3]],[[],["arrayexpr",3]],[[],["awaitexpr",3]],[[],["binexpr",3]],[[],["boxexpr",3]],[[],["breakexpr",3]],[[],["callexpr",3]],[[],["castexpr",3]],[[],["closureexpr",3]],[[],["continueexpr",3]],[[],["effectexpr",3]],[[],["fieldexpr",3]],[[],["forexpr",3]],[[],["ifexpr",3]],[[],["indexexpr",3]],[[],["literal",3]],[[],["loopexpr",3]],[[],["matchexpr",3]],[[],["methodcallexpr",3]],[[],["parenexpr",3]],[[],["pathexpr",3]],[[],["prefixexpr",3]],[[],["rangeexpr",3]],[[],["recordexpr",3]],[[],["refexpr",3]],[[],["returnexpr",3]],[[],["tryexpr",3]],[[],["tupleexpr",3]],[[],["whileexpr",3]],[[],["yieldexpr",3]],[[],["label",3]],[[],["recordexprfieldlist",3]],[[],["recordexprfield",3]],[[],["arglist",3]],[[],["condition",3]],[[],["matcharmlist",3]],[[],["matcharm",3]],[[],["matchguard",3]],[[],["arraytype",3]],[[],["dyntraittype",3]],[[],["fnptrtype",3]],[[],["fortype",3]],[[],["impltraittype",3]],[[],["infertype",3]],[[],["macrotype",3]],[[],["nevertype",3]],[[],["parentype",3]],[[],["ptrtype",3]],[[],["reftype",3]],[[],["slicetype",3]],[[],["tupletype",3]],[[],["typebound",3]],[[],["identpat",3]],[[],["boxpat",3]],[[],["restpat",3]],[[],["literalpat",3]],[[],["macropat",3]],[[],["orpat",3]],[[],["parenpat",3]],[[],["pathpat",3]],[[],["wildcardpat",3]],[[],["rangepat",3]],[[],["recordpat",3]],[[],["refpat",3]],[[],["slicepat",3]],[[],["tuplepat",3]],[[],["tuplestructpat",3]],[[],["constblockpat",3]],[[],["recordpatfieldlist",3]],[[],["recordpatfield",3]],[[],["genericarg",4]],[[],["type",4]],[[],["expr",4]],[[],["item",4]],[[],["stmt",4]],[[],["pat",4]],[[],["fieldlist",4]],[[],["adt",4]],[[],["associtem",4]],[[],["externitem",4]],[[],["genericparam",4]],[[],["whitespace",3]],[[],["comment",3]],[[],["string",3]],[[],["bytestring",3]],[[],["intnumber",3]],[[],["floatnumber",3]],[[],["commentkind",3]],[[],["commentshape",4]],[[],["commentplacement",4]],[[],["radix",4]],[[],["macro",4]],[[],["attrkind",4]],[[],["pathsegmentkind",4]],[[],["structkind",4]],[[],["namelike",4]],[[],["nameornameref",4]],[[],["fieldkind",4]],[[],["selfparamkind",4]],[[],["typeboundkind",4]],[[],["elsebranch",4]],[[],["prefixop",4]],[[],["binop",4]],[[],["rangeop",4]],[[],["literalkind",4]],[[],["effect",4]],[[],["indentlevel",3]],[[],["astchildren",3]],[[],["parse",3]],[[],["syntaxtreebuilder",3]],[[],["syntaxrewriter",3]],[[["token",3]],["ordering",4]],[[],["ordering",4]],[[["syntaxerror",3]],["bool",15]],[[["syntaxerror",3]],["bool",15]],[[["token",3]],["bool",15]],[[["token",3]],["bool",15]],[[["syntaxnodeptr",3]],["bool",15]],[[["syntaxnodeptr",3]],["bool",15]],[[["astptr",3]],["bool",15]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[["tokentext",3]],["bool",15]],[[["insertposition",4]],["bool",15]],[[["insertposition",4]],["bool",15]],[[["name",3]],["bool",15]],[[["name",3]],["bool",15]],[[["nameref",3]],["bool",15]],[[["nameref",3]],["bool",15]],[[["lifetime",3]],["bool",15]],[[["lifetime",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["pathsegment",3]],["bool",15]],[[["pathsegment",3]],["bool",15]],[[["genericarglist",3]],["bool",15]],[[["genericarglist",3]],["bool",15]],[[["paramlist",3]],["bool",15]],[[["paramlist",3]],["bool",15]],[[["rettype",3]],["bool",15]],[[["rettype",3]],["bool",15]],[[["pathtype",3]],["bool",15]],[[["pathtype",3]],["bool",15]],[[["typearg",3]],["bool",15]],[[["typearg",3]],["bool",15]],[[["assoctypearg",3]],["bool",15]],[[["assoctypearg",3]],["bool",15]],[[["lifetimearg",3]],["bool",15]],[[["lifetimearg",3]],["bool",15]],[[["constarg",3]],["bool",15]],[[["constarg",3]],["bool",15]],[[["typeboundlist",3]],["bool",15]],[[["typeboundlist",3]],["bool",15]],[[["macrocall",3]],["bool",15]],[[["macrocall",3]],["bool",15]],[[["attr",3]],["bool",15]],[[["attr",3]],["bool",15]],[[["tokentree",3]],["bool",15]],[[["tokentree",3]],["bool",15]],[[["macroitems",3]],["bool",15]],[[["macroitems",3]],["bool",15]],[[["macrostmts",3]],["bool",15]],[[["macrostmts",3]],["bool",15]],[[["sourcefile",3]],["bool",15]],[[["sourcefile",3]],["bool",15]],[[["const",3]],["bool",15]],[[["const",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["externblock",3]],["bool",15]],[[["externblock",3]],["bool",15]],[[["externcrate",3]],["bool",15]],[[["externcrate",3]],["bool",15]],[[["fn",3]],["bool",15]],[[["fn",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["module",3]],["bool",15]],[[["module",3]],["bool",15]],[[["static",3]],["bool",15]],[[["static",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["union",3]],["bool",15]],[[["union",3]],["bool",15]],[[["use",3]],["bool",15]],[[["use",3]],["bool",15]],[[["visibility",3]],["bool",15]],[[["visibility",3]],["bool",15]],[[["itemlist",3]],["bool",15]],[[["itemlist",3]],["bool",15]],[[["rename",3]],["bool",15]],[[["rename",3]],["bool",15]],[[["usetree",3]],["bool",15]],[[["usetree",3]],["bool",15]],[[["usetreelist",3]],["bool",15]],[[["usetreelist",3]],["bool",15]],[[["abi",3]],["bool",15]],[[["abi",3]],["bool",15]],[[["genericparamlist",3]],["bool",15]],[[["genericparamlist",3]],["bool",15]],[[["whereclause",3]],["bool",15]],[[["whereclause",3]],["bool",15]],[[["blockexpr",3]],["bool",15]],[[["blockexpr",3]],["bool",15]],[[["selfparam",3]],["bool",15]],[[["selfparam",3]],["bool",15]],[[["param",3]],["bool",15]],[[["param",3]],["bool",15]],[[["recordfieldlist",3]],["bool",15]],[[["recordfieldlist",3]],["bool",15]],[[["tuplefieldlist",3]],["bool",15]],[[["tuplefieldlist",3]],["bool",15]],[[["recordfield",3]],["bool",15]],[[["recordfield",3]],["bool",15]],[[["tuplefield",3]],["bool",15]],[[["tuplefield",3]],["bool",15]],[[["variantlist",3]],["bool",15]],[[["variantlist",3]],["bool",15]],[[["variant",3]],["bool",15]],[[["variant",3]],["bool",15]],[[["associtemlist",3]],["bool",15]],[[["associtemlist",3]],["bool",15]],[[["externitemlist",3]],["bool",15]],[[["externitemlist",3]],["bool",15]],[[["constparam",3]],["bool",15]],[[["constparam",3]],["bool",15]],[[["lifetimeparam",3]],["bool",15]],[[["lifetimeparam",3]],["bool",15]],[[["typeparam",3]],["bool",15]],[[["typeparam",3]],["bool",15]],[[["wherepred",3]],["bool",15]],[[["wherepred",3]],["bool",15]],[[["exprstmt",3]],["bool",15]],[[["exprstmt",3]],["bool",15]],[[["letstmt",3]],["bool",15]],[[["letstmt",3]],["bool",15]],[[["arrayexpr",3]],["bool",15]],[[["arrayexpr",3]],["bool",15]],[[["awaitexpr",3]],["bool",15]],[[["awaitexpr",3]],["bool",15]],[[["binexpr",3]],["bool",15]],[[["binexpr",3]],["bool",15]],[[["boxexpr",3]],["bool",15]],[[["boxexpr",3]],["bool",15]],[[["breakexpr",3]],["bool",15]],[[["breakexpr",3]],["bool",15]],[[["callexpr",3]],["bool",15]],[[["callexpr",3]],["bool",15]],[[["castexpr",3]],["bool",15]],[[["castexpr",3]],["bool",15]],[[["closureexpr",3]],["bool",15]],[[["closureexpr",3]],["bool",15]],[[["continueexpr",3]],["bool",15]],[[["continueexpr",3]],["bool",15]],[[["effectexpr",3]],["bool",15]],[[["effectexpr",3]],["bool",15]],[[["fieldexpr",3]],["bool",15]],[[["fieldexpr",3]],["bool",15]],[[["forexpr",3]],["bool",15]],[[["forexpr",3]],["bool",15]],[[["ifexpr",3]],["bool",15]],[[["ifexpr",3]],["bool",15]],[[["indexexpr",3]],["bool",15]],[[["indexexpr",3]],["bool",15]],[[["literal",3]],["bool",15]],[[["literal",3]],["bool",15]],[[["loopexpr",3]],["bool",15]],[[["loopexpr",3]],["bool",15]],[[["matchexpr",3]],["bool",15]],[[["matchexpr",3]],["bool",15]],[[["methodcallexpr",3]],["bool",15]],[[["methodcallexpr",3]],["bool",15]],[[["parenexpr",3]],["bool",15]],[[["parenexpr",3]],["bool",15]],[[["pathexpr",3]],["bool",15]],[[["pathexpr",3]],["bool",15]],[[["prefixexpr",3]],["bool",15]],[[["prefixexpr",3]],["bool",15]],[[["rangeexpr",3]],["bool",15]],[[["rangeexpr",3]],["bool",15]],[[["recordexpr",3]],["bool",15]],[[["recordexpr",3]],["bool",15]],[[["refexpr",3]],["bool",15]],[[["refexpr",3]],["bool",15]],[[["returnexpr",3]],["bool",15]],[[["returnexpr",3]],["bool",15]],[[["tryexpr",3]],["bool",15]],[[["tryexpr",3]],["bool",15]],[[["tupleexpr",3]],["bool",15]],[[["tupleexpr",3]],["bool",15]],[[["whileexpr",3]],["bool",15]],[[["whileexpr",3]],["bool",15]],[[["yieldexpr",3]],["bool",15]],[[["yieldexpr",3]],["bool",15]],[[["label",3]],["bool",15]],[[["label",3]],["bool",15]],[[["recordexprfieldlist",3]],["bool",15]],[[["recordexprfieldlist",3]],["bool",15]],[[["recordexprfield",3]],["bool",15]],[[["recordexprfield",3]],["bool",15]],[[["arglist",3]],["bool",15]],[[["arglist",3]],["bool",15]],[[["condition",3]],["bool",15]],[[["condition",3]],["bool",15]],[[["matcharmlist",3]],["bool",15]],[[["matcharmlist",3]],["bool",15]],[[["matcharm",3]],["bool",15]],[[["matcharm",3]],["bool",15]],[[["matchguard",3]],["bool",15]],[[["matchguard",3]],["bool",15]],[[["arraytype",3]],["bool",15]],[[["arraytype",3]],["bool",15]],[[["dyntraittype",3]],["bool",15]],[[["dyntraittype",3]],["bool",15]],[[["fnptrtype",3]],["bool",15]],[[["fnptrtype",3]],["bool",15]],[[["fortype",3]],["bool",15]],[[["fortype",3]],["bool",15]],[[["impltraittype",3]],["bool",15]],[[["impltraittype",3]],["bool",15]],[[["infertype",3]],["bool",15]],[[["infertype",3]],["bool",15]],[[["macrotype",3]],["bool",15]],[[["macrotype",3]],["bool",15]],[[["nevertype",3]],["bool",15]],[[["nevertype",3]],["bool",15]],[[["parentype",3]],["bool",15]],[[["parentype",3]],["bool",15]],[[["ptrtype",3]],["bool",15]],[[["ptrtype",3]],["bool",15]],[[["reftype",3]],["bool",15]],[[["reftype",3]],["bool",15]],[[["slicetype",3]],["bool",15]],[[["slicetype",3]],["bool",15]],[[["tupletype",3]],["bool",15]],[[["tupletype",3]],["bool",15]],[[["typebound",3]],["bool",15]],[[["typebound",3]],["bool",15]],[[["identpat",3]],["bool",15]],[[["identpat",3]],["bool",15]],[[["boxpat",3]],["bool",15]],[[["boxpat",3]],["bool",15]],[[["restpat",3]],["bool",15]],[[["restpat",3]],["bool",15]],[[["literalpat",3]],["bool",15]],[[["literalpat",3]],["bool",15]],[[["macropat",3]],["bool",15]],[[["macropat",3]],["bool",15]],[[["orpat",3]],["bool",15]],[[["orpat",3]],["bool",15]],[[["parenpat",3]],["bool",15]],[[["parenpat",3]],["bool",15]],[[["pathpat",3]],["bool",15]],[[["pathpat",3]],["bool",15]],[[["wildcardpat",3]],["bool",15]],[[["wildcardpat",3]],["bool",15]],[[["rangepat",3]],["bool",15]],[[["rangepat",3]],["bool",15]],[[["recordpat",3]],["bool",15]],[[["recordpat",3]],["bool",15]],[[["refpat",3]],["bool",15]],[[["refpat",3]],["bool",15]],[[["slicepat",3]],["bool",15]],[[["slicepat",3]],["bool",15]],[[["tuplepat",3]],["bool",15]],[[["tuplepat",3]],["bool",15]],[[["tuplestructpat",3]],["bool",15]],[[["tuplestructpat",3]],["bool",15]],[[["constblockpat",3]],["bool",15]],[[["constblockpat",3]],["bool",15]],[[["recordpatfieldlist",3]],["bool",15]],[[["recordpatfieldlist",3]],["bool",15]],[[["recordpatfield",3]],["bool",15]],[[["recordpatfield",3]],["bool",15]],[[["genericarg",4]],["bool",15]],[[["genericarg",4]],["bool",15]],[[["type",4]],["bool",15]],[[["type",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["item",4]],["bool",15]],[[["item",4]],["bool",15]],[[["stmt",4]],["bool",15]],[[["stmt",4]],["bool",15]],[[["pat",4]],["bool",15]],[[["pat",4]],["bool",15]],[[["fieldlist",4]],["bool",15]],[[["fieldlist",4]],["bool",15]],[[["adt",4]],["bool",15]],[[["adt",4]],["bool",15]],[[["associtem",4]],["bool",15]],[[["associtem",4]],["bool",15]],[[["externitem",4]],["bool",15]],[[["externitem",4]],["bool",15]],[[["genericparam",4]],["bool",15]],[[["genericparam",4]],["bool",15]],[[["whitespace",3]],["bool",15]],[[["whitespace",3]],["bool",15]],[[["comment",3]],["bool",15]],[[["comment",3]],["bool",15]],[[["string",3]],["bool",15]],[[["string",3]],["bool",15]],[[["bytestring",3]],["bool",15]],[[["bytestring",3]],["bool",15]],[[["intnumber",3]],["bool",15]],[[["intnumber",3]],["bool",15]],[[["floatnumber",3]],["bool",15]],[[["floatnumber",3]],["bool",15]],[[["commentkind",3]],["bool",15]],[[["commentkind",3]],["bool",15]],[[["commentshape",4]],["bool",15]],[[["commentplacement",4]],["bool",15]],[[["radix",4]],["bool",15]],[[["macro",4]],["bool",15]],[[["macro",4]],["bool",15]],[[["attrkind",4]],["bool",15]],[[["pathsegmentkind",4]],["bool",15]],[[["pathsegmentkind",4]],["bool",15]],[[["structkind",4]],["bool",15]],[[["structkind",4]],["bool",15]],[[["nameornameref",4]],["bool",15]],[[["nameornameref",4]],["bool",15]],[[["fieldkind",4]],["bool",15]],[[["fieldkind",4]],["bool",15]],[[["selfparamkind",4]],["bool",15]],[[["typeboundkind",4]],["bool",15]],[[["typeboundkind",4]],["bool",15]],[[["elsebranch",4]],["bool",15]],[[["elsebranch",4]],["bool",15]],[[["prefixop",4]],["bool",15]],[[["binop",4]],["bool",15]],[[["rangeop",4]],["bool",15]],[[["literalkind",4]],["bool",15]],[[["literalkind",4]],["bool",15]],[[["effect",4]],["bool",15]],[[["effect",4]],["bool",15]],[[["parse",3]],["bool",15]],[[["parse",3]],["bool",15]],[[["token",3]],[["ordering",4],["option",4]]],[[],[["option",4],["ordering",4]]],[[],["str",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u8",15]],["indentlevelparse",3],["syntaxnode",6]]],[[["syntaxkind",4],["str",15]]],[[["syntaxkind",4]]],[[]],[[["parseerror",3],["textsize",3]]],[[["textrange",3]]],[[["textsize",3]]],[[],["textrange",3]],[[["textrange",3]]],[[["syntaxnode",6]],["syntaxnodeptr",3]],[[["syntaxnode",6]],["syntaxnode",6]],[[],[["option",4],["astptr",3]]],[[],["astptr",3]],[[["syntaxnode",6]]],[[],["syntaxnodeptr",3]],[[],[["option",4],["astptr",3]]],[[],["str",15]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["path",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pathsegment",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["genericarglist",3]]],[[],[["option",4],["paramlist",3]]],[[],[["rettype",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["pathtype",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["genericarg",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["selfparam",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["param",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["path",3],["option",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["nameref",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["lifetime",3],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["astchildren",3],["typebound",3]]],[[],[["path",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["tokentree",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["path",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["tokentree",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["stmt",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["variantlist",3],["option",4]]],[[],[["abi",3],["option",4]]],[[],[["externitemlist",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["rename",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["abi",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["paramlist",3]]],[[],[["rettype",3],["option",4]]],[[],[["blockexpr",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["associtemlist",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["tokentree",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["tokentree",3],["option",4]]],[[],[["tokentree",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["itemlist",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["fieldlist",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["associtemlist",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["recordfieldlist",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["usetree",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["path",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["path",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["usetreelist",3],["option",4]]],[[],[["option",4],["rename",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["usetree",3],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["genericparam",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["wherepred",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["stmt",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["lifetime",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["recordfield",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["tuplefield",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["variant",3],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["fieldlist",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["associtem",4],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["externitem",4],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["lifetime",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["genericparamlist",3]]],[[],[["lifetime",3],["option",4]]],[[],[["option",4],["type",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["astchildren",3]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["lifetime",3],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["paramlist",3]]],[[],[["rettype",3],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["lifetime",3],["option",4]]],[[],[["option",4],["label",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["blockexpr",3],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["nameref",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["condition",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["option",4],["matcharmlist",3]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["genericarglist",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["path",3],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["path",3],["option",4]]],[[],[["option",4],["recordexprfieldlist",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["condition",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["lifetime",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["recordexprfield",3],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["nameref",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["matcharm",3],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pat",4]]],[[],[["option",4],["matchguard",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["typeboundlist",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["abi",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["paramlist",3]]],[[],[["rettype",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["genericparamlist",3]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["typeboundlist",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["macrocall",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["lifetime",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["type",4],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["lifetime",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["literal",3],["option",4]]],[[],[["option",4],["macrocall",3]]],[[],[["astchildren",3],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["path",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["path",3],["option",4]]],[[],[["recordpatfieldlist",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["path",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["blockexpr",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["recordpatfield",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["nameref",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pat",4]]],[[],[["option",4],["name",3]]],[[],[["option",4],["visibility",3]]],[[],[["option",4],["blockexpr",3]]],[[],[["option",4],["label",3]]],[[],[["option",4],["arglist",3]]],[[],[["item",4],["astchildren",3]]],[[],[["option",4],["genericparamlist",3]]],[[],[["whereclause",3],["option",4]]],[[],[["option",4],["typeboundlist",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["attr",3],["astchildren",3]]],[[["str",15]],["bool",15]],[[],["commentiter",3]],[[["syntaxnode",6]],["commentiter",3]],[[],["commentkind",3]],[[],["bool",15]],[[],["bool",15]],[[],["str",15]],[[],[["option",4],["str",15]]],[[],["bool",15]],[[],["bool",15]],[[],["str",15]],[[],["bool",15]],[[],["bool",15]],[[["textrange",3]],[["textrange",3],["option",4]]],[[],[["cow",4],["option",4]]],[[],[["quoteoffsets",3],["option",4]]],[[],[["textrange",3],["option",4]]],[[],[["textrange",3],["option",4]]],[[],[["textrange",3],["option",4]]],[[],["bool",15]],[[]],[[],["radix",4]],[[],[["u128",15],["option",4]]],[[],[["option",4],["str",15]]],[[],[["option",4],["str",15]]],null,[[],["tokentext",3]],[[],["tokentext",3]],[[],["tokentext",3]],[[],[["usize",15],["option",4]]],[[["attrsowner",8]]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["smolstr",3]]],[[],["option",4]],[[],[["option",4],["smolstr",3]]],[[],["attrkind",4]],[[],["path",3]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["pathsegmentkind",4]]],[[],[["path",3],["option",4]]],[[],[["pathsegment",3],["option",4]]],[[],["path",3]],[[],[["pathsegment",3],["option",4]]],[[]],[[],["bool",15]],[[],["usetree",3]],[[],["bool",15]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],["structkind",4]],[[["nameref",3]],[["option",4],["recordexprfield",3]]],[[["nameref",3]],[["option",4],["recordexprfield",3]]],[[],[["nameref",3],["option",4]]],[[],[["option",4],["nameref",3]]],[[],["tokentext",3]],[[["nameref",3]],[["recordpatfield",3],["option",4]]],[[["name",3]],[["recordpatfield",3],["option",4]]],[[],[["nameornameref",4],["option",4]]],[[],["enum",3]],[[],["structkind",4]],[[],[["syntaxtoken",6],["option",4]]],[[],[["fieldkind",4],["option",4]]],[[],["slicepatcomponents",3]],[[],["selfparamkind",4]],[[],["typeboundkind",4]],[[],["visibilitykind",4]],[[]],[[],[["option",4],["pat",4]]],[[],[["option",4],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[]],[[]],[[]],[[],["bool",15]],[[],[["nameref",3],["option",4]]],[[],[["option",4],["blockexpr",3]]],[[],[["elsebranch",4],["option",4]]],[[],[["astchildren",3],["blockexpr",3]]],[[],[["option",4],["prefixop",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],["bool",15]],[[],["option",4]],[[],[["option",4],["binop",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["expr",4],["option",4]]],[[]],[[],[["option",4],["rangeop",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["expr",4],["option",4]]],[[],[["expr",4],["option",4]]],[[],["arrayexprkind",4]],[[],["syntaxtoken",6]],[[],["literalkind",4]],[[],["effect",4]],[[],["bool",15]],[[],["recordexpr",3]],[[["syntaxkind",4]],[["option",4],["binexpr",3]]],[[["blockexpr",3]],["fn",3]],[[["genericparamlist",3]],["fn",3]],[[["associtemlist",3]],["impl",3]],[[],["associtemlist",3]],[[["associtem",4]],["associtemlist",3]],[[["recordexprfield",3]],["recordexprfieldlist",3]],[[["insertposition",4],["recordexprfield",3]],["recordexprfieldlist",3]],[[],["typealias",3]],[[],["typeparam",3]],[[["pathsegment",3]],["path",3]],[[["genericarglist",3]],["pathsegment",3]],[[["genericarglist",3]],["pathsegment",3]],[[["usetree",3]],["use",3]],[[["path",3]],["usetree",3]],[[["usetreelist",3]],["usetree",3]],[[["path",3]],["usetree",3]],[[],["matcharmlist",3]],[[],["matcharmlist",3]],[[["matcharm",3]],["matcharmlist",3]],[[],["genericparamlist",3]],[[["genericparam",4]],["genericparamlist",3]],[[["genericparam",4]]],[[["wherepred",3]]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],[["option",4],["syntaxkind",4]]],[[["char",15]],[["option",4],["syntaxkind",4]]],[[],["bool",15]],[[["syntaxkind",3]],["greennode",3]],[[],[["nodeortoken",4],["greennode",3],["greentoken",3]]],[[],["syntaxkind",3]],[[],["textsize",3]],[[],["syntaxkind",3]],[[],["textsize",3]],[[],["textrange",3]],[[],["usize",15]],[[],["syntaxkind",3]],[[],[["option",4],["syntaxnode",3]]],[[]],[[],[["option",4],["syntaxtoken",3]]],[[],[["option",4],["syntaxtoken",3]]],[[],[["nodeortoken",4],["option",4]]],[[],[["nodeortoken",4],["option",4]]],[[]],[[],["textrange",3]],[[],["usize",15]],[[]],[[],[["option",4],["syntaxnode",3]]],[[]],[[],[["nodeortoken",4],["option",4]]],[[],[["nodeortoken",4],["option",4]]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["textsize",3]],[[],["bool",15]],[[["char",15]],["bool",15]],[[["char",15]],[["option",4],["textsize",3]]],[[["textsize",3]],[["char",15],["option",4]]],[[],["syntaxtext",3]],[[],["result",4]],[[],["result",4]],[[]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textrange",3]],[["textrange",3],["option",4]]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],[["textrange",3],["option",4]]],[[["textsize",3]],[["textrange",3],["option",4]]],[[["textrange",3]],["ordering",4]],[[],["textsize",3]],[[["textsize",3]],[["option",4],["textsize",3]]],[[["textsize",3]],[["option",4],["textsize",3]]],[[],["tokenatoffset",4]],[[],["option",4]],[[],["option",4]],[[],["walkevent",4]],[[["usize",15]],["smolstr",3]],[[["str",15]],["smolstr",3]],[[],["smolstr",3]],[[],["str",15]],[[],["string",3]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]]],"p":[[4,"InsertPosition"],[3,"TreeDiff"],[3,"SyntaxRewriter"],[3,"IndentLevel"],[8,"AstNodeEdit"],[8,"GenericParamsOwnerEdit"],[3,"WsBuilder"],[4,"ArrayExprKind"],[13,"Repeat"],[4,"BinOp"],[4,"Effect"],[4,"ElseBranch"],[4,"LiteralKind"],[4,"PrefixOp"],[4,"RangeOp"],[4,"GenericArg"],[4,"Type"],[4,"Expr"],[4,"Item"],[4,"Stmt"],[4,"Pat"],[4,"FieldList"],[4,"Adt"],[4,"AssocItem"],[4,"ExternItem"],[4,"GenericParam"],[4,"AttrKind"],[4,"FieldKind"],[4,"Macro"],[4,"NameLike"],[4,"NameOrNameRef"],[4,"PathSegmentKind"],[13,"Type"],[4,"SelfParamKind"],[3,"SlicePatComponents"],[4,"StructKind"],[4,"TypeBoundKind"],[4,"VisibilityKind"],[3,"CommentKind"],[4,"CommentShape"],[4,"CommentPlacement"],[3,"QuoteOffsets"],[4,"FormatSpecifier"],[8,"HasFormatSpecifier"],[4,"Radix"],[8,"NameOwner"],[8,"VisibilityOwner"],[8,"LoopBodyOwner"],[8,"ArgListOwner"],[8,"ModuleItemOwner"],[8,"GenericParamsOwner"],[8,"TypeBoundsOwner"],[8,"AttrsOwner"],[8,"DocCommentsOwner"],[8,"AstNode"],[8,"AstToken"],[8,"Element"],[3,"Position"],[3,"Token"],[4,"SyntaxKind"],[4,"Direction"],[4,"NodeOrToken"],[4,"TokenAtOffset"],[4,"WalkEvent"],[3,"Parse"],[3,"SourceFile"],[3,"Path"],[3,"Attr"],[3,"SyntaxTreeBuilder"],[3,"SyntaxError"],[3,"SyntaxNodePtr"],[3,"AstPtr"],[3,"TokenText"],[3,"Name"],[3,"NameRef"],[3,"Lifetime"],[3,"PathSegment"],[3,"GenericArgList"],[3,"ParamList"],[3,"RetType"],[3,"PathType"],[3,"TypeArg"],[3,"AssocTypeArg"],[3,"LifetimeArg"],[3,"ConstArg"],[3,"TypeBoundList"],[3,"MacroCall"],[3,"TokenTree"],[3,"MacroItems"],[3,"MacroStmts"],[3,"Const"],[3,"Enum"],[3,"ExternBlock"],[3,"ExternCrate"],[3,"Fn"],[3,"Impl"],[3,"MacroRules"],[3,"MacroDef"],[3,"Module"],[3,"Static"],[3,"Struct"],[3,"Trait"],[3,"TypeAlias"],[3,"Union"],[3,"Use"],[3,"Visibility"],[3,"ItemList"],[3,"Rename"],[3,"UseTree"],[3,"UseTreeList"],[3,"Abi"],[3,"GenericParamList"],[3,"WhereClause"],[3,"BlockExpr"],[3,"SelfParam"],[3,"Param"],[3,"RecordFieldList"],[3,"TupleFieldList"],[3,"RecordField"],[3,"TupleField"],[3,"VariantList"],[3,"Variant"],[3,"AssocItemList"],[3,"ExternItemList"],[3,"ConstParam"],[3,"LifetimeParam"],[3,"TypeParam"],[3,"WherePred"],[3,"ExprStmt"],[3,"LetStmt"],[3,"ArrayExpr"],[3,"AwaitExpr"],[3,"BinExpr"],[3,"BoxExpr"],[3,"BreakExpr"],[3,"CallExpr"],[3,"CastExpr"],[3,"ClosureExpr"],[3,"ContinueExpr"],[3,"EffectExpr"],[3,"FieldExpr"],[3,"ForExpr"],[3,"IfExpr"],[3,"IndexExpr"],[3,"Literal"],[3,"LoopExpr"],[3,"MatchExpr"],[3,"MethodCallExpr"],[3,"ParenExpr"],[3,"PathExpr"],[3,"PrefixExpr"],[3,"RangeExpr"],[3,"RecordExpr"],[3,"RefExpr"],[3,"ReturnExpr"],[3,"TryExpr"],[3,"TupleExpr"],[3,"WhileExpr"],[3,"YieldExpr"],[3,"Label"],[3,"RecordExprFieldList"],[3,"RecordExprField"],[3,"ArgList"],[3,"Condition"],[3,"MatchArmList"],[3,"MatchArm"],[3,"MatchGuard"],[3,"ArrayType"],[3,"DynTraitType"],[3,"FnPtrType"],[3,"ForType"],[3,"ImplTraitType"],[3,"InferType"],[3,"MacroType"],[3,"NeverType"],[3,"ParenType"],[3,"PtrType"],[3,"RefType"],[3,"SliceType"],[3,"TupleType"],[3,"TypeBound"],[3,"IdentPat"],[3,"BoxPat"],[3,"RestPat"],[3,"LiteralPat"],[3,"MacroPat"],[3,"OrPat"],[3,"ParenPat"],[3,"PathPat"],[3,"WildcardPat"],[3,"RangePat"],[3,"RecordPat"],[3,"RefPat"],[3,"SlicePat"],[3,"TuplePat"],[3,"TupleStructPat"],[3,"ConstBlockPat"],[3,"RecordPatFieldList"],[3,"RecordPatField"],[3,"Whitespace"],[3,"Comment"],[3,"String"],[3,"ByteString"],[3,"IntNumber"],[3,"FloatNumber"],[3,"CommentIter"],[3,"AttrsOwnerNode"],[3,"AstChildren"],[3,"GreenNode"],[3,"SyntaxText"],[3,"TextRange"],[3,"TextSize"],[3,"SmolStr"],[6,"SyntaxElement"],[6,"SyntaxNode"],[6,"SyntaxToken"]]},\
"test_utils":{"doc":"Assorted testing utilities.","t":[0,5,5,5,5,5,6,3,3,12,12,12,12,12,12,12,12,12,17,17,5,5,4,13,13,5,5,5,5,5,5,5,5,5,5,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bench_fixture","big_struct","big_struct_n","glorious_old_parser","numerous_macro_rules","__diff","FxHashMap","AssertLinear","Fixture","path","text","krate","deps","cfg_atoms","cfg_key_values","edition","env","introduce_new_source_root","CURSOR_MARKER","ESCAPED_CURSOR_MARKER","extract_offset","extract_range","RangeOrOffset","Range","Offset","extract_range_or_offset","extract_tags","add_cursor","extract_annotations","skip_slow_tests","project_root","format_diff","bench","ensure_file_contents","try_ensure_file_contents","assert_eq_text","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","drop","clone","default","eq","ne","fmt","parse","next_round","sample"],"q":["test_utils","test_utils::bench_fixture","","","","test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Generates large snippets of Rust code for usage in the …","","","","","","Type alias for a hashmap using the <code>fx</code> hash algorithm.","","","","","","","","","","","","","","Infallible version of <code>try_extract_offset()</code>.","Infallible version of <code>try_extract_range()</code>.","","","","Extracts <code>TextRange</code> or <code>TextSize</code> depending on the amount of …","Extracts ranges, marked with <code><tag> </tag></code> pairs from the …","Inserts <code>$0</code> marker into the <code>text</code> at <code>offset</code>.","Extracts <code>//^ some text</code> annotations","Returns <code>false</code> if slow tests should not run, otherwise …","Returns the path to the root directory of <code>rust-analyzer</code> …","","Utility for writing benchmark tests.","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","Asserts that two strings are equal, otherwise displays a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses text which looks like this:","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,3,2,3,1,1,1,1,3,3],"f":[null,[[],["string",3]],[[["u32",15]],["string",3]],[[],["string",3]],[[],["string",3]],[[["str",15]],[["vec",3],["global",3],["chunk",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]]],[[["str",15]]],null,null,null,[[["str",15]]],[[["str",15]]],[[["textsize",3],["str",15]],["string",3]],[[["str",15]],["vec",3]],[[],["bool",15]],[[],["pathbuf",3]],[[["chunk",4],["vec",3]],["string",3]],[[["str",15]]],[[["path",3],["str",15]]],[[["path",3],["str",15]],["result",4]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["rangeoroffset",4]],[[],["assertlinear",3]],[[["fixture",3]],["bool",15]],[[["fixture",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["str",15]],[["vec",3],["fixture",3]]],[[],["bool",15]],[[["f64",15]]]],"p":[[3,"Fixture"],[4,"RangeOrOffset"],[3,"AssertLinear"]]},\
"text_edit":{"doc":"Representation of a <code>TextEdit</code>.","t":[3,3,3,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["TextRange","TextSize","Indel","insert","delete","TextEdit","TextEditBuilder","insert","delete","replace","apply","builder","insert","delete","replace","len","is_empty","iter","apply","union","apply_to_offset","replace","delete","insert","finish","invalidates_offset","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","add","add","add","add","sub","sub","sub","sub","hash","hash","from","add_assign","add_assign","eq","ne","eq","ne","cmp","start_bound","end_bound","default","default","sum","clone","clone","try_from","sub_assign","sub_assign","partial_cmp","fmt","fmt","into_iter","clone","clone","clone","default","default","fmt","fmt","fmt","new","at","empty","up_to","start","end","len","is_empty","contains","contains_inclusive","contains_range","intersect","cover","cover_offset","checked_add","checked_sub","ordering","of","checked_add","checked_sub"],"q":["text_edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A range in text, represented as a pair of [<code>TextSize</code>][…","A measure of text length. Also, equivalently, an index …","<code>InsertDelete</code> – a single “atomic” change to text","","Refers to offsets in the original text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","Create a zero-length range at the specified offset (…","Create a range up to the given end (<code>..end</code>).","The start point of this range.","The end point of this range.","The size of this range.","Check if this range is empty.","Check if this range contains an offset.","Check if this range contains an offset.","Check if this range completely contains another range.","The range covered by both ranges, if it exists. If the …","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","Add an offset to this range.","Subtract an offset from this range.","Relative order of the two ranges (overlapping ranges are …","The text size of some primitive text-like object.","Checked addition. Returns <code>None</code> if overflow occurred.","Checked subtraction. Returns <code>None</code> if overflow occurred."],"i":[0,0,0,1,1,0,0,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,5,4,4,5,4,5,4,5,4,5,5,5,4,4,4,5,5,5,4,4,5,4,5,5,4,5,5,4,5,4,5,2,1,2,3,2,3,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5],"f":[null,null,null,null,null,null,null,[[["textsize",3],["string",3]],["indel",3]],[[["textrange",3]],["indel",3]],[[["textrange",3],["string",3]],["indel",3]],[[["string",3]]],[[],["texteditbuilder",3]],[[["textsize",3],["string",3]],["textedit",3]],[[["textrange",3]],["textedit",3]],[[["textrange",3],["string",3]],["textedit",3]],[[],["usize",15]],[[],["bool",15]],[[],[["iter",3],["indel",3]]],[[["string",3]]],[[["textedit",3]],[["textedit",3],["result",4]]],[[["textsize",3]],[["textsize",3],["option",4]]],[[["textrange",3],["string",3]]],[[["textrange",3]]],[[["textsize",3],["string",3]]],[[],["textedit",3]],[[["textsize",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[]],[[]],[[["u32",15]],["textsize",3]],[[]],[[]],[[["textrange",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["ordering",4]],[[],[["textsize",3],["bound",4]]],[[],[["textsize",3],["bound",4]]],[[],["textsize",3]],[[],["textrange",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["textrange",3]],[[["usize",15]],[["textsize",3],["tryfrominterror",3],["result",4]]],[[]],[[]],[[["textsize",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[],["indel",3]],[[],["textedit",3]],[[],["texteditbuilder",3]],[[],["textedit",3]],[[],["texteditbuilder",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["textsize",3]],[[],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textrange",3]],[["textrange",3],["option",4]]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],[["textrange",3],["option",4]]],[[["textsize",3]],[["textrange",3],["option",4]]],[[["textrange",3]],["ordering",4]],[[],["textsize",3]],[[["textsize",3]],[["textsize",3],["option",4]]],[[["textsize",3]],[["textsize",3],["option",4]]]],"p":[[3,"Indel"],[3,"TextEdit"],[3,"TextEditBuilder"],[3,"TextRange"],[3,"TextSize"]]},\
"toolchain":{"doc":"Discovery of <code>cargo</code> & <code>rustc</code> executables.","t":[5,5,5,5],"n":["cargo","rustc","rustup","rustfmt"],"q":["toolchain","","",""],"d":["","","",""],"i":[0,0,0,0],"f":[[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]]],"p":[]},\
"tt":{"doc":"<code>tt</code> crate defines a <code>TokenTree</code> data structure: this is the …","t":[0,3,11,11,11,4,13,13,11,3,11,11,11,11,11,11,11,3,3,12,11,4,13,13,11,4,13,13,13,3,12,12,3,12,12,4,13,13,13,3,12,12,3,12,12,12,4,13,13,3,12,12,11,11,11,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["buffer","TokenBuffer","from_tokens","from_subtree","begin","TokenTreeRef","Subtree","Leaf","cloned","Cursor","eof","end","subtree","token_tree","bump","bump_subtree","is_root","SmolStr","TokenId","0","unspecified","TokenTree","Leaf","Subtree","empty","Leaf","Literal","Punct","Ident","Subtree","delimiter","token_trees","Delimiter","id","kind","DelimiterKind","Parenthesis","Brace","Bracket","Literal","text","id","Punct","char","spacing","id","Spacing","Alone","Joint","Ident","text","id","count","delimiter_kind","as_debug_string","ExpansionError","IOError","JsonError","Unknown","ExpansionError","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_iter","from_iter","from_iter","from_iter","deserialize","hash","from","eq","eq","eq","eq","eq","cmp","fmt","serialize","borrow","default","clone","partial_cmp","fmt","deref","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","new_inline_from_ascii","new_inline","new","as_str","to_string","len","is_empty","is_heap_allocated"],"q":["tt","tt::buffer","","","","","","","","","","","","","","","","tt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tt::buffer","","","","","","","","","","","","","","","","","","","","","","","tt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tt::buffer","tt","","","","","","","","","","","","","","","","","","","","tt::buffer","tt","","","","","","","","","","","","tt::buffer","","","tt","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["FIXME: write short doc here","A token tree buffer The safe version of <code>syn</code> <code>TokenBuffer</code>","","","Creates a cursor referencing the first token in the …","","","","","A safe version of <code>Cursor</code> from <code>syn</code> crate …","Check whether it is eof","If the cursor is pointing at the end of a subtree, returns…","If the cursor is pointing at a <code>Subtree</code>, returns a cursor …","If the cursor is pointing at a <code>TokenTree</code>, returns it","Bump the cursor","Bump the cursor, if it is a subtree, returns a cursor …","Check whether it is a top level","A <code>SmolStr</code> is a string type that has the following …","Represents identity of the token.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Count the number of tokens recursively","","A simple line string used for debuggingonstructs inline variant of <code>SmolStr</code>.","","","","","",""],"i":[0,0,1,1,1,0,2,2,2,0,3,3,3,3,3,3,3,0,0,4,4,0,5,5,5,0,6,6,6,0,7,7,0,8,8,0,9,9,9,0,10,10,0,11,11,11,0,12,12,0,13,13,7,7,7,0,14,14,14,14,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,15,15,15,15,15,15,15,15,15,15,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,5,5,6,6,6,4,5,6,7,8,9,10,11,12,13,3,14,7,4,4,5,5,6,6,7,7,8,8,9,10,10,11,11,12,13,13,3,14,14,4,5,6,8,9,10,11,12,13,7,1,2,3,14,5,7,6,13,10,11,14,4,5,6,7,8,9,10,11,12,13,15,15,15,15,15,15,15,15],"f":[null,null,[[],["tokenbuffer",3]],[[["subtree",3]],["tokenbuffer",3]],[[],["cursor",3]],null,null,null,[[],["tokentree",4]],null,[[],["bool",15]],[[],[["subtree",3],["option",4]]],[[],[["option",4],["cursor",3]]],[[],[["option",4],["tokentreeref",4]]],[[],["cursor",3]],[[],["cursor",3]],[[],["bool",15]],null,null,null,[[],["tokenid",3]],null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[],[["delimiterkind",4],["option",4]]],[[],["string",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[],[["result",4],["smolstr",3]]],[[]],[[],["smolstr",3]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[["string",3]],["bool",15]],[[["str",15]],["bool",15]],[[["smolstr",3]],["bool",15]],[[["smolstr",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[],["result",4]],[[],["str",15]],[[],["smolstr",3]],[[],["smolstr",3]],[[["smolstr",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["str",15]],[[["leaf",4]],["tokentree",4]],[[["subtree",3]],["tokentree",4]],[[["literal",3]],["leaf",4]],[[["punct",3]],["leaf",4]],[[["ident",3]],["leaf",4]],[[],["tokenid",3]],[[],["tokentree",4]],[[],["leaf",4]],[[],["subtree",3]],[[],["delimiter",3]],[[],["delimiterkind",4]],[[],["literal",3]],[[],["punct",3]],[[],["spacing",4]],[[],["ident",3]],[[],["cursor",3]],[[],["expansionerror",4]],[[],["subtree",3]],[[["tokenid",3]],["bool",15]],[[["tokenid",3]],["bool",15]],[[["tokentree",4]],["bool",15]],[[["tokentree",4]],["bool",15]],[[["leaf",4]],["bool",15]],[[["leaf",4]],["bool",15]],[[["subtree",3]],["bool",15]],[[["subtree",3]],["bool",15]],[[["delimiter",3]],["bool",15]],[[["delimiter",3]],["bool",15]],[[["delimiterkind",4]],["bool",15]],[[["literal",3]],["bool",15]],[[["literal",3]],["bool",15]],[[["punct",3]],["bool",15]],[[["punct",3]],["bool",15]],[[["spacing",4]],["bool",15]],[[["ident",3]],["bool",15]],[[["ident",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["expansionerror",4]],["bool",15]],[[["expansionerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["smolstr",3]],[[["str",15]],["smolstr",3]],[[],["smolstr",3]],[[],["str",15]],[[],["string",3]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]]],"p":[[3,"TokenBuffer"],[4,"TokenTreeRef"],[3,"Cursor"],[3,"TokenId"],[4,"TokenTree"],[4,"Leaf"],[3,"Subtree"],[3,"Delimiter"],[4,"DelimiterKind"],[3,"Literal"],[3,"Punct"],[4,"Spacing"],[3,"Ident"],[4,"ExpansionError"],[3,"SmolStr"]]},\
"vfs":{"doc":"Virtual File System","t":[0,3,11,11,11,11,11,11,3,11,11,3,11,11,11,0,4,13,13,3,12,12,12,3,12,12,12,4,13,12,12,12,13,12,6,8,10,10,10,10,11,11,11,11,11,11,11,3,12,12,3,12,12,3,3,3,3,12,3,3,12,12,11,11,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["file_set","FileSet","len","resolve_path","file_for_path","path_for_file","insert","iter","FileSetConfig","builder","partition","FileSetConfigBuilder","len","add_file_set","build","loader","Entry","Files","Directories","Directories","extensions","include","exclude","Config","version","load","watch","Message","Progress","n_total","n_done","config_version","Loaded","files","Sender","Handle","spawn","set_config","invalidate","load_sync","rs_files_recursively","local_cargo_package","cargo_package_dependency","contains_file","contains_dir","contains_file","contains_dir","AnchoredPath","anchor","path","AnchoredPathBuf","anchor","path","VfsPath","AbsPath","AbsPathBuf","FileId","0","Vfs","ChangedFile","file_id","change_kind","exists","is_created_or_deleted","ChangeKind","Create","Modify","Delete","len","file_id","file_path","file_contents","iter","set_file_contents","has_changes","take_changes","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","borrow","borrow_mut","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","fmt","fmt","cmp","cmp","borrow","clone","try_from","try_from","as_ref","as_ref","as_ref","hash","hash","partial_cmp","partial_cmp","deref","deref","eq","eq","ne","eq","ne","from","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","new_virtual_path","as_path","join","pop","starts_with","parent","name_and_extension","assert","parent","join","normalize","to_path_buf","strip_prefix","assert","as_path","pop"],"q":["vfs","vfs::file_set","","","","","","","","","","","","","","vfs","vfs::loader","","","","","","","","","","","","","vfs::loader::Message","","","vfs::loader","vfs::loader::Message","vfs::loader","","","","","","","","","","","","","vfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vfs::file_set","","","","","","","","","","","","","","","","","","","","","","","","vfs::loader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vfs::file_set","vfs::loader","","vfs","","","vfs::file_set","","","vfs::loader","vfs","","","","","","","vfs::file_set","","vfs","","","","","","","","","vfs::file_set","","vfs::loader","","","","vfs","","","","","","","","","","","","","","","","","","","","","",""],"d":["Partitions a list of files into disjoint subsets.","A set of [<code>VfsPath</code>]s identified by [<code>FileId</code>]s.","Returns the number of stored paths.","Get the id of the file corresponding to <code>path</code>.","Get the id corresponding to <code>path</code> if it exists in the set.","Get the path corresponding to <code>file</code> if it exists in the …","Insert the <code>file_id, path</code> pair into the set.","Iterate over this set’s ids.","This contains path prefixes to partition a [<code>Vfs</code>] into […","Returns a builder for <code>FileSetConfig</code>.","Partition <code>vfs</code> into <code>FileSet</code>s.","Builder for [<code>FileSetConfig</code>].","Returns the number of sets currently held.","Add a new set of paths prefixes.","Build the <code>FileSetConfig</code>.","Object safe interface for file watching and reading.","A set of files on the file system.","The <code>Entry</code> is represented by a raw set of files.","The <code>Entry</code> is represented by <code>Directories</code>.","Specifies a set of files on the file system.","","","","[<code>Handle</code>]’s configuration.","Version number to associate progress updates to the right …","Set of initially loaded files.","Index of watched entries in <code>load</code>.","Message about an action taken by a [<code>Handle</code>].","Indicate a gradual progress.","","","","The handle loaded the following files’ content.","","Type that will receive <code>Messages</code> from a [<code>Handle</code>].","Interface for reading and watching files.","Spawn a new handle with the given <code>sender</code>.","Set this handle’s configuration.","The file’s content at <code>path</code> has been modified, and …","Load the content of the given file, returning [<code>None</code>] if …","Returns:","Returns:","Returns:","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Path relative to a file.","File that this path is relative to.","Path relative to <code>anchor</code>’s containing directory.","Path relative to a file.","File that this path is relative to.","Path relative to <code>anchor</code>’s containing directory.","Path in <code>Vfs</code>.","Wrapper around an absolute [<code>Path</code>].","Wrapper around an absolute [<code>PathBuf</code>].","Handle to a file in [<code>Vfs</code>]","","Storage for all files read by rust-analyzer.","Changed file in the [<code>Vfs</code>].","Id of the changed file","Kind of change","Returns <code>true</code> if the change is not <code>Delete</code>.","Returns <code>true</code> if the change is <code>Create</code> or <code>Delete</code>.","Kind of file change.","The file was (re-)created","The file was modified","The file was deleted","Amount of files currently stored.","Id of the given path if it exists in the <code>Vfs</code> and is not …","File path corresponding to the given <code>file_id</code>.","File content corresponding to the given <code>file_id</code>.","Returns an iterator over the stored ids and their …","Update the <code>path</code> with the given <code>contents</code>. <code>None</code> means the …","Returns <code>true</code> if the <code>Vfs</code> contains changes.","Drain and returns all the changes in the <code>Vfs</codereates an “in-memory” path from <code>/</code>-separated string.","Returns the <code>AbsPath</code> representation of <code>self</code> if <code>self</code> is on …","Creates a new <code>VfsPath</code> with <code>path</code> adjoined to <code>self</code>.","Remove the last component of <code>self</code> if there is one.","Returns <code>true</code> if <code>other</code> is a prefix of <code>self</code>.","Returns the <code>VfsPath</code> without its final component, if there …","Returns <code>self</code>’s base name and file extension.","Wrap the given absolute path in <code>AbsPath</code>","Equivalent of [<code>Path::parent</code>] for <code>AbsPath</code>.","Equivalent of [<code>Path::join</code>] for <code>AbsPath</code>.","Normalize the given path:","Equivalent of [<code>Path::to_path_buf</code>] for <code>AbsPath</code>.","Equivalent of [<code>Path::strip_prefix</code>] for <code>AbsPath</code>.","Wrap the given absolute path in <code>AbsPathBuf</code>","Coerces to a <code>AbsPath</code> slice.","Equivalent of [<code>PathBuf::pop</code>] for <code>AbsPathBuf</code>."],"i":[0,0,1,1,1,1,1,1,0,2,2,0,3,3,3,0,0,4,4,0,5,5,5,0,6,6,6,0,7,8,8,8,7,9,0,0,10,10,10,10,4,4,4,4,4,5,5,0,11,11,0,12,12,0,0,0,0,13,0,0,14,14,14,14,0,15,15,15,16,16,16,16,16,16,16,16,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,19,19,19,19,19,19,19,19,19,19,13,13,13,13,13,13,13,13,13,13,16,16,16,16,16,16,16,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,18,19,18,19,19,19,19,19,18,19,19,19,18,18,19,19,18,19,19,19,18,18,17,12,11,1,4,5,17,13,15,1,2,3,5,16,17,13,12,12,11,11,1,1,17,17,13,13,15,17,13,12,11,1,2,4,5,6,7,17,13,15,16,17,17,13,17,17,17,17,17,17,17,18,18,18,18,18,18,19,19,19],"f":[null,null,[[],["usize",15]],[[["anchoredpath",3]],[["fileid",3],["option",4]]],[[["vfspath",3]],[["option",4],["fileid",3]]],[[["fileid",3]],[["option",4],["vfspath",3]]],[[["vfspath",3],["fileid",3]]],[[]],null,[[],["filesetconfigbuilder",3]],[[["vfs",3]],[["fileset",3],["vec",3]]],null,[[],["usize",15]],[[["vfspath",3],["vec",3]]],[[],["filesetconfig",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["sender",6]]],[[["config",3]]],[[["abspathbuf",3]]],[[["abspath",3]],[["vec",3],["option",4]]],[[["abspathbuf",3]],["entry",4]],[[["abspathbuf",3]],["entry",4]],[[["abspathbuf",3]],["entry",4]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,[[],["usize",15]],[[["vfspath",3]],[["fileid",3],["option",4]]],[[["fileid",3]],["vfspath",3]],[[["fileid",3]]],[[]],[[["vfspath",3],["vec",3],["option",4]],["bool",15]],[[],["bool",15]],[[],[["changedfile",3],["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["abspath",3]],["ordering",4]],[[["abspathbuf",3]],["ordering",4]],[[],["abspath",3]],[[],["abspathbuf",3]],[[["pathbuf",3]],[["abspathbuf",3],["pathbuf",3],["result",4]]],[[["str",15]],[["abspathbuf",3],["pathbuf",3],["result",4]]],[[],["path",3]],[[],["abspath",3]],[[],["path",3]],[[]],[[]],[[["abspath",3]],[["ordering",4],["option",4]]],[[["abspathbuf",3]],[["ordering",4],["option",4]]],[[],["abspath",3]],[[],["path",3]],[[["abspath",3]],["bool",15]],[[["abspathbuf",3]],["bool",15]],[[["abspathbuf",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspathbuf",3]]],[[],["anchoredpathbuf",3]],[[],["anchoredpath",3]],[[],["fileset",3]],[[],["entry",4]],[[],["directories",3]],[[],["vfspath",3]],[[],["fileid",3]],[[],["changekind",4]],[[],["fileset",3]],[[]],[[]],[[],["directories",3]],[[],["vfs",3]],[[["vfspath",3]],["ordering",4]],[[["fileid",3]],["ordering",4]],[[["anchoredpathbuf",3]],["bool",15]],[[["anchoredpathbuf",3]],["bool",15]],[[["anchoredpath",3]],["bool",15]],[[["anchoredpath",3]],["bool",15]],[[["fileset",3]],["bool",15]],[[["fileset",3]],["bool",15]],[[["vfspath",3]],["bool",15]],[[["vfspath",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["changekind",4]],["bool",15]],[[["vfspath",3]],[["ordering",4],["option",4]]],[[["fileid",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["string",3]],["vfspath",3]],[[],[["abspath",3],["option",4]]],[[["str",15]],[["vfspath",3],["option",4]]],[[],["bool",15]],[[["vfspath",3]],["bool",15]],[[],[["vfspath",3],["option",4]]],[[],["option",4]],[[["path",3]],["abspath",3]],[[],[["option",4],["abspath",3]]],[[],["abspathbuf",3]],[[],["abspathbuf",3]],[[],["abspathbuf",3]],[[["abspath",3]],[["relpath",3],["option",4]]],[[["pathbuf",3]],["abspathbuf",3]],[[],["abspath",3]],[[],["bool",15]]],"p":[[3,"FileSet"],[3,"FileSetConfig"],[3,"FileSetConfigBuilder"],[4,"Entry"],[3,"Directories"],[3,"Config"],[4,"Message"],[13,"Progress"],[13,"Loaded"],[8,"Handle"],[3,"AnchoredPath"],[3,"AnchoredPathBuf"],[3,"FileId"],[3,"ChangedFile"],[4,"ChangeKind"],[3,"Vfs"],[3,"VfsPath"],[3,"AbsPath"],[3,"AbsPathBuf"]]},\
"vfs_notify":{"doc":"An implementation of <code>loader::Handle</code>, based on <code>walkdir</code> and …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NotifyHandle","from","into","borrow","borrow_mut","try_from","try_into","type_id","fmt","spawn","set_config","invalidate","load_sync"],"q":["vfs_notify","","","","","","","","","","","",""],"d":["","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["sender",6]],["notifyhandle",3]],[[["config",3]]],[[["abspathbuf",3]]],[[["abspath",3]],[["vec",3],["option",4]]]],"p":[[3,"NotifyHandle"]]},\
"xtask":{"doc":"See https://github.com/matklad/cargo-xtask/.","t":[0,3,12,4,13,13,13,13,13,13,13,13,3,12,3,12,12,12,12,12,3,3,12,3,12,3,12,3,12,3,12,18,11,11,11,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,3,12,12,12,3,12,12,5,5,5,0,5,5,3,12,12,5,5,0,5,5,3,12,12,12,12,12,11,5,5,5,0,5,3,12,12,12,11,5,0,5,3,12,12,12,11,5,5,5,5,5,17,5,5,5,3,12,12,12,5,3,12,12,11,0,3,12,12,12,12,12,12,17,3,12,12,12,3,12,12,12,12,4,13,13,12,12,12,4,13,13,3,12,12,12,12,0,17,11,3,12,17,3,12,4,13,13,13,5,5,5,5,0,0,5,4,13,13,13,13,13,3,12,12,5,5,5,11,11,0,11,5,5,5,5,5,3,12,12,12,11,11,11,0,6,11,5,3,12,12,12,12,12,3,12,12,12,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11],"n":["flags","Xtask","subcommand","XtaskCmd","Help","Install","FuzzTests","Release","Promote","Dist","Metrics","Bb","Help","help","Install","client","code_bin","server","mimalloc","jemalloc","FuzzTests","Release","dry_run","Promote","dry_run","Dist","client_patch_version","Metrics","dry_run","Bb","suffix","HELP","from_env","server","client","codegen","gen_syntax","generate_syntax","generate_tokens","generate_nodes","write_doc_comment","generate_syntax_kinds","to_upper_snake_case","to_lower_snake_case","to_pascal_case","pluralize","lower","lower_enum","lower_rule","lower_comma_list","deduplicate_fields","extract_enums","extract_struct_traits","extract_struct_trait","extract_enum_traits","gen_parser_tests","generate_parser_tests","Test","name","text","ok","Tests","ok","err","collect_tests","tests_from_dir","existing_tests","gen_lint_completions","generate_lint_completions","generate_descriptor","ClippyLint","help","id","generate_descriptor_clippy","push_lint_completion","gen_assists_docs","generate_assists_tests","generate_assists_docs","Assist","id","location","doc","before","after","collect","generate_tests","hide_hash_comments","reveal_hash_comments","gen_feature_docs","generate_feature_docs","Feature","id","location","doc","collect","is_valid_feature_name","gen_diagnostic_docs","generate_diagnostic_docs","Diagnostic","id","location","doc","collect","is_valid_diagnostic_name","docs","used","ensure_file_contents","normalize_newlines","PREAMBLE","reformat","extract_comment_blocks","extract_comment_blocks_with_empty_lines","CommentBlock","id","line","contents","do_extract_comment_blocks","Location","file","line","new","ast_src","KindsSrc","punct","keywords","contextual_keywords","literals","tokens","nodes","KINDS_SRC","AstSrc","tokens","nodes","enums","AstNodeSrc","doc","name","traits","fields","Field","Token","Node","name","ty","cardinality","Cardinality","Optional","Many","AstEnumSrc","doc","name","traits","variants","install","REQUIRED_RUST_VERSION","run","ClientOpt","code_bin","VS_CODES","ServerOpt","malloc","Malloc","System","Mimalloc","Jemalloc","fix_path_for_mac","install_client","install_server","check_version","release","changelog","get_changelog","PrKind","Feature","Fix","Internal","Other","Skip","PrInfo","message","kind","unescape","parse_changelog_line","parse_title_line","run","run","dist","run","dist_client","dist_server","get_target","exe_suffix","gzip","Patch","path","original_contents","contents","new","replace","commit","metrics","Unit","run","parse_metrics","Metrics","host","timestamp","revision","perf_revision","metrics","Host","os","cpu","mem","new","report","json","to_json","new","to_json","main","project_root","rust_files","rust_files_in","ensure_rustfmt","run_fuzzer","date_iso","is_release_tag","files_in","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","drop","clone","clone","default","default","default","eq","ne","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from_env_","from_vec_","parse_","parse_","parse_","parse_","parse_","parse_","parse_","parse_","parse_","HELP_","is_many","token_kind","method_name","ty","remove_field","measure_build","measure_analysis_stats_self","measure_analysis_stats","measure_analysis_stats_path"],"q":["xtask","xtask::flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask","xtask::codegen","xtask::codegen::gen_syntax","","","","","","","","","","","","","","","","","","xtask::codegen","xtask::codegen::gen_parser_tests","","","","","","","","","","","xtask::codegen","xtask::codegen::gen_lint_completions","","","","","","","xtask::codegen","xtask::codegen::gen_assists_docs","","","","","","","","","","","","xtask::codegen","xtask::codegen::gen_feature_docs","","","","","","","xtask::codegen","xtask::codegen::gen_diagnostic_docs","","","","","","","xtask::codegen","","","","","","","","","","","","","","","","","xtask","xtask::ast_src","","","","","","","","","","","","","","","","","","","","xtask::ast_src::Field","","","xtask::ast_src","","","","","","","","xtask","xtask::install","xtask::flags","xtask::install","","","","","","","","","","","","","xtask","xtask::release","xtask::release::changelog","","","","","","","","","","","","","xtask::flags","","xtask","xtask::flags","xtask::dist","","","","","","","","","","","","xtask","xtask::metrics","xtask::flags","xtask::metrics","","","","","","","","","","","","","","","","","xtask","","","","","","","","","xtask::flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::codegen::gen_parser_tests","","","","","","","","","","","","","","xtask::codegen::gen_lint_completions","","","","","","","xtask::codegen::gen_assists_docs","","","","","","","","xtask::codegen::gen_feature_docs","","","","","","","","xtask::codegen::gen_diagnostic_docs","","","","","","","","xtask::codegen","","","","","","","","","","","","","","","xtask::ast_src","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::install","","","","","","","","","","","","","","","","","","","","","","","xtask::release::changelog","","","","","","","","","","","","","","","","xtask::dist","","","","","","","xtask::metrics","","","","","","","","","","","","","","xtask::dist","xtask::install","xtask::release::changelog","xtask::codegen::gen_parser_tests","xtask::codegen::gen_lint_completions","xtask::ast_src","","","","xtask::flags","","","","","","","","","","xtask::codegen::gen_parser_tests","","xtask::codegen::gen_assists_docs","xtask::codegen::gen_feature_docs","xtask::codegen::gen_diagnostic_docs","xtask::codegen","xtask::ast_src","","","","","xtask::metrics","","xtask::codegen::gen_assists_docs","xtask::codegen::gen_feature_docs","xtask::codegen::gen_diagnostic_docs","xtask::codegen","xtask::flags","","","","","","","","","","","","xtask::ast_src","","","","","xtask::metrics","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We use code generation heavily in rust-analyzer.","This module generates AST datatype used by rust-analyzer.","","","","","","","","","","","","","","","","","","","This module greps parser’s code for specially formatted …","","","","","","","","","","","","Generates descriptors structure for unstable feature from …","","","","","","","","Generates <code>assists.md</code> documentation.","","","","","","","","","","","","","Generates <code>assists.md</code> documentation.","","","","","","","","Generates <code>assists.md</code> documentation.","","","","","","","","","","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","","","","","","","","","","","","","","","Defines input for code generation process.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Installs rust-analyzer language server and/or editor …i":[0,0,1,0,2,2,2,2,2,2,2,2,0,3,0,4,4,4,4,4,0,0,5,0,6,0,7,0,8,0,9,1,1,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,0,11,11,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,13,13,13,13,13,13,0,0,0,0,0,0,14,14,14,14,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,17,17,17,0,0,18,18,18,18,18,18,0,0,19,19,19,0,20,20,20,20,0,21,21,22,22,22,0,23,23,0,24,24,24,24,0,0,4,0,25,0,0,26,0,27,27,27,0,0,0,0,0,0,0,0,28,28,28,28,28,0,29,29,0,0,0,5,6,0,7,0,0,0,0,0,0,30,30,30,30,30,30,0,0,8,0,0,31,31,31,31,31,0,32,32,32,31,31,31,31,32,32,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,33,33,33,33,33,33,33,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,32,32,32,32,32,32,32,30,25,28,11,12,19,21,21,23,1,2,3,4,33,5,6,7,8,9,10,11,13,14,15,17,19,20,21,23,24,31,32,13,14,15,17,1,1,1,3,4,33,5,6,7,8,9,1,21,21,21,21,20,31,31,31,31],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],[[],[["option",4],["serveropt",3]]],[[],[["option",4],["clientopt",3]]],null,null,[[],["result",6]],[[["astsrc",3]],[["result",6],["string",3]]],[[["kindssrc",3],["astsrc",3]],[["result",6],["string",3]]],[[["string",3]]],[[["kindssrc",3]],[["result",6],["string",3]]],[[["str",15]],["string",3]],[[["str",15]],["string",3]],[[["str",15]],["string",3]],[[["str",15]],["string",3]],[[["grammar",3]],["astsrc",3]],[[["rule",4],["grammar",3]],[["option",4],["vec",3]]],[[["rule",4],["string",3],["option",4],["vec",3],["grammar",3]]],[[["rule",4],["string",3],["option",4],["vec",3],["grammar",3]],["bool",15]],[[["astsrc",3]]],[[["astsrc",3]]],[[["astsrc",3]]],[[["astnodesrc",3],["str",15]]],[[["astsrc",3]]],null,[[],["result",6]],null,null,null,null,null,null,null,[[["str",15]],[["vec",3],["test",3]]],[[["path",3]],[["tests",3],["result",6]]],[[["bool",15],["path",3]],[["result",6],["hashmap",3]]],null,[[],["result",6]],[[["pathbuf",3],["string",3]],["result",6]],null,null,null,[[["path",3],["string",3]],["result",6]],[[["str",15],["string",3]]],null,[[],["result",6]],[[],["result",6]],null,null,null,null,null,null,[[],[["result",6],["vec",3]]],[[],["result",6]],[[["str",15]],["string",3]],[[["str",15]],["string",3]],null,[[],["result",6]],null,null,null,null,[[],[["result",6],["vec",3]]],[[["str",15]],[["string",3],["result",6]]],null,[[],["result",6]],null,null,null,null,[[],[["result",6],["vec",3]]],[[["str",15]],[["string",3],["result",6]]],[[],["result",6]],[[]],[[["path",3],["str",15]],["result",6]],[[["str",15]],["string",3]],null,[[["str",15]],[["result",6],["string",3]]],[[["str",15]],[["vec",3],["vec",3]]],[[["str",15]],[["vec",3],["commentblock",3]]],null,null,null,null,[[["bool",15],["str",15]],["vec",3]],null,null,null,[[["usize",15],["pathbuf",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],null,null,null,null,null,null,null,null,null,[[],["result",6]],[[["clientopt",3]],["result",6]],[[["serveropt",3]],["result",6]],[[["u32",15],["str",15]],["bool",15]],null,null,[[["usize",15],["str",15]],[["result",6],["string",3]]],null,null,null,null,null,null,null,null,null,[[["str",15]],["string",3]],[[["str",15]],[["prinfo",3],["option",4]]],[[["str",15]],["prinfo",3]],[[],["result",6]],[[],["result",6]],null,[[],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[],["string",3]],[[["str",15]],["string",3]],[[["path",3]],["result",6]],null,null,null,null,[[],[["patch",3],["result",6]]],[[["str",15]],["patch",3]],[[],["result",6]],null,null,[[],["result",6]],[[["str",15]],["vec",3]],null,null,null,null,null,null,null,null,null,null,[[],[["metrics",3],["result",6]]],[[["u64",15],["string",3],["str",15]]],[[],["string",3]],[[["object",3]]],[[],[["result",6],["host",3]]],[[["object",3]]],[[],["result",6]],[[],["pathbuf",3]],[[]],[[["path",3]]],[[],["result",6]],[[],["result",6]],[[],[["result",6],["string",3]]],[[["str",15]],["bool",15]],[[["path",3],["str",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["clientopt",3]],[[],["prkind",4]],[[],["tests",3]],[[],["clippylint",3]],[[],["astsrc",3]],[[["field",4]],["bool",15]],[[["field",4]],["bool",15]],[[["cardinality",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",6]],[[["vec",3],["osstring",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],null,[[],["bool",15]],[[],[["tokenstream",3],["option",4]]],[[],["ident",3]],[[],["ident",3]],[[["usize",15],["vec",3]]],[[],["result",6]],[[],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]]],"p":[[3,"Xtask"],[4,"XtaskCmd"],[3,"Help"],[3,"Install"],[3,"Release"],[3,"Promote"],[3,"Dist"],[3,"Metrics"],[3,"Bb"],[3,"Test"],[3,"Tests"],[3,"ClippyLint"],[3,"Assist"],[3,"Feature"],[3,"Diagnostic"],[3,"CommentBlock"],[3,"Location"],[3,"KindsSrc"],[3,"AstSrc"],[3,"AstNodeSrc"],[4,"Field"],[13,"Node"],[4,"Cardinality"],[3,"AstEnumSrc"],[3,"ClientOpt"],[3,"ServerOpt"],[4,"Malloc"],[4,"PrKind"],[3,"PrInfo"],[3,"Patch"],[3,"Metrics"],[3,"Host"],[3,"FuzzTests"]]}\
}');
initSearch(searchIndex);